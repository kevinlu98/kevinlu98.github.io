<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>冷文聊编辑</title>
  
  
  <link href="https://study.kevinlu98.cn/atom.xml" rel="self"/>
  
  <link href="https://study.kevinlu98.cn/"/>
  <updated>2023-03-14T14:09:14.444Z</updated>
  <id>https://study.kevinlu98.cn/</id>
  
  <author>
    <name>Mr丶冷文</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>(九)Linux服务与进程管理</title>
    <link href="https://study.kevinlu98.cn/2023/03/14/fu-wu-yu-jin-cheng-guan-li.html"/>
    <id>https://study.kevinlu98.cn/2023/03/14/fu-wu-yu-jin-cheng-guan-li.html</id>
    <published>2023-03-14T03:03:00.000Z</published>
    <updated>2023-03-14T14:09:14.444Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着前面那些命令的学习及掌握，我们的教程也逐渐来到了尾声，我相信大家也渐渐的可以使用<code>Linux</code>操作系统，这节课就给大家讲讲服务与进程的管理，让大家对Linux系统的运行有个初步的认识和理解</p><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>我们先来看下什么是进程？</p><p>Linux中每个执行的程序都称为一个进程，且每个进程都会都会对应一个进程ID(<strong>PID</strong>)</p><p>进程可以以两种方式存在：</p><ul><li>前台：用户当前屏幕正在操作的进程</li><li>后台：用户实际在操作，但屏幕上未显示</li></ul><p>如果一个进程是由另一个进程创建的，则称该进程为创建它的进程的<strong>子进程</strong>，称创建其的进程为它的<strong>父进程</strong></p><p>如果一个完成了生命周期但却依然留在进程表中的进程，我们称之为 <strong>僵尸进程</strong></p><p>如果一个进程以后台进程形式常驻系统中并提供系统服务，我们则称之为<strong>守护进程</strong></p><h3 id="创建进程"><a href="#创建进程" class="headerlink" title="创建进程"></a>创建进程</h3><h4 id="前台进程"><a href="#前台进程" class="headerlink" title="前台进程"></a>前台进程</h4><p>前台进程指在终端中运行的进程，一旦这这终端关闭，这个进程也会随之消失，当然我们也可以通过<code>Ctrl + C</code>来终止进程</p><p>我们写个简单的程序体会一下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> `date`</span><br><span class="line">        <span class="built_in">sleep</span> <span class="number">1</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>为其加上执行权限并执行，可以看到每隔一秒会向屏幕打印一下时间</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x start.sh &amp;&amp; ./start.sh</span><br></pre></td></tr></table></figure><p>我们结束进程然后将输出重定向到1.txt</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start.sh &gt; <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><p>我们另起一个终端来监听<code>1.txt</code>，可以看到每隔一秒文件会多一行内容，说明我们的<code>start.sh</code>在执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail <span class="operator">-f</span> <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><p>我们关闭<code>start.sh</code>那个终端，再来看监听的这边，可以看到文件中已经没有内容输出了</p><p>我们还可以在前台进程执行时使用<code>Ctrl + Z</code>将其挂起到后台，但这个时候进程会被暂停，可以看到屏幕上输出了一个序号，我们可以使用这个序号用<code>fg</code>切换该进程到前台，当然我们也可以使用<code>bg</code>将一个后台暂停的进程变为后台执行</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/1678796460897.png"></p><p>我们也可以通过<code>jobs</code>命令来查看被我们挂到后台的进程</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/1678796519934.png"></p><p>这里总结了个表格大家可以看看</p><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>Ctrl + Z</td><td>可以把这个进程放到后台执行，但进程会被暂停</td></tr><tr><td>jobs</td><td>查看当前有多少在后台运行的进程.它是一个作业控制命令</td></tr><tr><td>fg</td><td>将后台中的命令调至前台继续运行是通过，参数是 jobs 命令查到的后台正在执行的命令的序号（不是 pid)</td></tr><tr><td>bg</td><td>将一个在后台暂停的命令，变成继续执行，参数是 jobs 命令查到的后台正在执行的命令的序号（不是 pid)</td></tr></tbody></table><h4 id="后台进程"><a href="#后台进程" class="headerlink" title="后台进程"></a>后台进程</h4><p>后台进程也叫守护进程,是运行在后台的一种特殊进程。它独立于控制终端并且周期性地执行某种任务或等待处理某些发生的事件，开启进程后台运行的方式有三种:</p><ul><li>在执行的命令后面添加 <code>&amp;</code> 符号</li><li>利用 <code>ctrl + z</code> 和 <code>bg</code>搭配</li><li>使用 <code>nohup</code> 的方式后台运行进程(常用)</li></ul><p>分别使用上述三种方法后台启动<code>start.sh</code>，可以使用<code>kill -9 pid</code>终止一个进程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./start.sh &gt; <span class="number">1</span>.txt &amp;</span><br><span class="line">./start.sh &gt; <span class="number">1</span>.txt </span><br><span class="line">ctrl + z</span><br><span class="line">bg <span class="number">1</span></span><br><span class="line">nohup ./start.sh &gt; <span class="number">1</span>.txt </span><br></pre></td></tr></table></figure><h3 id="进程相关命令"><a href="#进程相关命令" class="headerlink" title="进程相关命令"></a>进程相关命令</h3><h4 id="ps-查看进程"><a href="#ps-查看进程" class="headerlink" title="ps[查看进程]"></a>ps[查看进程]</h4><p>Linux ps （英文全拼：process status）命令用于显示当前进程的状态，类似于 windows 的任务管理器，有如下参数：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>显示所有终端机下该用户执行的进程</td></tr><tr><td>a</td><td>显示现行终端机下的所有进程，包括其他用户的进程</td></tr><tr><td>-A,-e</td><td>显示所有进程</td></tr><tr><td>e</td><td>列出进程时，显示每个进程所使用的环境变量</td></tr><tr><td>-f</td><td>显示UID,PPIP,C与STIME栏位</td></tr><tr><td>f</td><td>用ASCII字符显示树状结构，表达进程间的相互关系</td></tr><tr><td>u</td><td>以用户为主的格式来显示进程状况，增加列 User、%CPU、%MEM、VSZ、RSS等</td></tr><tr><td>-u&lt;用户名&gt;</td><td>按用户名筛选进程</td></tr><tr><td>x</td><td>显示所有进程，不以终端机来区分</td></tr></tbody></table><p>看完这个参数表我们来理解这些参数的含义，对比下输出，我们就知道为什么你经常在网上的贴子中有看到<code>ps aux</code>了</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ps</span> <span class="literal">-a</span></span><br><span class="line"><span class="built_in">ps</span> a</span><br><span class="line"><span class="built_in">ps</span> <span class="literal">-x</span></span><br><span class="line"><span class="built_in">ps</span> ax</span><br><span class="line"><span class="comment"># 可以给上述命令加上u参数来看执行进程和用户</span></span><br></pre></td></tr></table></figure><p>我们不难发现，当我们执行<code>ps ax</code>时我们可以看到所有用户的所有进程，这个时候再加上参数<code>u</code>就可以显示这些进程和详细信息了</p><p>这时有人要说了<code>-A</code>或<code>-e</code>参数本身不就是这样吗？对的，但如果我们需要打印详细信息时就会有问题，因为<code>aux</code>这三个参数都是不加<code>-</code>的，所以我们可以写在一起，但如果使用<code>-e</code>或<code>-A</code>，命令就成了<code>ps -A u</code>或<code>ps -e u</code>，我们就需要区别加<code>-</code>的参数和不加的参数，所以一般<code>-A</code>和<code>-e</code>与<code>-f</code>一起使用<code>ps -ef</code>或<code>ps -Af</code>，而<code>ax</code>与<code>u</code>一起使用<code>ps aux</code><br>为什么网上很多人都写<code>-aux</code>，这是因为<code>Linux</code>命令参数一般会加上<code>-</code>，但<code>-aux</code>中<code>u</code>如果加<code>-</code>必须要配合参数使用，但我们又没有给参数，所以这里就是不带<code>-</code>的<code>u</code>，这里<code>aux</code>又是放到了一起，所以这里以<code>u</code>为主，都不加<code>-</code>，比如我们执行<code>ps -eu</code>也是如此，它调用的是不加<code>-</code>的<code>e</code>参数而非<code>-e</code>，所以就打印出了环境变量，而<code>-A</code>这里因为没有对应的不加<code>-</code>的参数，所以执行<code>ps -Au</code>会报错</p><p>ps进程表字段说明</p><table><thead><tr><th>字段名</th><th>含义</th></tr></thead><tbody><tr><td>USER,UID</td><td>用户名</td></tr><tr><td>PID</td><td>进程 ID</td></tr><tr><td>PPID</td><td>父进程 ID</td></tr><tr><td>%CPU,C</td><td>cpu使用率</td></tr><tr><td>%MEM</td><td>内存占用率</td></tr><tr><td>VSZ</td><td>占用的虚拟内存，单位 KB</td></tr><tr><td>RSS</td><td>占用的物理内存，单位 KB</td></tr><tr><td>TTY</td><td>使用的终端: ? 表示与终端无关;pts&#x2F;0 表示由网络连接的进程</td></tr><tr><td>START</td><td>进程启动时间</td></tr><tr><td>TIME,STIME</td><td>进程占用 CPU 的总时间，单位分钟（00:05 表示5分钟）</td></tr><tr><td>COMMAND,CMD</td><td>进程启动时的命令行</td></tr><tr><td>STAT</td><td>进程状态，具体含义如下</td></tr></tbody></table><p>进程STAT状态含义：</p><ul><li>D: 无法中断的休眠状态 (通常 IO 的进程)</li><li>R: run，正在执行中</li><li>S: sleep，静止状态</li><li>T: 暂停执行</li><li>Z: 不存在但暂时无法消除</li><li>W: 没有足够的记忆体分页可分配</li><li>&lt;: 高优先序的行程</li><li>N: 低优先序的行程</li><li>L: 有记忆体分页分配并锁在记忆体内 (实时系统或捱A I&#x2F;O)</li><li>s：进程的领导者，其下有子进程</li><li>|：多线程，克隆线程</li><li>+：位于后台的进程组</li></ul><h4 id="pstree-查看进程树"><a href="#pstree-查看进程树" class="headerlink" title="pstree[查看进程树]"></a>pstree[查看进程树]</h4><p>Linux pstree(英文全称：display a tree of processes）) 命令将所有进程以树状图显示，树状图将会以 pid (如果有指定) 或是以 init 这个基本进程为根 (root)，如果有指定使用者 id，则树状图会只显示该使用者所拥有的进程</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pstree [-<span class="type">a</span>] <span class="comment"># 显示该进程的完整指令及参数</span></span><br></pre></td></tr></table></figure><h4 id="top-实时进程动态"><a href="#top-实时进程动态" class="headerlink" title="top[实时进程动态]"></a>top[实时进程动态]</h4><p>Linux top命令用于实时显示 process 的动态，有如下参数</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>d</td><td>改变显示的更新速度，或是在交谈式指令列( interactive command)按 s</td></tr><tr><td>n</td><td>更新的次数，完成后将会退出 top</td></tr><tr><td>p</td><td>显示指定进程id的进程信息</td></tr><tr><td>i</td><td>忽略僵尸进程</td></tr></tbody></table><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/1678793888119.png"></p><p><strong>时间行</strong></p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>top</td><td>当前时间</td></tr><tr><td>up</td><td>系统运行时间</td></tr><tr><td>users</td><td>当前登录用户数量</td></tr><tr><td>load average</td><td>负载均值</td></tr></tbody></table><p><strong>进程统计</strong></p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>total</td><td>总计进程数</td></tr><tr><td>running</td><td>运行中进程数</td></tr><tr><td>sleeping</td><td>睡眠中进程数</td></tr><tr><td>stop</td><td>停止进程数</td></tr><tr><td>zombie</td><td>闲置&#x2F;僵尸进程数</td></tr></tbody></table><p><strong>内存行</strong></p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>total</td><td>总共</td></tr><tr><td>used</td><td>使用中</td></tr><tr><td>free</td><td>空闲</td></tr><tr><td>buffers&#x2F;cache</td><td>缓存&#x2F;缓冲</td></tr></tbody></table><p><strong>CPU 行&#x2F;交换行</strong></p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>us (user space)</td><td>用户占用 cpu率</td></tr><tr><td>sy (system)</td><td>系统占用 cpu率</td></tr><tr><td>ni (nice)</td><td>改变过优先级的进程占用CPU的百分比</td></tr><tr><td>id (idolt)</td><td>空闲CPU率</td></tr><tr><td>wa (wait)</td><td>IO等待占用CPU的百分比</td></tr><tr><td>hi (Hardware IRQ)</td><td>硬中断占用CPU的百分比</td></tr><tr><td>si (Software Interrupts)</td><td>软中断占用CPU的百分比</td></tr></tbody></table><p><strong>字段说明</strong></p><table><thead><tr><th>字段名</th><th>含义</th></tr></thead><tbody><tr><td>PID</td><td>进程id</td></tr><tr><td>USER</td><td>进程所有者</td></tr><tr><td>PR</td><td>进程优先级</td></tr><tr><td>NI</td><td>nice值。负值表示高优先级，正值表示低优先级</td></tr><tr><td>VIRT</td><td>进程使用的虚拟内存总量，单位kb。VIRT&#x3D;SWAP+RES</td></tr><tr><td>RES</td><td>进程使用的、未被换出的物理内存大小，单位kb。RES&#x3D;CODE+DATA</td></tr><tr><td>SHR</td><td>共享内存大小，单位kb</td></tr><tr><td>S</td><td>进程状态。D&#x3D;不可中断的睡眠状态 R&#x3D;运行 S&#x3D;睡眠 T&#x3D;跟踪&#x2F;停止 Z&#x3D;僵尸进程</td></tr><tr><td>%CPU</td><td>上次更新到现在的CPU时间占用百分比</td></tr><tr><td>%MEM</td><td>进程使用的物理内存百分比</td></tr><tr><td>TIME+</td><td>进程使用的CPU时间总计，单位1&#x2F;100秒</td></tr><tr><td>COMMAND</td><td>进程名称（命令名&#x2F;命令行）</td></tr></tbody></table><h4 id="kill-终止进程"><a href="#kill-终止进程" class="headerlink" title="kill[终止进程]"></a>kill[终止进程]</h4><p>kill 可将指定的信息送至程序。预设的信息为 SIGTERM(15)，可将指定程序终止。若仍无法终止该程序，可使用 SIGKILL(9) 信息尝试强制删除程序</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> [-&lt;信息名称或编号&gt;][程序]</span><br></pre></td></tr></table></figure><p>进程编号信息：</p><ul><li>1 (HUP)：重新加载进程。</li><li>9 (KILL)：杀死一个进程。</li><li>15 (TERM)：正常停止一个进程</li></ul><h4 id="lsof-端口占用查看进程"><a href="#lsof-端口占用查看进程" class="headerlink" title="lsof[端口占用查看进程]"></a>lsof[端口占用查看进程]</h4><p>lsof(list open files)是一个列出当前系统打开文件的工具,通常用其查看某个端口被那个程序占用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof <span class="literal">-i</span>[:端口号]</span><br><span class="line"><span class="comment"># 不加端口号查看所有</span></span><br></pre></td></tr></table></figure><p>我们可以先后台运行一个redis-server，然后再启动redis-server，发现提示<code>6379</code>端口被占用</p><p>这个时候我们就可以用<code>lsof -i:6379</code>来查看<code>6379</code>被那个进程占用了，kill掉该进程然后我们又能启动redis-server了</p><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><p>服务的本质其实就是后台进程，即守护进程，一般情况下随系统启动而启动，在CentOS7中采用<code>systemd</code>管理服务，一般情况下每个服务会对应一个*.service文件，目录在<code>/usr/lib/systemd/system</code>下</p><h3 id="systemctl-管理服务"><a href="#systemctl-管理服务" class="headerlink" title="systemctl[管理服务]"></a>systemctl[管理服务]</h3><p>基本上服务的管理都是通过<code>systemctl</code>命令来完成的，可以管理服务状态，开机是否启动等</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl [<span class="type">option</span>] [<span class="type">service_name</span>]</span><br><span class="line"><span class="comment"># 不加任何参数则为列出系统所有服务</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>参数</th></tr></thead><tbody><tr><td>start</td><td>启动服务</td></tr><tr><td>stop</td><td>停止服务</td></tr><tr><td>restart</td><td>重启</td></tr><tr><td>reload</td><td>不关闭服务的情况下，重新读取服务配置文件</td></tr><tr><td>enable</td><td>开机启动</td></tr><tr><td>disable</td><td>开机不启动</td></tr><tr><td>status</td><td>查看指定服务状态</td></tr></tbody></table><p>比如我们可以查看防火墙的状态</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><h3 id="练习：关闭防火墙"><a href="#练习：关闭防火墙" class="headerlink" title="练习：关闭防火墙"></a>练习：关闭防火墙</h3><p>这里就在Linux上安装nginx，然后由于防火墙的原因我们无法访问nginx，我们就只可以关闭防火墙访问，然后取消访问墙的开机自启，重启Linux，启动nginx再次防问</p><h4 id="scp远程复制"><a href="#scp远程复制" class="headerlink" title="scp远程复制"></a>scp远程复制</h4><p>scp是 secure copy 的缩写，用于 Linux 之间复制文件和目录，在linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp [<span class="type">options</span>] file_source file_target</span><br><span class="line"><span class="comment"># 这里的文件路径为远程文件地址 用户名@ip:/文件路径</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>参数</th></tr></thead><tbody><tr><td>-P</td><td>注意是大写的P, port是指定数据传输用到的ssh端口号</td></tr><tr><td>-p</td><td>保留原文件的修改时间，访问时间和访问权限</td></tr><tr><td>-r</td><td>递归复制整个目录</td></tr></tbody></table><p>拷贝电脑上的任意文件到linux上</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp lengwen@<span class="number">192.168</span>.<span class="number">31.105</span>:/Users/lengwen/Desktop/nginx<span class="literal">-1</span>.<span class="number">18.0</span>.tar.gz .</span><br></pre></td></tr></table></figure><p>拷贝Linux上的任意文件到电脑上</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp <span class="number">1</span>.txt lengwen@<span class="number">192.168</span>.<span class="number">31.105</span>:/Users/lengwen/Desktop/</span><br></pre></td></tr></table></figure><h4 id="rz-x2F-sz上传下载"><a href="#rz-x2F-sz上传下载" class="headerlink" title="rz&#x2F;sz上传下载"></a>rz&#x2F;sz上传下载</h4><p>因为<code>termius</code>不支持<code>rz/sz</code>，我Mac上自带的终端也不支持，这个大家自己下去试试</p><h4 id="sftp上传"><a href="#sftp上传" class="headerlink" title="sftp上传"></a>sftp上传</h4><p>现在大部分ssh工具都不支持rz&#x2F;sz的原因就是因为有了sftp<code>，termius</code>中也是支持的，但<code>rz/sz</code>在很多时候也是替代不了的，比如你们公司内网的服务器可能都是使用跳板机登录的，自己的电脑和内网的服务器网络不可达，所以sftp这种方式就不可以用了</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/1678800563813.png"></p><h4 id="实战开始"><a href="#实战开始" class="headerlink" title="实战开始"></a>实战开始</h4><ul><li><p>下载nginx源码包：<a href="https://nginx.org/en/download.html">nginx</a></p></li><li><p>上传解压</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf nginx<span class="literal">-1</span>.<span class="number">18.0</span>.tar.gz</span><br></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install pcre<span class="literal">-devel</span></span><br><span class="line">yum install ‐y zlib zlib‐devel</span><br><span class="line">yum <span class="literal">-y</span> install openssl openssl<span class="literal">-devel</span></span><br></pre></td></tr></table></figure><ul><li>检查环境</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br></pre></td></tr></table></figure><ul><li>编译安装</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><ul><li>启动nginx</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>  /usr/local/nginx/sbin &amp;&amp; sudo ./nginx</span><br></pre></td></tr></table></figure><ul><li>查看进程</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ps</span> <span class="literal">-ef</span> | grep nginx</span><br></pre></td></tr></table></figure><ul><li>使用<code>curl</code>命令访问127.0.0.1，发现返回了nginx的index.html的文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">curl</span> <span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure><ul><li>本机浏览器访问Linux的ip，发现访问不了，这是因为有防火墙，我们关闭下</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><ul><li>浏览器重新访问</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/1678801967385.png"></p><ul><li>开机重启nginx再次访问</li><li>取消防火墙的开机自启</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><ul><li>重启</li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这节课主要带大家学习了下服务和进程的相关概念，进程那里在工作中用到的也挺多的，因为我们开发中把程序部署到服务器上后需要观察服务的运行情况等信息，大家可以好好记一下</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;随着前面那些命令的学习及掌握，我们的教程也逐渐来到了尾声，我相信大家也渐渐的可以使用&lt;code&gt;Linux&lt;/code&gt;操作系统，这节课就给</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="centos" scheme="https://study.kevinlu98.cn/tags/centos/"/>
    
    <category term="shell" scheme="https://study.kevinlu98.cn/tags/shell/"/>
    
    <category term="yum" scheme="https://study.kevinlu98.cn/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>(八)Linux包管理及shell脚本</title>
    <link href="https://study.kevinlu98.cn/2023/03/01/bao-guan-li-ji-jiao-ben.html"/>
    <id>https://study.kevinlu98.cn/2023/03/01/bao-guan-li-ji-jiao-ben.html</id>
    <published>2023-03-01T03:03:00.000Z</published>
    <updated>2023-03-14T14:09:14.443Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们前面学习一环境变量，也带着大家一起安装了jdk，但在我们安装程序的过程中我们发现确实还是比较麻烦的，我们需要自己找软件的包，然后手动解压缩，再设置环境变量等一系列操作才能安装成功，这节课带大家学习一下 <code>CentOS</code>中的包管理工具<code>yum</code>，我们在安装程序的时候就可以非常方便的把上述操作让<code>yum</code>帮我们完成，然后会带大家入门一下shell脚本的一些语法，我们就可以写一些我自己的脚本了，最后带着大家用我们学习的shell脚本去编写一个<code>redis</code>一键安装脚本</p><h2 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h2><p><code>rpm</code>（全称 Redhat Package Manager），是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用，RPM 套件管理方式的出现，让 Linux 易于安装，升级，间接提升了 Linux 的适用度</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm [<span class="type">options</span>]</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>所有软件包，常与-q一起使用查询系统中所有软件包</td></tr><tr><td>-q</td><td>查询</td></tr><tr><td>-i</td><td>安装</td></tr><tr><td>-e</td><td>卸载指定软件包</td></tr><tr><td>-v</td><td>显示rpm执行过程</td></tr><tr><td>-vv</td><td>详细显示rpm执行过程，便于排错</td></tr><tr><td>-h</td><td>安装时列出标记</td></tr><tr><td>–force</td><td>强行置换软件或文件</td></tr><tr><td>–version</td><td>显示版本信息</td></tr></tbody></table><p><strong>练习：</strong></p><ul><li>查询系统安装的jdk列表</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm <span class="literal">-qa</span> | grep jdk</span><br></pre></td></tr></table></figure><ul><li>使用如下命令下载jdk的rpm包</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wget</span> https://repo.huaweicloud.com/java/jdk/<span class="number">8</span>u151<span class="literal">-b12</span>/jdk<span class="literal">-8u151-linux-x64</span>.rpm</span><br></pre></td></tr></table></figure><ul><li>安装jdk的rpm包，很明显我们可以使用<code>-i</code>参数来安装，但我们还看到rpm的执行过程，此时就可以加上<code>-v</code>，如果还想看到安装的进度则可以加上<code>-h</code>参数，这也就是大家在网上看到的<code>rpm -ivh</code>的由来</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm <span class="literal">-ivh</span> jdk<span class="literal">-8u151-linux-x64</span>.rpm</span><br></pre></td></tr></table></figure><h2 id="Yum"><a href="#Yum" class="headerlink" title="Yum"></a>Yum</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li><p><code>yum</code>（全称 Yellow dog Updater, Modified），是一个在 <code>Fedora</code> 和 <code>RedHat</code> 以及 <code>CentOS</code> 中的 Shell 端软件包管理器</p></li><li><p><code>yum</code>基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装</p></li><li><p><code>yum</code> 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记</p></li></ul><p>其实yum就是依赖rpm，在rpm的基础上做了功能的扩展，如自动解决依赖，所以yum不能脱离rpm单独运行</p><p><strong>注：因为我们教程中用的操作系统为CentOS，所以这里的包管理工具就是yum，如果大家是其它操作系统如ubuntu、deepin等可以使用对应操作系统的包管理工具</strong></p><h3 id="yum语法"><a href="#yum语法" class="headerlink" title="yum语法"></a>yum语法</h3><p>yum的执行需要root用户要拥有root权限的用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum [<span class="type">command</span>] [<span class="type">options</span>] [<span class="type">package</span> <span class="type">...</span>]</span><br></pre></td></tr></table></figure><ul><li>command：要进行的操作命令</li><li>options：选项参数</li><li>package：要安装的包</li></ul><h4 id="yum常用命令"><a href="#yum常用命令" class="headerlink" title="yum常用命令"></a>yum常用命令</h4><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>yum check-update</td><td>列出所有可更新的软件清单</td></tr><tr><td>yum update</td><td>更新所有软件</td></tr><tr><td><strong>yum install &lt;package&gt;</strong></td><td><strong>安装指定的软件</strong></td></tr><tr><td>yum update &lt;package&gt;</td><td>更新指定的软件</td></tr><tr><td>yum list</td><td>列出所有可安裝的软件清单</td></tr><tr><td>yum remove &lt;package&gt;</td><td>删除指定软件包</td></tr><tr><td><strong>yum search &lt;keyword&gt;</strong></td><td><strong>查找软件包</strong></td></tr><tr><td>yum clean packages</td><td>清除缓存目录下的软件包</td></tr><tr><td>yum clean headers</td><td>清除缓存目录下的 headers</td></tr><tr><td>yum clean oldheaders</td><td>清除缓存目录下旧的 headers</td></tr><tr><td>yum clean all</td><td>除缓存目录下的软件包及旧的 headers</td></tr><tr><td>yum makecache</td><td>重新生成缓存</td></tr></tbody></table><h4 id="yum常用选项"><a href="#yum常用选项" class="headerlink" title="yum常用选项"></a>yum常用选项</h4><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-h</td><td>帮助</td></tr><tr><td>-y</td><td>当yum执行过程中所有提示全选yes</td></tr><tr><td>-q</td><td>不显示执行过程</td></tr></tbody></table><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ul><li><p>卸载系统自带的<code>jdk</code></p><ul><li>我们可以先使用如下命令查看系统自带的<code>jdk</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm <span class="literal">-qa</span> | grep jdk</span><br></pre></td></tr></table></figure><ul><li>我们可以使用<code>yum remove</code>卸载我们系统自带的<code>jdk</code>，由于我们系统上安装的jdk比较多，我们可以直接使用<code>awk</code>来生成卸载的命令然后执行</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm <span class="literal">-qa</span> | grep jdk | awk <span class="string">&#x27;&#123;printf(&quot;sudo yum remove %s -y\n&quot;,$1)&#125;&#x27;</span> &gt; remove.sh &amp;&amp; /bin/sh remove.sh &amp;&amp; <span class="built_in">rm</span> <span class="literal">-fr</span> remove.sh</span><br></pre></td></tr></table></figure></li><li><p>安装<code>tree</code>命令</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install tree <span class="literal">-y</span></span><br></pre></td></tr></table></figure><h3 id="修改yum源"><a href="#修改yum源" class="headerlink" title="修改yum源"></a>修改yum源</h3><ul><li><p>我们刚刚在下载<code>tree</code>的时候不知道大家有没有感觉到下载的速度很慢，这是因为CentOS是从国外去下载这些软件的</p></li><li><p>我们yum包管理工具是如何知道应该从那里去下载我们要安装的软件及其所需要的依赖呢，这里就有一个yum源，我们可以在<code>/etc/yum.repos.d</code>目录中看到</p></li><li><p>在这里我们可以看到很多以<code>.repo</code>结尾的文件，这里就存放了yum的软件源地址</p><ul><li>CentOS-Base.repo：联网后基础的源，一般都用这个</li><li>CentOS-Media.repo：使用光盘挂载后调用的文件</li><li>CentOS-Vault .repo：最近新版本的加入的老版本的yum源配置</li><li>CentOS-Debuginfo.repo：和内核相关的更新和软件安装</li></ul></li><li><p>所以我们一般联网安装用的就是<code>CentOS-Base.repo</code>，我们打开该文件可以看到里面有一些url地址，这些就软件源仓库的地址，我们只需要把这里的地址修改成国内的就可以提高yum的下载速度</p></li><li><p>国内源</p><ul><li>阿里镜像站：<a href="https://developer.aliyun.com/mirror/">https://developer.aliyun.com/mirror/</a></li><li>清华镜像站：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></li></ul></li><li><p>这里以阿里源为例，使用如下命令下载阿里提供的<code>CentOS-Base.repo</code>文件替换系统自带的文件</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wget</span> <span class="literal">-O</span> /etc/yum.repos.d/CentOS<span class="literal">-Base</span>.repo https://mirrors.aliyun.com/repo/Centos<span class="literal">-7</span>.repo</span><br></pre></td></tr></table></figure><ul><li>生成yum缓存</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><ul><li>使用yum安装python3测试</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install python3 <span class="literal">-y</span></span><br></pre></td></tr></table></figure><h2 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><p>Shell 脚本（shell script），是一种为 shell 编写的脚本程序，业界所说的 shell 通常都是指 shell 脚本，但大家要知道，shell 和 shell script 是两个不同的概念</p><p>Shell 编程跟 JavaScript、php 编程一样，只要有一个能编写代码的文本编辑器和一个能解释执行的脚本解释器就可以了</p><p>Linux 的 Shell 种类众多，常见的有</p><ul><li>Bourne Shell（sh）</li><li>Bourne Again Shell（bash）</li><li>C Shell（csh）</li><li>K Shell（ksh）</li><li>Z Shell (zsh)</li></ul><p>我们可以在<code>/etc/shells</code>文件中查看本机安装的shell</p><p>我们教程中以<code>bash</code>为主，也就是 Bourne Again Shell，由于易用和免费，Bash 在日常工作中被广泛使用。同时，Bash 也是大多数Linux 系统默认的 Shell，在MacOS10.15之后的系统上，默认的shell为zsh</p><h3 id="第一个Shell脚本"><a href="#第一个Shell脚本" class="headerlink" title="第一个Shell脚本"></a>第一个Shell脚本</h3><ul><li>我们使用<code>vi/vim</code>创建一个文件为<code>myshell1.sh</code>，内容如下</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello Linux&quot;</span></span><br></pre></td></tr></table></figure><p><code>#!</code> 告诉系统其后路径所指定的程序即是解释此脚本文件的 Shell 程序，一般情况下，我们并不区分 Bourne Shell 和 Bourne Again Shell，所以，像 <code>#!/bin/sh</code>，它同样也可以改为 <code>#!/bin/bash</code></p><p>echo命令之前也已经讲过了，其实之前也给大家提过几次shell脚本，只有没有系统的拿来说，其实不难发现，shell脚本就是我们把这些命令放到一个文件中，然后按顺序从上到下今次执行这些命令</p><ul><li>为其加上可执行权限</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x myshell1.sh</span><br></pre></td></tr></table></figure><ul><li>执行shell脚本</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./myshell.sh</span><br></pre></td></tr></table></figure><p>这里写的是目标shell脚本的路径，绝对路径相对路径都可以，如果是相对路径且在当前目录下，请以<code>./</code>开头表明是当前目录，否则系统会去PATH环境变量中去找这个文件</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="普通变量"><a href="#普通变量" class="headerlink" title="普通变量"></a>普通变量</h4><h5 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h5><p>我们可以使用变量名&#x3D;变量值的方式来定义变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable_name=variable_value</span><br></pre></td></tr></table></figure><p>注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则：</p><ul><li>命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。</li><li>中间不能有空格，可以使用下划线 **_**。</li><li>不能使用标点符号。</li><li>不能使用bash里的关键字</li></ul><h5 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h5><p>使用一个定义过的变量，只要在变量名前面加美元符号即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">myname=<span class="string">&quot;lengwen&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$myname</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;myname&#125;</span><br></pre></td></tr></table></figure><p>变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">skill=<span class="string">&quot;java&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;I am good at <span class="variable">$</span>&#123;skill&#125;script&quot;</span></span><br></pre></td></tr></table></figure><p>如果不给skill变量加花括号，写成<code>echo &quot;I am good at $skillscript&quot;</code>，解释器就会把$skillscript当成一个变量</p><h5 id="只读变量"><a href="#只读变量" class="headerlink" title="只读变量"></a>只读变量</h5><p>使用 <code>readonly</code> 命令可以将变量定义为只读变量，只读变量的值不能被改变</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">mysite=<span class="string">&quot;https://kevinlu98.cn&quot;</span></span><br><span class="line">readonly mysite</span><br><span class="line">mysite=<span class="string">&quot;https://www.kevinlu98.cn&quot;</span></span><br></pre></td></tr></table></figure><h5 id="删除变量"><a href="#删除变量" class="headerlink" title="删除变量"></a>删除变量</h5><p>使用<code>unset</code>命令可以删除变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">mysite=<span class="string">&quot;https://kevinlu98.cn&quot;</span></span><br><span class="line">unset mysite</span><br><span class="line"><span class="built_in">echo</span> my site is <span class="variable">$mysite</span></span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>字符串是shell编程中最常用最有用的数据类型（不只shell编程中，基本所有编程语言几乎都是如此），在shell编程中，字符串可以用单引号，也可以用双引号，也可以不用引号</p><ul><li>单引号<ul><li>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的</li><li>单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用</li></ul></li><li>双引号<ul><li>双引号里可以有变量</li><li>双引号里可以出现转义字符</li></ul></li></ul><p>在字符串操作中常见有如下操作</p><table><thead><tr><th>操作</th><th>语法</th></tr></thead><tbody><tr><td>获取字符串长度</td><td>${ #string}</td></tr><tr><td>提取子串</td><td>${string:start:end}</td></tr></tbody></table><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>数组中可以存放多个值，shell编程中只支持一维数组，初始化时无需定义数组的大小，数组元素的下标由 0 开始</p><h5 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h5><p>Shell 数组用括号来表示，元素用”空格”符号分割开，语法格式如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_name=(value1,value2...valuen)</span><br></pre></td></tr></table></figure><h5 id="使用数组"><a href="#使用数组" class="headerlink" title="使用数组"></a>使用数组</h5><p>读取数组元素值的一般格式是：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;array_name[<span class="type">index</span>]&#125;</span><br></pre></td></tr></table></figure><h5 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h5><p>关联数组的概念与map类似，可以使用任意的字符串、或者整数作为下标来访问数组元素</p><p>关联数组使用<code>declare</code>命令来声明</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare <span class="literal">-A</span> array_name</span><br></pre></td></tr></table></figure><p>以下实例我们创建一个关联数组 <strong>site</strong>，并创建不同的键值：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare <span class="literal">-A</span> site=([<span class="string">&quot;google&quot;</span>]=<span class="string">&quot;www.google.com&quot;</span> [<span class="string">&quot;kevinlu&quot;</span>]=<span class="string">&quot;www.kevinlu98.cn&quot;</span> [<span class="string">&quot;taobao&quot;</span>]=<span class="string">&quot;www.taobao.com&quot;</span>)</span><br></pre></td></tr></table></figure><p>我们也可以先声明一个关联数组，然后再设置键和值：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">declare <span class="literal">-A</span> site</span><br><span class="line">site[<span class="string">&quot;google&quot;</span>]=<span class="string">&quot;www.google.com&quot;</span></span><br><span class="line">site[<span class="string">&quot;kevinlu&quot;</span>]=<span class="string">&quot;www.kevinlu98.cn&quot;</span></span><br><span class="line">site[<span class="string">&quot;taobao&quot;</span>]=<span class="string">&quot;www.taobao.com&quot;</span></span><br></pre></td></tr></table></figure><h5 id="获取数组所有元素"><a href="#获取数组所有元素" class="headerlink" title="获取数组所有元素"></a>获取数组所有元素</h5><p>使用 <code>@</code>或 <code>*</code> 可以获取数组中的所有元素</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;site[<span class="selector-tag">@</span>]&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;site[*]&#125;</span><br></pre></td></tr></table></figure><p>在数组前加一个感叹号 <strong>!</strong> 可以获取数组的所有键</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;!site[<span class="selector-tag">@</span>]&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;!site[*]&#125;</span><br></pre></td></tr></table></figure><h5 id="获取数组长度"><a href="#获取数组长度" class="headerlink" title="获取数组长度"></a>获取数组长度</h5><p>获取数组长度的方法与获取字符串长度的方法相同</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;<span class="comment">#site[@]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;<span class="comment">#site[*]&#125;</span></span><br></pre></td></tr></table></figure><h4 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h4><p>我们可以在执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：</p><ul><li><code>$n</code>:<code>n</code> 代表一个数字，1 为执行脚本的第一个参数，2 为执行脚本的第二个参数，以此类推……</li><li><code>$#</code>:传递到脚本的参数个数</li><li><code>$0</code>:执行的文件名</li></ul><p>以下实例我们向脚本传递三个参数，并分别输出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;参数个数：<span class="variable">$</span>#&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;执行的文件名：<span class="variable">$0</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数为：<span class="variable">$1</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个参数为：<span class="variable">$2</span>&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个参数为：<span class="variable">$3</span>&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="判断条件"><a href="#判断条件" class="headerlink" title="判断条件"></a>判断条件</h4><p>在shell编程中，一般将条件写到<code>[]</code>里，常用的语法如下表</p><p><strong>字符串判断</strong></p><table><thead><tr><th>语法</th><th>含义</th></tr></thead><tbody><tr><td>str1 &#x3D; str2</td><td>当两个串有相同内容、长度时为真</td></tr><tr><td>str1 !&#x3D; str2</td><td>当串str1和str2不等时为真</td></tr><tr><td>-n str1</td><td>当串的长度大于0时为真(串非空)</td></tr><tr><td>-z str1</td><td>当串的长度为0时为真(空串)</td></tr><tr><td>str1</td><td>当串str1为非空时为真</td></tr></tbody></table><p><strong>数字的判断</strong></p><table><thead><tr><th>语法</th><th>含义</th></tr></thead><tbody><tr><td>int1 -eq int2</td><td>两数相等为真</td></tr><tr><td>int1 -ne int2</td><td>两数不等为真</td></tr><tr><td>int1 -gt int2</td><td>int1大于int2为真</td></tr><tr><td>int1 -ge int2</td><td>int1大于等于int2为真</td></tr><tr><td>int1 -lt int2</td><td>int1小于int2为真</td></tr><tr><td>int1 -le int2</td><td>int1小于等于int2为真</td></tr></tbody></table><p><strong>文件的判断</strong></p><table><thead><tr><th>语法</th><th>含义</th></tr></thead><tbody><tr><td>-r file</td><td>用户可读为真</td></tr><tr><td>-e file</td><td>存在则为真</td></tr><tr><td>-w file</td><td>用户可写为真</td></tr><tr><td>-x file</td><td>用户可执行为真</td></tr><tr><td>-d file</td><td>文件为目录为真</td></tr></tbody></table><p><strong>复杂逻辑判断</strong></p><table><thead><tr><th>语法</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>与</td></tr><tr><td>-o</td><td>或</td></tr><tr><td>!</td><td>非</td></tr></tbody></table><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><p><strong>if 语句语法格式</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line">then</span><br><span class="line">    command1 </span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN </span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>if else 语法格式</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line">then</span><br><span class="line">    command1 </span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    command</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>if else-if else 语法格式</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1</span><br><span class="line">then</span><br><span class="line">    command1</span><br><span class="line">elif condition2 </span><br><span class="line">then </span><br><span class="line">    command2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    commandN</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>read命令</strong></p><p>可以从控制台读取输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">read [-<span class="type">p</span>] [<span class="type">tips</span>] var</span><br><span class="line"><span class="comment"># -p 指定提示信息</span></span><br></pre></td></tr></table></figure><p><strong>练习：成绩判断</strong></p><p>当成绩大于100或小于0时无效，[0,60)输出C，[60,85)输出B，[85,100]输出A</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入成绩:&quot;</span> score</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> -<span class="type">gt</span> <span class="number">100</span> -<span class="type">o</span> <span class="variable">$score</span> -<span class="type">lt</span> <span class="number">0</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;成绩无效&quot;</span></span><br><span class="line">        <span class="keyword">exit</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> -<span class="type">ge</span> <span class="number">85</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="built_in">echo</span> A</span><br><span class="line">elif [ <span class="variable">$score</span> -<span class="type">ge</span> <span class="number">60</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="built_in">echo</span> B</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> C</span><br><span class="line">fi </span><br></pre></td></tr></table></figure><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p>与其他编程语言类似，Shell支持for循环，for循环一般格式为：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> item1 item2 ... itemN</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>这里的itemN可以是一个数组</p><h4 id="While循环"><a href="#While循环" class="headerlink" title="While循环"></a>While循环</h4><p>while 循环用于不断执行一系列命令，其语法格式为：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>练习：</strong></p><p>在if练习的基础上循环获取用户输入，输出成绩ABC，直到用户输入exit</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入成绩:&quot;</span> score</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> = <span class="string">&#x27;exit&#x27;</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;退出&quot;</span></span><br><span class="line">        <span class="keyword">exit</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> -<span class="type">gt</span> <span class="number">100</span> -<span class="type">o</span> <span class="variable">$score</span> -<span class="type">lt</span> <span class="number">0</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;成绩无效&quot;</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> -<span class="type">ge</span> <span class="number">85</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="built_in">echo</span> A</span><br><span class="line">elif [ <span class="variable">$score</span> -<span class="type">ge</span> <span class="number">60</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="built_in">echo</span> B</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> C</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="实战：Redis安装脚本"><a href="#实战：Redis安装脚本" class="headerlink" title="实战：Redis安装脚本"></a>实战：Redis安装脚本</h2><ul><li><p>手动安装一遍体验redis安装过程：<a href="https://www.kevinlu98.cn/archives/46.html">安装步骤</a></p></li><li><p>下载redis</p></li><li><p>解压</p></li><li><p>进入redis目录执行make 及 make install</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">redis_file=redis<span class="literal">-3</span>.<span class="number">0.0</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span><span class="comment"># -gt 0 ]</span></span><br><span class="line"><span class="type">then</span></span><br><span class="line">        <span class="type">redis_file</span>=<span class="type">redis</span>-<span class="variable">$1</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;select verison 3.0.0&quot;</span></span><br><span class="line"><span class="type">else</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;no version select,use default 3.0.0&quot;</span></span><br><span class="line"><span class="type">fi</span></span><br><span class="line"></span><br><span class="line"><span class="type">download_url</span>=<span class="string">&quot;http://download.redis.io/releases/<span class="variable">$</span>&#123;redis_file&#125;.tar.gz&quot;</span></span><br><span class="line"><span class="type">if</span> [ -<span class="type">e</span> <span class="variable">$</span>&#123;<span class="type">redis_file</span>&#125;<span class="type">.tar.gz</span> ]</span><br><span class="line"><span class="type">then</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;file is exist &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="type">else</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;downloading <span class="variable">$</span>&#123;redis_file&#125; from <span class="variable">$</span>&#123;download_url&#125; ...&quot;</span></span><br><span class="line">        <span class="type">wget</span> <span class="variable">$download_url</span></span><br><span class="line"><span class="type">fi</span></span><br><span class="line"><span class="type">echo</span> <span class="variable">$redis_file</span></span><br><span class="line"><span class="type">if</span> [ -<span class="type">d</span> <span class="variable">$redis_file</span> ]</span><br><span class="line"><span class="type">then</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;dir is exist&quot;</span></span><br><span class="line"><span class="type">else</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;decompression <span class="variable">$</span>&#123;redis_file&#125;.tar.gz&quot;</span></span><br><span class="line">        <span class="type">tar</span> <span class="type">zxvf</span> <span class="variable">$</span>&#123;<span class="type">redis_file</span>&#125;<span class="type">.tar.gz</span></span><br><span class="line"><span class="type">fi</span></span><br><span class="line"><span class="type">cd</span> <span class="variable">$redis_file</span>/<span class="type">deps</span> &amp;&amp; <span class="type">make</span> <span class="type">hiredis</span> <span class="type">linenoise</span> <span class="type">lua</span> &amp;&amp; <span class="type">cd</span> <span class="type">..</span></span><br><span class="line"></span><br><span class="line"><span class="type">make</span> <span class="type">MALLOC</span>=<span class="type">libc</span> </span><br><span class="line"></span><br><span class="line"><span class="type">if</span> [ -<span class="type">d</span> /<span class="type">usr</span>/<span class="type">local</span>/<span class="type">redis</span> ]</span><br><span class="line"><span class="type">then</span></span><br><span class="line">        <span class="type">echo</span> <span class="string">&quot;delete old redis&quot;</span></span><br><span class="line">        <span class="type">sudo</span> <span class="type">rm</span> -<span class="type">fr</span> /<span class="type">usr</span>/<span class="type">local</span>/<span class="type">redis</span></span><br><span class="line"><span class="type">fi</span></span><br><span class="line"></span><br><span class="line"><span class="type">sudo</span> <span class="type">make</span> <span class="type">PREFIX</span>=/<span class="type">usr</span>/<span class="type">local</span>/<span class="type">redis</span> <span class="type">install</span></span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>今天内容有些多，大家可以好好消化一下，我们只是入门一下linux，方便我们在工作中可以快速使用，所以对shell的要求不是很高，只需要可以写出简单的shell脚本即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们前面学习一环境变量，也带着大家一起安装了jdk，但在我们安装程序的过程中我们发现确实还是比较麻烦的，我们需要自己找软件的包，然后手动解压</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="centos" scheme="https://study.kevinlu98.cn/tags/centos/"/>
    
    <category term="shell" scheme="https://study.kevinlu98.cn/tags/shell/"/>
    
    <category term="yum" scheme="https://study.kevinlu98.cn/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>(七)Linux环境变量</title>
    <link href="https://study.kevinlu98.cn/2023/02/26/huan-jing-bian-liang.html"/>
    <id>https://study.kevinlu98.cn/2023/02/26/huan-jing-bian-liang.html</id>
    <published>2023-02-26T03:03:00.000Z</published>
    <updated>2023-03-09T13:01:00.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们上节课学习了用户及权限的相关知识，同时也学习了远程登录，这节课再给大家讲讲环境变量，我们在手动安装很多程序时都会要设置环境变量，所以这节课就给大家介绍一下，当然也不仅仅是介绍环境变量，中间也会有一些新命令，最后会带大家手动安装一下java开发环境</p><h2 id="alias命令"><a href="#alias命令" class="headerlink" title="alias命令"></a>alias命令</h2><p><code>Linux</code>的<code>alias</code>命令用于设置指令的别名，紧对当前shell生效</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias [<span class="type">nickname</span>=<span class="type">command_name</span>]</span><br><span class="line"><span class="comment"># 如果后面不设置别名，则打印当前所有别名列表</span></span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><p>设置别名为<code>l</code>，功能为打印<code>/</code>下的所有文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias l=<span class="string">&#x27;ls -a /&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h2><p><code>which</code>命令，主要用于用于查看给定命令的绝对路径</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which [<span class="type">options</span>] command_name</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>–all，-a</td><td>打印出所有在 PATH 中匹配的可执行程序，而不仅仅是第一个匹配的可执行程序</td></tr><tr><td>–read-alias, -i</td><td>打印别名</td></tr><tr><td>–skip-alias</td><td>跳过别名</td></tr><tr><td>–read-functions</td><td>读取 Shell 函数的定义，并打印匹配的函数</td></tr><tr><td>–skip-functions</td><td>跳过函数</td></tr></tbody></table><h2 id="Linux链接"><a href="#Linux链接" class="headerlink" title="Linux链接"></a>Linux链接</h2><p>Linux 链接分两种:</p><ul><li>硬链接（Hard Link）</li><li>符号链接（Symbolic Link）</li></ul><p>默认情况下，<code>ln</code> 命令产生硬链接</p><h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><p>硬链接，全称叫作硬链接文件，英文名称是 hard link。这类文件比较特殊，这类文件（假设叫 A）会拥有自己的 inode 节点和名称，其 inode 会指向文件内容所在的数据块。与此同时，该文件内容所在的数据块的引用计数会加 1。当此数据块的引用计数大于等于 2 时，则表示有多个文件同时指向了这一数据块。一个文件修改，多个文件都会生效。当删除其中某个文件时，对另一个文件不会有影响，仅仅是数据块的引用计数减 1。当引用计数为 0 时，则系统才会清除此数据块，比如：A 是 B 的硬链接（A 和 B 都是文件名），则 A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号相同，即一个 inode 节点对应两个不同的文件名，两个文件名指向同一个文件，A 和 B 对文件系统来说是完全平等的。删除其中任何一个都不会影响另外一个的访问</p><h3 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h3><p>软链接，全称是软链接文件，英文叫作 symbolic link。这类文件其实非常类似于 Windows 里的快捷方式，这个软链接文件（假设叫 VA）的内容，其实是另外一个文件（假设叫 B）的路径和名称，当打开 A 文件时，实际上系统会根据其内容找到并打开 B 文件，比如：A是B的软链接，我们可以像操作B一样去操作A，但如果我们把B删除了，A仍然存在，但其成了一个无效的链接</p><h3 id="ln命令"><a href="#ln命令" class="headerlink" title="ln命令"></a>ln命令</h3><p><code>ln</code>命令是linux系统中一个非常重要命令，英文全称是“link”，即链接的意思，它的功能是为某一个文件在另外一个位置建立一个同步的链接。 一种是hard link，又称为硬链接；另一种是symbolic link，又称为符号链接，<code>ln</code>的命令格式：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln [-<span class="type">s</span>] source target</span><br><span class="line"><span class="comment"># -s 建立软链接，不加则硬链接</span></span><br></pre></td></tr></table></figure><p><strong>练习：</strong></p><ul><li>创建<code>1.txt</code>，内容随便</li><li>创建<code>1.txt</code>的硬链接<code>2.txt</code>且查看<code>2.txt</code>的内容</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln <span class="number">1</span>.txt <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>更改<code>2.txt</code>的内容，然后查看<code>1.txt</code></li><li>更改<code>1.txt</code>的内容，然后查看<code>2.txt</code></li><li>删除<code>1.txt</code>，查看<code>2.txt</code></li><li>创建<code>2.txt</code>的软链接<code>3.txt</code>且查看<code>3.txt</code>的内容</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln <span class="literal">-s</span> <span class="number">2</span>.txt <span class="number">3</span>.txt</span><br></pre></td></tr></table></figure><ul><li>修改<code>3.txt</code>内容，然后查看<code>2.txt</code></li><li>修改<code>2.txt</code>内容，然后查看<code>3.txt</code></li><li>删除<code>2.txt</code>，然后查看<code>3.txt</code></li></ul><h2 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h2><p>Linux <code>tar</code>（英文全拼：tape archive ）命令用于备份文件，tar 是用来建立，还原备份文件的工具程序，它可以加入，解开备份文件内的文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar [<span class="type">options</span>] file...</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-A 或 –catenate</td><td>新增文件到已存在的备份文件</td></tr><tr><td>-c 或 –create</td><td>建立新的备份文件</td></tr><tr><td>-C&lt;目的目录&gt;或–directory&#x3D;&lt;目的目录&gt;</td><td>切换到指定的目录</td></tr><tr><td>-f&lt;备份文件&gt;或–file&#x3D;&lt;备份文件&gt;</td><td>指定备份文件</td></tr><tr><td>-t或–list</td><td>列出备份文件的内容</td></tr><tr><td>-v或–verbose</td><td>显示指令执行过程</td></tr><tr><td>-x或–extract或–get</td><td>从备份文件中还原文件</td></tr><tr><td>-z或–gzip或–ungzip</td><td>通过gzip指令处理备份文件</td></tr><tr><td>–delete</td><td>从备份文件中删除指定的文件</td></tr><tr><td>–help</td><td>在线帮助</td></tr></tbody></table><p><strong>注：</strong><code>tar</code>的参数远远不至这么多，大家可以看看<a href="https://www.runoob.com/linux/linux-comm-tar.html">菜鸟上tar命令</a>的参数列表，我上面列了一些大家最常用的，其实我们只需要知道如何用它压缩和解压缩就行了，至于其它的高级用法我们教程中用不到，而且在未来大家工作中也大概率用不到</p><ul><li>使用如下命令创建<code>1.txt</code>及<code>2.txt</code>文件并查看大小</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ls</span> <span class="literal">-Rl</span> /etc &gt; <span class="number">1</span>.txt <span class="comment"># 这个文件大概有240k</span></span><br><span class="line">sudo <span class="built_in">ls</span> <span class="literal">-Rl</span> /usr &gt; <span class="number">2</span>.txt <span class="comment"># 这个文件大概有8.6M</span></span><br></pre></td></tr></table></figure><ul><li>我们可以使用<code>-f</code>参数指定压缩包的名称，使用<code>-v</code>参数可以显示执行过程，使用<code>-c</code>参数用于创建新的压缩包，执行命令创建压缩包并查看大小，不难看出，我们仅仅把<code>1.txt</code>和<code>2.txt</code>文件归档到一个文件中了，但并没有压缩的作用，一般我们使用<code>.tar</code>作为这种使用tar只归档但没有压缩的文件后缀</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar <span class="literal">-cvf</span> myfile.tar <span class="number">1</span>.txt <span class="number">2</span>.txt <span class="comment"># 生成的新文件大概有8.9M，其实就相当于1.txt+2.txt的大小，并没有做压缩</span></span><br></pre></td></tr></table></figure><ul><li>在上述命令上加上<code>-z</code>选项指定通过<code>gzip</code>处理压缩文件，而<code>gzip</code>文件的后缀一般为<code>.gz</code>，而因为我们是先使用<code>tar</code>做归档，然后再使用<code>gzip</code>做压缩，所以我们通过情况下对这种压缩文件以<code>.tar.gz</code>作为后缀，我们再来看下大小</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar <span class="literal">-czvf</span> myfile.tar.gz <span class="number">1</span>.txt <span class="number">2</span>.txt <span class="comment"># 生成的新文件大概有1.2M，效果还是很明显的</span></span><br></pre></td></tr></table></figure><ul><li>我们只需要将上述归档或压缩参数中的<code>-c</code>换成<code>-x</code>就可以完成解压缩的操作了</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除1.txt 2.txt</span></span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-fr</span> <span class="number">1</span>.txt <span class="number">2</span>.txt</span><br><span class="line">tar <span class="literal">-xzvf</span> myfile.tar.gz</span><br></pre></td></tr></table></figure><ul><li>当然我们也可以用<code>-C</code>指定解压的目标目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar <span class="literal">-xzvf</span> myfile.tar.gz <span class="literal">-C</span> ~/Desktop <span class="comment">#解压到桌面</span></span><br></pre></td></tr></table></figure><h2 id="wget工具"><a href="#wget工具" class="headerlink" title="wget工具"></a>wget工具</h2><p><code>wget</code>是Linux系统下的一款工具，用于从远程服务器恢复备份到本地服务器，支持HTTP，HTTPS和FTP协议，简单来说就是下载</p><p>如果你当时安装Linux系统时是跟随我的教程走的，那么你的机器上应该是有<code>wget</code>的，如果没有也没关系，网上搜索一下CentOS7安装<code>wget</code>，一行命令就能搞定</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wget</span> [<span class="type">options</span>] url</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>参数</th></tr></thead><tbody><tr><td>-r</td><td>递归，wget首先下载URL指定的文件，如果该文件是一个HTML文档的话递归下载该文件所引用所有文件</td></tr><tr><td>-N</td><td>该参数指定wget只下载更新的文件，也就是说，与本地目录中的对应文件的长度和最后修改日期一样的文件将不被下载</td></tr><tr><td>-l</td><td>设置递归级数，默认为5，<code>-l0</code>为无穷递归；<code>-l1</code>相当于不递归</td></tr><tr><td>-t</td><td>设置重试次数，<code>-t0</code>则重试次数设为无穷多</td></tr><tr><td>-v</td><td>设置wget输出详细的工作信息</td></tr><tr><td>-q</td><td>设置wget不输出任何信息</td></tr></tbody></table><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>在看环境变量之前我们先看看变量，变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值；而环境变量是用来定义系统运行环境的一些参数，比如用户的家目录(HOME)、用户使用的shell(SHELL)、用户邮件位置(MAIL)等</p><p>这里有个不成文的规定，大家一般会把环境变量的名称全部设置成大写</p><p>我们可以使用<code>env</code>命令来查看系统中的所有环境变量，当然也可以使用<code>echo $变量名</code>打印出某个变量的值</p><h3 id="常见环境变量"><a href="#常见环境变量" class="headerlink" title="常见环境变量"></a>常见环境变量</h3><p>Linux 系统能够正常运行并且为用户提供服务，需要数十个环境变量来协同工作，我们这里就简单了解一下几个常用 的环境变量</p><table><thead><tr><th>环境变量</th><th>作用</th></tr></thead><tbody><tr><td>HOME</td><td>用户的主目录（也称家目录）</td></tr><tr><td>SHELL</td><td>用户使用的 Shell 解释器名称</td></tr><tr><td><strong>PATH</strong></td><td><strong>定义命令行解释器搜索用户执行命令的路径</strong></td></tr><tr><td>MAIL</td><td>邮件保存路径</td></tr><tr><td>RANDOM</td><td>生成一个随机数字</td></tr><tr><td>LANG</td><td>系统语言、语系名称</td></tr></tbody></table><h3 id="环境变量的分类"><a href="#环境变量的分类" class="headerlink" title="环境变量的分类"></a>环境变量的分类</h3><ul><li><p>按生命周期分：</p><ul><li><p>永久的：在环境变量脚本文件中配置，用户每次登录时会自动执行这些脚本，相当于永久生效。</p></li><li><p>临时的：用户利用export命令，在当前终端下声明环境变量，关闭Shell终端失效。</p></li></ul></li><li><p>按作用域分：</p><ul><li><p>系统环境变量：公共的，对全部的用户都生效。</p></li><li><p>用户环境变量：用户私有的、自定义的个性化设置，只对该用户生效。</p></li></ul></li></ul><h3 id="永久环境变量设置"><a href="#永久环境变量设置" class="headerlink" title="永久环境变量设置"></a>永久环境变量设置</h3><ul><li><code>/etc/profile</code>：用户使用交互式登录到环境中时该文件会被执行，用户可以在此设置一些全局信息</li><li><code>~/.bash_profile</code>：用户使用交互式登录到环境中时执行完&#x2F;etc&#x2F;profile就会执行该文件，用户可以在些设置一些自己的环境信息</li><li><code>~/.bashrc</code>：用户使用非交互式登录系统会执行该文件，但在<code>~/.bash_profile</code>默认情况下会调用<code>~/.bashrc</code></li></ul><h3 id="source命令"><a href="#source命令" class="headerlink" title="source命令"></a>source命令</h3><p><code>source</code>命令可以在当前bash环境下读取并执行FileName中的命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source filename <span class="comment"># filename文件为一个shell脚本文件</span></span><br></pre></td></tr></table></figure><h3 id="PATH环境变量"><a href="#PATH环境变量" class="headerlink" title="PATH环境变量"></a>PATH环境变量</h3><p>path环境变量的值就是通过’:’所分割的一系列的路径，如图：</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230209/3a6c77ca562b4d0dbf56a7950757dcac.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230209/3a6c77ca562b4d0dbf56a7950757dcac.png"></p><p>当我们执行某个命令时，命令解释器会根据PATH记录的这些路径依次在这些路径去检索</p><h2 id="练习：jdk安装"><a href="#练习：jdk安装" class="headerlink" title="练习：jdk安装"></a>练习：jdk安装</h2><p><code>jdk</code>即 <strong>Java Development kit</strong>，Java开发工具包，也就是常说的Java开发环境，我们来在我们的<code>Linux</code>主机上对其做一个安装，体验一下环境变量</p><p>我们的系统中自带了<code>open-jdk</code>，但我们还没有学<code>yum</code>相关知识，所以就先不卸载了，直接安装</p><ul><li><p>jdk下载地址：<a href="https://repo.huaweicloud.com/java/jdk/">https://repo.huaweicloud.com/java/jdk/</a></p></li><li><p>我这里以<code>8u192</code>版本为例，在主机上执行<code>wget</code>用于下载jdk的包</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wget</span> https://repo.huaweicloud.com/java/jdk/<span class="number">8</span>u192<span class="literal">-b12</span>/jdk<span class="literal">-8u192-linux-x64</span>.tar.gz</span><br></pre></td></tr></table></figure><ul><li>将其解压到<code>/usr/local</code>下</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar <span class="literal">-zxvf</span> jdk<span class="literal">-8u192-linux-x64</span>.tar.gz <span class="literal">-C</span> /usr/local</span><br></pre></td></tr></table></figure><ul><li>目录介绍</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230223/76274ab1ab274635b7de4e45dbce5153.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230223/76274ab1ab274635b7de4e45dbce5153.png"></p><ul><li>我们需要做的是<ul><li>创建<code>JAVA_HOME</code>环境变量，变量值为java的安装目录</li><li>创建<code>CLASS_PATH</code>环境变量，变量值为<code>.</code>及<code>lib</code>目录下的<code>tools.jar</code>及<code>dt.jar</code>文件</li><li>将存放java可执行文件的目录加入<code>PATH</code>环境变量中</li></ul></li><li>修改<code>/etc/profile</code>使其对所有用户生效，在最下面加入如下环境变量</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk1.<span class="number">8.0</span>_192</span><br><span class="line">export CLASS_PATH=.:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar</span><br><span class="line">export PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><ul><li><code>/etc/profile</code>文件会在用户交互式登录到环境时被执行，此时我们可以重新登录，也可以<code>source</code>命令使其在当前环境生效</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><ul><li>执行<code>java -version</code>来验证</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java <span class="literal">-version</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这节课学习了一些新命令和环境变量，有了这些东西我们就可以自已手动安装一些程序如Python、NodeJs等</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们上节课学习了用户及权限的相关知识，同时也学习了远程登录，这节课再给大家讲讲环境变量，我们在手动安装很多程序时都会要设置环境变量，所以这节</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="shell" scheme="https://study.kevinlu98.cn/tags/shell/"/>
    
    <category term="环境变量" scheme="https://study.kevinlu98.cn/tags/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>(六)Linux用户与权限</title>
    <link href="https://study.kevinlu98.cn/2023/02/03/yong-hu-yu-zu.html"/>
    <id>https://study.kevinlu98.cn/2023/02/03/yong-hu-yu-zu.html</id>
    <published>2023-02-03T03:03:00.000Z</published>
    <updated>2023-02-08T14:27:52.881Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经过前面几节课的学习，我们应该是慢慢的可以脱离<code>Linux</code>的图形窗口了，这节课带大家认识下<code>Linux</code>中的用户与权限，这节课学完后面我们大部分情况下甚至都不用在虚拟机上去操作我们的<code>Linux</code>了</p><h2 id="用户与组与权限"><a href="#用户与组与权限" class="headerlink" title="用户与组与权限"></a>用户与组与权限</h2><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>首先我要了解到Linux 是多用户多任务的分时操作系统，看到这句话是不是懵了，什么是多用户？什么是多任务？什么是分时？</p><p>其时上面那句话这样说大家就明白了，Linux 系统支持多个用户在同一时间内登陆，不同用户可以执行不同的任务，并且互不影响</p><p>不同用户具有不同的权限，毎个用户在权限允许的范围内完成不同的任务，Linux 正是通过这种权限的划分与管理，实现了多用户多任务的运行机制</p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230201/3d71f10366b045baa4830e43d0fa5941.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230201/3d71f10366b045baa4830e43d0fa5941.png" style="zoom:50%;" /><p>所以说任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统</p><p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护</p><p>每个用户都有唯一的用户名和密码。在登录系统时，只有正确输入用户名和密码，才能进入系统和自己的主目录</p><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><p>在Linux中，最常见的文件权限有 3 种：可读(r)、可写(w)、可执行(x)，在 Linux 系统中，每个文件都明确规定了不同身份用户的访问权限，通过 <code>ls -l</code> 命令即可看到，我们在用户家目录执行<code>ls -al</code>可以看到如下输出</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230201/5eb21c5983f64b8ca25664b1ea163a83.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230201/5eb21c5983f64b8ca25664b1ea163a83.png"></p><ul><li><p>权限是显示数据的第一列，第一列由10个字符组成</p><ul><li><p>第1位：文件类型，-表示文件，d表示目录</p></li><li><p>第2-4位：文件所有者的权限</p></li><li><p>第5-7位：文件所有者所属组成员的权限</p></li><li><p>第8-10位：所有者所属组之外的用户的权限</p></li></ul></li><li><p>第三列为文件所属用户</p></li><li><p>第四列为文件所属用户组</p></li></ul><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><p>用户组是具有相同特征用户的逻辑集合。简单的理解，有时我们需要让多个用户具有相同的权限，比如查看、修改某一个文件的权限，一种方法是分别对多个用户进行文件访问授权，如果有 10 个用户的话，就需要授权 10 次，那如果有 100、1000 个用户呢？</p><p>显然，这种方法不太合理。最好的方式是建立一个组，让这个组具有查看、修改此文件的权限，然后将所有需要访问此文件的用户放入这个组中。那么，所有用户就具有了和组一样的权限，这就是用户组</p><h2 id="Linux的用户管理"><a href="#Linux的用户管理" class="headerlink" title="Linux的用户管理"></a>Linux的用户管理</h2><p>用户管理工作主要就是对用户的增加修改和删除操作</p><h3 id="用户配置文件"><a href="#用户配置文件" class="headerlink" title="用户配置文件"></a>用户配置文件</h3><p><code>Linux</code> 系统中的 <code>/etc/passwd</code> 文件，是系统用户配置文件，存储了系统中所有用户的基本信息，并且所有用户都可以对此文件执行读操作。</p><p>我们使用<code>cat</code>来打开一下这个文件看看其中的内容 </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure><p>可以看到，&#x2F;etc&#x2F;passwd 文件中的内容非常规律，但这个文件具体的意义是什么呢？</p><p>文件中每行为一个用户信息，对于每行我们以<code>:</code>为分隔符从左到右依次如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名：密码：UID（用户ID）：GID（组ID）：描述性信息：主目录：默认Shell</span><br></pre></td></tr></table></figure><p>为了方便大家的查看，大家可以使用如下命令在桌面上创建<code>print.awk</code>文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;EOF&gt;print.awk</span><br><span class="line"><span class="keyword">BEGIN</span> &#123;</span><br><span class="line">        printf(<span class="string">&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;</span>)</span><br><span class="line">        printf(<span class="string">&quot;| %-20s | %-4s | %-6s | %-6s | %-65s | %-30s | %-20s |\n&quot;</span>,<span class="string">&quot;username&quot;</span>,<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;UID&quot;</span>,<span class="string">&quot;GID&quot;</span>,<span class="string">&quot;description&quot;</span>,<span class="string">&quot;home&quot;</span>,<span class="string">&quot;shell&quot;</span>)</span><br><span class="line">        printf(<span class="string">&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;</span>)</span><br><span class="line">        printf(<span class="string">&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">        printf(<span class="string">&quot;| %-20s | %-4s | %-6s | %-6s | %-65s | %-30s | %-20s |\n&quot;</span>,\<span class="variable">$1</span>,\<span class="variable">$2</span>,\<span class="variable">$3</span>,\<span class="variable">$4</span>,\<span class="variable">$5</span>,\<span class="variable">$6</span>,\<span class="variable">$7</span>)</span><br><span class="line">        printf(<span class="string">&quot;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>然后我们再使用之前学过的<code>awk</code>命令对其输出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="operator">-F</span> <span class="string">&#x27;:&#x27;</span> <span class="operator">-f</span> print.awk /etc/passwd</span><br></pre></td></tr></table></figure><p>我们来解释一下每一列的具体意义</p><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td>用户名</td><td>就是一串代表用户身份的字符串</td></tr><tr><td>密码</td><td>“x” 表示此用户设有密码，但不是真正的密码，真正的密码保存在 &#x2F;etc&#x2F;shadow 文件中，但<code>/etc/shadow</code>这个文件中的密码是加密的</td></tr><tr><td>UID</td><td>每个用户都有一个 UID，Linux 系统通过 UID 来识别不同的用户，0为超级管理员</td></tr><tr><td>GID</td><td>用户初始组的组 ID 号</td></tr><tr><td>描述性信息</td><td>用来解释这个用户的意义</td></tr><tr><td>主目录</td><td>用户登录后有操作权限的访问目录，通常也被称为用户的家目录</td></tr><tr><td>默认shell</td><td>Linux 的命令解释器，其中<code>/sbin/nologin</code>表示不能登录shell</td></tr></tbody></table><h3 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h3><p><code>su</code>命令用于在<code>linux</code>中切换用户身份，其用法如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [<span class="type">username</span>] <span class="comment"># 这里的username可以省略，省略则默认为root</span></span><br></pre></td></tr></table></figure><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><p>我们可以使用命令<code>useradd</code>来添加用户，<code>useradd</code>命令的使用如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd [<span class="type">options</span>] username</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-d</td><td>指定用户主目录，如果此目录不存在，则同时使用<code>-m</code>自动创建主目录(父目录必须存在)</td></tr><tr><td>-g</td><td>指定用户所属的用户组</td></tr><tr><td>-G</td><td>指定用户所属的附加组</td></tr><tr><td>-s</td><td>指定用户的登录Shell</td></tr><tr><td>-c</td><td>指定一段注释性描述</td></tr><tr><td>-u</td><td>uid，指定uid，如果同时有<code>-o</code>选项，则可以重复使用其他用户的标识号</td></tr></tbody></table><p>一般情况下我们什么参数都不加则会创建一个用户，用户名为<code>username</code>，用户的主目录为<code>/home/username</code>，用户所属组为<code>username</code>，无附加组，用户登录的shell为<code>/bin/bash</code></p><p>其实添加用户就是在<code>/etc/passwd</code>文件中为新用户增加一条记录，同时更新其他系统文件如<code>/etc/shadow</code>, <code>/etc/group</code>等</p><p><strong>练习：</strong></p><ul><li>创建一个名为<code>tom</code>的用户，用户组为<code>tom</code>，家目录为<code>/home/tom</code>(<strong>提示：组信息保存在<code>/etc/group</code></strong>)</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd tom</span><br></pre></td></tr></table></figure><ul><li>创建一个名为<code>worker</code>的用户，用户组为<code>worker</code>，家目录为<code>/data/worker</code>，描述信息为<code>工作用户</code>且不能登陆shell</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /<span class="keyword">data</span> &amp;&amp; useradd worker <span class="literal">-d</span> /<span class="keyword">data</span>/worker <span class="literal">-c</span> 工作用户 <span class="literal">-s</span> /sbin/nologin <span class="literal">-m</span></span><br></pre></td></tr></table></figure><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>我们可以使用<code>userdel</code>命令来删除某一用户，<code>userdel</code>命令使用如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel [-<span class="type">r</span>] username <span class="comment"># -r作用是把用户的主目录一起删除</span></span><br></pre></td></tr></table></figure><p><code>userdel</code>删除用户在系统文件中（主要是<code>/etc/passwd</code>, <code>/etc/shadow</code>, <code>/etc/group</code>等）的记录，，如果添加了<code>-r</code>选项则会同时删除用户的主目录</p><p><strong>练习：</strong></p><ul><li>删除<code>tom</code>用户及其主目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel <span class="literal">-r</span> tom</span><br></pre></td></tr></table></figure><ul><li>删除<code>worker</code>用户不删除其主目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel worker</span><br></pre></td></tr></table></figure><h3 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h3><p>我们可以使用<code>usermod</code>命令来修改已存在用户的相关信息如主目录、用户组等</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod [<span class="type">options</span>] username <span class="comment"># 这里的options同useradd中的options，就不做过多解释</span></span><br></pre></td></tr></table></figure><p><strong>练习：</strong></p><p>修改<code>worker</code>用户的家目录为<code>/home/worker</code>且让其可登录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod <span class="literal">-d</span> /home/worker <span class="literal">-s</span> /bin/bash <span class="literal">-m</span> worker</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>用户管理的一项重要内容是密码管理，用户刚创建时没有密码的</p><p>指定和修改用户密码的命令是<code>passwd</code>。超级用户可以为自己和其他用户指定密码，普通用户只能用它修改自己的密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd [<span class="type">options</span>] [<span class="type">username</span>] <span class="comment"># username不填默认为当前用户</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-l</td><td>锁定密码，即禁用账号</td></tr><tr><td>-u</td><td>解锁</td></tr><tr><td>-d</td><td>使账号无密码</td></tr><tr><td>-f</td><td>强迫用户下次登录时修改口令</td></tr><tr><td>–stdin</td><td>仅超级用户可用，对密码不做任何校验</td></tr></tbody></table><p>一般情况下，普通用户使用<code>passwd</code>时的过程如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">passwd </span><br><span class="line">Old password:****** </span><br><span class="line">New password:******* </span><br><span class="line">Re<span class="literal">-enter</span> new password:*******</span><br></pre></td></tr></table></figure><p><code>passwd</code>命令会先询问原密码，验证后再要求用户输入两遍新密码，如果两次输入的密码一致，则将这个密码指定给用户；而超级用户为用户指定密码时，就不需要知道原密码</p><p>为了安全起见，密码的校验规则为8及以上位长，包含有大写、小写字母和数字，并且应该与姓名、生日等不相同</p><p>如果想取消这个限制可以参考<a href="https://www.cnblogs.com/tryc/p/11712156.html">CentOS7取消密码难度校验</a></p><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><p>Linux 一般作为服务器使用，而服务器一般放在机房，你不可能在机房操作你的 Linux 服务器，这时我们就需要远程登录到Linux服务器来管理维护系统</p><p>Linux 系统中是通过 ssh 服务实现的远程登录功能，默认 ssh 服务端口号为 22</p><h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><p>我们首先需要知道Linux主机的ip，其次我们要确保可以从我们自己的机器能通过网络连接到Linux主机</p><p>使用<code>ip addr show</code>或<code>ifconfig</code>可以查看Linux系统的ip地址</p><p>在自己的机器可以使用<code>ping ip</code>来验证</p><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><ul><li>我们可以使用ssh客户端，如<code>MacOS</code>，大部分主流<code>Linux</code>及<code>Windows 10</code>以上的操作系统都默认有装<code>ssh</code>客户端，我们只需要通过在终端输入<code>ssh-p [port] username@ip</code>就可以远程登录了，如果Linux主机的ssh端口为22则可省略</li><li>通过第三方程序，由它们帮我们完成<code>ssh</code>登录<ul><li>Xshell： <a href="https://www.xshell.com/zh/xshell/">官网直达</a></li><li>Finalshell：<a href="http://www.hostbuf.com/">官网直达</a></li><li>Termius：<a href="https://www.termius.com/">官网直达</a></li></ul></li></ul><h2 id="Linux组管理"><a href="#Linux组管理" class="headerlink" title="Linux组管理"></a>Linux组管理</h2><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理，用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对<code>/etc/group</code>文件的更新</p><h3 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h3><p>增加一个新的用户组使用groupadd命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd [-<span class="type">options</span>] roupname</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-g</td><td>指定GID</td></tr><tr><td>-o</td><td>表示可以与其它用户组使用相同的GID</td></tr></tbody></table><h3 id="删除用户组"><a href="#删除用户组" class="headerlink" title="删除用户组"></a>删除用户组</h3><p>如果要删除一个已有的用户组，使用groupdel命令，其格式如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel groupname</span><br></pre></td></tr></table></figure><h3 id="修改用户组"><a href="#修改用户组" class="headerlink" title="修改用户组"></a>修改用户组</h3><p>修改用户组的属性使用groupmod命令。其语法如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupmod [-<span class="type">options</span>] groupname</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-g</td><td>新GID</td></tr><tr><td>-o</td><td>表示可以与其它用户组使用相同的GID</td></tr><tr><td>-n</td><td>新名称</td></tr></tbody></table><h3 id="切换用户组"><a href="#切换用户组" class="headerlink" title="切换用户组"></a>切换用户组</h3><p>如果一个用户同时属于多个用户组，那么用户可以使用命令newgrp在用户组之间切换，以便具有其他用户组的权限，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newgrp groupname</span><br></pre></td></tr></table></figure><h2 id="权限相关命令"><a href="#权限相关命令" class="headerlink" title="权限相关命令"></a>权限相关命令</h2><h3 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h3><p><code>chmod</code>(全称：change mode)命令是控制用户对文件的权限的命令</p><p><code>Linux</code>的文件调用权限分为三级 : 文件所有者（Owner）、用户组（Group）、其它用户（Other Users）。</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230203/f582479fdc3144039fea9c1a9ab41fb3.jpg" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230203/f582479fdc3144039fea9c1a9ab41fb3.jpg"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [<span class="type">options</span>]  mode filename...</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-v</td><td>显示权限变更的详细资料</td></tr><tr><td>-f</td><td>若该文件权限无法被更改也不要显示错误讯息</td></tr><tr><td>-R</td><td>对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)</td></tr></tbody></table><p>这里的mode可以使用权限字符串，也可以使用8进制表示</p><p><strong>权限字符串</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">who</span>][<span class="type">operator</span>][<span class="type">permission</span>]</span><br></pre></td></tr></table></figure><ul><li>who：给谁加权限，u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是</li><li>operator：设置权限，+ 表示增加权限、- 表示取消权限、&#x3D; 表示唯一设定权限</li><li>permission：权限列表，r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行</li></ul><p><strong>8进制模式</strong></p><table><thead><tr><th>数字</th><th>权限</th><th>rwx</th><th>二进制</th></tr></thead><tbody><tr><td>7</td><td>读 + 写 + 执行</td><td>rwx</td><td>111</td></tr><tr><td>6</td><td>读 + 写</td><td>rw-</td><td>110</td></tr><tr><td>5</td><td>读 + 执行</td><td>r-x</td><td>101</td></tr><tr><td>4</td><td>只读</td><td>r–</td><td>100</td></tr><tr><td>3</td><td>写 + 执行</td><td>-wx</td><td>011</td></tr><tr><td>2</td><td>只写</td><td>-w-</td><td>010</td></tr><tr><td>1</td><td>只执行</td><td>–x</td><td>001</td></tr><tr><td>0</td><td>无</td><td>—</td><td>000</td></tr></tbody></table><p>这样mod可以用3个数字直接表示，例如：765 将这样解释</p><ul><li>所有者的权限用数字表达：属主的那三个权限位的数字加起来的总和。如 rwx ，也就是 4+2+1 ，应该是 7</li><li>用户组的权限用数字表达：属组的那个权限位数字的相加的总和。如 rw- ，也就是 4+2+0 ，应该是 6</li><li>其它用户的权限数字表达：其它用户权限位的数字相加的总和。如 r-x ，也就是 4+0+1 ，应该是 5</li></ul><p><strong>练习：</strong></p><p>在桌面创建<code>start.sh</code>文件，给用户读写执行权限，给用户所属组读，给其它成员无权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch start.sh</span><br><span class="line">chmod <span class="number">740</span> start.sh</span><br></pre></td></tr></table></figure><h3 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h3><p><code>chown</code>（全称：change owner）命令用于设置文件所有者和文件关联组的命令，需要超级用户才能执行</p><p><code>Linux</code>是多人多工操作系统，所有的文件皆有拥有者,利用 chown 将指定文件的拥有者改为指定的用户或组</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown [<span class="type">options</span>] user[:<span class="type">group</span>] filename..</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>忽略错误信息</td></tr><tr><td>-v</td><td>显示详细的处理信息</td></tr><tr><td>-R</td><td>处理指定目录以及其子目录下的所有文件</td></tr></tbody></table><p><strong>练习：</strong></p><ul><li>创建<code>/data/work</code>目录，在其下创建<code>1.txt</code>，<code>2.txt</code>文件，更改<code>/data/work</code>目录及其下的文件所属的用户为<code>worker</code>，用户组为<code>work</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R worker:work /data/work/</span><br></pre></td></tr></table></figure><h3 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h3><p>在命令前面加<code>sudo</code>可以以非超级用户身份执行超级用户有权执行的命令，但前提是需要授权</p><p>关于给普通用户授权可以编辑<code>/etc/sudoers</code>文件，在最后一页可以看到如下内容：</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230203/10c334ff9ac34e679f933ec835bc7f92.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230203/10c334ff9ac34e679f933ec835bc7f92.png"></p><p>可以看到这行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%wheel <span class="attr">ALL</span>=(ALL)ALl</span><br></pre></td></tr></table></figure><p>我们复制，然后将<code>%wheel</code>改为目标用户就可以了，后面的ALL给的权限，我们这里就简单些给所有权限</p><p>这个时候用普通用户创建<code>/testdir</code>目录会报无权限，我们可以加上<code>sudo</code>再测一下</p><h2 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h2><ul><li>创建用户组<code>developer</code>，创建用户<code>zhangsan</code>，<code>lisi</code>，<code>wangwu</code>并指定他们的家目录为<code>/developer/&#123;name&#125;</code>，所属组为<code>developer</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换root用户，当然大家也可以用有root权限的用户在下面的命令前加sudo</span></span><br><span class="line">su</span><br><span class="line"><span class="comment"># 创建/developer目录</span></span><br><span class="line">mkdir /developer</span><br><span class="line"><span class="comment"># 创建用户组</span></span><br><span class="line">groupadd developer</span><br><span class="line"><span class="comment"># 添加用户</span></span><br><span class="line">useradd <span class="literal">-d</span> /developer/zhangsan <span class="literal">-g</span> developer <span class="literal">-m</span> zhangsan</span><br><span class="line">useradd <span class="literal">-d</span> /developer/lisi <span class="literal">-g</span> developer <span class="literal">-m</span> lisi</span><br><span class="line">useradd <span class="literal">-d</span> /developer/wangwu <span class="literal">-g</span> developer <span class="literal">-m</span> wangwu</span><br></pre></td></tr></table></figure><ul><li>修改<code>zhangsan</code>，<code>lisi</code>，<code>wangwu</code>的密码为1234(可以把一组命令放到文件中，然后给文件加上执行权限就可以通过执行这个文件的方式执行其中的命令)</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /developer &amp;&amp; <span class="built_in">ls</span> | awk <span class="string">&#x27;&#123;printf &quot;echo 1234 | passwd %s --stdin\n&quot;,$1&#125;&#x27;</span> &gt; pass.sh &amp;&amp; chmod +x pass.sh &amp;&amp; /bin/sh pass.sh &amp;&amp; <span class="built_in">rm</span> <span class="literal">-fr</span> pass.sh</span><br></pre></td></tr></table></figure><ul><li>创建<code>/developer/common</code>的目录并修改所属为<code>zhangsan</code>，所属组为<code>developer</code>，并给其所属用户及所属组加上读写执行权限，其它用户无权限</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /developer</span><br><span class="line">mkdir common</span><br><span class="line">chown <span class="literal">-R</span> zhangsan:developer common</span><br><span class="line">chmod <span class="literal">-R</span> <span class="number">770</span> common/</span><br></pre></td></tr></table></figure><ul><li>切换用户身份为<code>zhangsan</code>在<code>/developer/common</code>目录下创建<code>hello.txt</code>并写入<code>hello,i am zhangsan</code>，并为组加上读写权限</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su zhangsan</span><br><span class="line"><span class="built_in">cd</span> /developer/common</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello,i am zhangsan&#x27;</span> &gt; hello.txt</span><br><span class="line">chmod <span class="number">664</span> hello.txt</span><br></pre></td></tr></table></figure><ul><li>切换用户身份为<code>lisi</code>和<code>wangwu</code>分别在<code>/developer/common/hello.txt</code>追加<code>hello,i am &#123;name&#125;</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su lisi/wangwu</span><br><span class="line"><span class="built_in">cd</span> /developer/common</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello,i am lisi/wangwu&#x27;</span> &gt;&gt; hello.txt</span><br></pre></td></tr></table></figure><ul><li>创建用户<code>zhaoliu</code>，用户组为<code>zhaoliu</code>，家目录为<code>/home/zhaoliu</code>，所属组为<code>zhaoliu</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd zhaoliu</span><br></pre></td></tr></table></figure><ul><li>尝试执行上在<code>/developer/common/hello.txt</code>追回<code>hello,i am zhaoliu</code></li><li>修改<code>zhaoliu</code>的附加组为<code>developer</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod <span class="literal">-G</span> developer zhaoliu</span><br></pre></td></tr></table></figure><ul><li>再次测试</li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这节课给大家简单的讲了下<code>Linux</code>中的用户及权限，也教大家远程登录，后续的课程中我们就很少会直接在<code>Linux</code>主机上操作了，都会使用远程登录的方式 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;经过前面几节课的学习，我们应该是慢慢的可以脱离&lt;code&gt;Linux&lt;/code&gt;的图形窗口了，这节课带大家认识下&lt;code&gt;Linux&lt;/</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="用户" scheme="https://study.kevinlu98.cn/tags/%E7%94%A8%E6%88%B7/"/>
    
    <category term="权限" scheme="https://study.kevinlu98.cn/tags/%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>(五)Linux文本处理</title>
    <link href="https://study.kevinlu98.cn/2023/02/01/wen-ben-chu-li.html"/>
    <id>https://study.kevinlu98.cn/2023/02/01/wen-ben-chu-li.html</id>
    <published>2023-02-01T03:03:00.000Z</published>
    <updated>2023-02-08T12:29:48.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们上节课学了vim文本编辑器，可以以交互的方式去编辑我们的文本，即在vim是打开文本然后通过键盘对其进行插入、删除、替换等，这节课就会大家介绍一下Linux中的文本三剑客，之前在第三课我们已经学习了<code>grep</code>命令，这节课我们就来学习剩下的两个,<code>sed</code>与<code>awk</code>及一些其它命令</p><h2 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h2><p>上面我们学的<code>vim</code>是采用交互的方式来编辑文本，但<code>sed</code>不同，它是采用非交互式，我们事先提供给<code>sed</code>一组规则，然后sed会按照这组规则来处理我们的目标文本</p><p><code>sed</code>的基本工作流程：</p><ol><li><p>每次仅读取一行内容</p></li><li><p>根据提供的规则命令匹配并修改数据(注意，sed 默认不会直接修改源文件数据，而是会将数据复制到缓冲区中，修改也仅限于缓冲区中的数据)</p></li><li><p>将执行结果输出</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [<span class="type">options</span>] filename</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-e script</td><td>后面跟脚本命令，会将该命令添加到已有命令中</td></tr><tr><td>-f script_file</td><td>后面根一个脚本命令的文件，会将文件中的脚本命令添加到已有命令中</td></tr><tr><td>-i</td><td>直接修改源文件</td></tr><tr><td>-n</td><td>默认情况下，sed 会在所有的脚本指定执行完毕后，会自动输出处理后的内容，而该选项会屏蔽启动输出</td></tr></tbody></table><h3 id="s替换脚本-常用"><a href="#s替换脚本-常用" class="headerlink" title="s替换脚本(常用)"></a>s替换脚本(常用)</h3><p>我们学过<code>vim</code>之后再看这个脚本就很好理解了</p><p>这里的<code>address</code>解释一下，在后面出现的所有<code>address</code>都同理，<code>address</code>表示操作目标行，可以省略，如果省略则操作所有行，可以只写一个数字表示精确某行，可以用<code>,</code>分隔2个数字表示一个范围，最后一行可以使用<code>$</code>来表示</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">address</span>]s/pattern/replacement/flags</span><br><span class="line"><span class="comment"># pattern 匹配正则</span></span><br><span class="line"><span class="comment"># replacement 替换的内容</span></span><br><span class="line"><span class="comment"># 一个标记，下面会列出</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>flag标记</th><th>功能</th></tr></thead><tbody><tr><td>n</td><td>在一行中匹配到第几次时才替换，n为任意数字，不写时默认为1</td></tr><tr><td>g</td><td>对数据中所有匹配内容进行替换</td></tr><tr><td>w filename</td><td>将缓冲区的结果写到文件</td></tr><tr><td>p</td><td>打印替换命令所替换的行，通常与 -n 选项一起使用</td></tr></tbody></table><p><strong>练习：</strong></p><p>我们使用如下命令在桌面创建文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;EOF&gt;<span class="number">1</span>.txt</span><br><span class="line">linux linux python</span><br><span class="line">java golang java</span><br><span class="line">scala linux linux</span><br><span class="line">golang java scala</span><br><span class="line">linux python golang</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>替换文件每行第2个<code>linux</code>为<code>golang</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;s/linux/golang/2&#x27;</span> <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><ul><li>替换所有的<code>linux</code>为<code>golang</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;s/linux/golang/g&#x27;</span> <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><ul><li>替换第1到3行的<code>linux</code>为<code>java</code>并将替换后的文件保存到<code>2.txt中</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;1,3s/linux/java/g&#x27;</span> <span class="number">1</span>.txt &gt; <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><table><thead><tr><th>用法</th><th>功能</th></tr></thead><tbody><tr><td>[address]d</td><td>删除某个范围的内容</td></tr><tr><td>[address]a|i\text</td><td>这里的|表示或者的意思，a表示在指定行的后面插入一行，i命令在指定行的前面插入一行，如果在添加多行内容内需要在每行的结尾处加上\就可以了</td></tr><tr><td>[address]c\text</td><td>将指定行的所有内容替换成新内容</td></tr><tr><td>[address]w filename</td><td>将文本中指定行写入指定文件中</td></tr><tr><td>[address]r filename</td><td>将一个文件的内容插入到目标文件的指定位置</td></tr></tbody></table><p><strong>练习：</strong></p><p>我们使用如下命令将上面的<code>1.txt</code>拷贝为带行号的<code>2.txt</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> <span class="literal">-n</span> <span class="number">1</span>.txt  &gt; <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>删除所有行内容</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;d&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>删除第3行的内容</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;3d&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>删除2到4行的内容</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;2,4d&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>删除第3行到最后一行的内容</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;3,$d&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>在第3行后加入新文本<code>new line</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;3a\new line&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>在第3行前加入新文本<code>new line</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;3i\new line&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>在第4行后加入如下内容</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line">i amd lengwen</span><br><span class="line">bye</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;4a\</span></span><br><span class="line"><span class="string">&gt; hello \</span></span><br><span class="line"><span class="string">&gt; i am lengwen \</span></span><br><span class="line"><span class="string">&gt; bye&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>替换第3行的内容为<code>replace line</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;3c\replace line&#x27;</span> <span class="number">2</span>.txt</span><br></pre></td></tr></table></figure><ul><li>将<code>2.txt</code>中的1到3行写到<code>3.txt</code>并屏蔽<code>sed</code>的输出，然后打印出<code>3.txt</code>的内容(<strong>提示：在shell中可以使用<code>&amp;&amp;</code>连接多个命令</strong>)</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-n</span> <span class="string">&#x27;1,3w 3.txt&#x27;</span> <span class="number">2</span>.txt &amp;&amp; <span class="built_in">cat</span> <span class="number">3</span>.txt</span><br></pre></td></tr></table></figure><ul><li>使用如下命令在桌面创建<code>add.txt</code>并将<code>add.txt</code>的内容插入到<code>2.txt</code>的第4行后</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;EOF&gt;add.txt</span><br><span class="line">this is the first line</span><br><span class="line">this is the second line</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="literal">-e</span> <span class="string">&#x27;4r add.txt&#x27;</span> <span class="number">2</span>.txt </span><br></pre></td></tr></table></figure><h2 id="打印命令"><a href="#打印命令" class="headerlink" title="打印命令"></a>打印命令</h2><h3 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h3><p><code>linux</code> 的 <code>echo</code> 指令与 <code>PHP</code> 的 <code>echo</code> 指令类似，都是用于字符串的输出，向屏幕打印出一句话</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;text&quot;</span> <span class="comment">#这里的引号可以省略，引号中可以引用变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;text&#x27;</span> <span class="comment"># 如果不想引用变量可以使用</span></span><br></pre></td></tr></table></figure><p>在<code>linux</code>中，我们可以使用<code>变量名=变量值</code>来定义变量，使用<code>$变量量</code>来使用变量，比如使用如下命令定义<code>name</code>变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=lengwen</span><br></pre></td></tr></table></figure><p>使用如下命令使用变量</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;i am <span class="variable">$name</span>&quot;</span></span><br><span class="line">mkdir <span class="variable">$name</span></span><br></pre></td></tr></table></figure><p>使用<code>&#39;&#39;</code>打印</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$name&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h3><p><code>printf</code>命令如果大家有学过<code>c语言</code>相信看到这个命令还是会有些熟悉，<code>linux</code>中的<code>printf</code>命令与<code>c语言</code>标准库中的<code>printf()</code>用法大同小异</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">printf <span class="built_in">format-string</span> [<span class="type">arguments...</span>]</span><br><span class="line"><span class="comment"># format-string为格式控制字符串，通常会包含占位符</span></span><br><span class="line"><span class="comment"># arguments为参数列表，不定长，其个数为format-string中的占位符的个数</span></span><br></pre></td></tr></table></figure><p>与echo不同的是<code>printf</code>是不会在字符串结尾添加换行符的，需要我们手动添加<code>\n</code>，这里的<code>\n</code>是转义字符换行的意思，如果大家不了解转义字符可以看看百科上对其的解释及转义字符对照表<a href="https://baike.baidu.com/item/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/86397?fr=aladdin">传送门</a></p><h4 id="转义字符对照表"><a href="#转义字符对照表" class="headerlink" title="转义字符对照表"></a>转义字符对照表</h4><table><thead><tr><th>转义字符</th><th>说明</th></tr></thead><tbody><tr><td>\a</td><td>警告字符，通常为ASCII的BEL字符</td></tr><tr><td>\b</td><td>后退</td></tr><tr><td>\c</td><td>抑制（不显示）输出结果中任何结尾的换行字符（只在%b格式指示符控制下的参数字符串中有效），而且，任何留在参数里的字符、任何接下来的参数以及任何留在格式字符串中的字符，都被忽略</td></tr><tr><td>\f</td><td>换页（formfeed）</td></tr><tr><td>\n</td><td>换行</td></tr><tr><td>\r</td><td>回车</td></tr><tr><td>\t</td><td>水平制表符</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\\</td><td>一个字面上的反斜杠字符</td></tr><tr><td>\ddd</td><td>表示1到3位数八进制值的字符。仅在格式字符串中有效</td></tr><tr><td>\0ddd</td><td>表示1到3位的八进制值字符</td></tr></tbody></table><h4 id="printf占位符"><a href="#printf占位符" class="headerlink" title="printf占位符"></a>printf占位符</h4><table><thead><tr><th>占位符</th><th>含义</th></tr></thead><tbody><tr><td>%s</td><td>字符串</td></tr><tr><td>%c</td><td>字符</td></tr><tr><td>%d</td><td>整数</td></tr><tr><td>%f</td><td>小数</td></tr></tbody></table><p>对于占位符我们都可以通过加数字的方式指定其宽度，如<code>%10s</code>，指定输出宽度为10的字符串，任何字符都会被显示在 10 个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来，如：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printf <span class="string">&quot;%10s&quot;</span> lengwen </span><br></pre></td></tr></table></figure><p>这些占位符默认是右对齐的，我们可以通过加<code>-</code>来实现左对齐</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printf <span class="string">&quot;%-10s&quot;</span> lengwen</span><br></pre></td></tr></table></figure><h2 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h2><p><code>awk</code>与<code>sed</code>类似，也是逐行扫描文件做处理，<code>awk</code>有自己的语法，说其为一个处理文本文件的编程语言也不为过，我们课程主要学习<code>linux</code>入门，所以就带大家简单认识一下<code>awk</code>，学习一些<code>awk</code>的简单使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk [<span class="type">options</span>] [<span class="type">script</span>] filename</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-F fs</td><td>以fs作为输入的行分隔符，awk默认的分隔符为空格或制表符</td></tr><tr><td>-f script_file</td><td>从脚本文件中读取awk脚本命令来代替在命令行中直接输入</td></tr><tr><td>-v var&#x3D;val</td><td>在执行脚本之前定义变量var并初始化为val</td></tr></tbody></table><p>为了方便我们演示，我们使用如下命令在桌面创建文件<code>score.txt</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;EOF&gt;score.txt</span><br><span class="line">小红 <span class="number">60</span> <span class="number">70</span> <span class="number">75</span></span><br><span class="line">小明 <span class="number">80</span> <span class="number">65</span> <span class="number">82</span></span><br><span class="line">小丽 <span class="number">98</span> <span class="number">95</span> <span class="number">97</span></span><br><span class="line">小黄 <span class="number">76</span> <span class="number">84</span> <span class="number">89</span></span><br><span class="line">小文 <span class="number">57</span> <span class="number">68</span> <span class="number">59</span></span><br><span class="line">小李 <span class="number">77</span> <span class="number">58</span> <span class="number">86</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>awk的脚本命令由两部分组成，分别为匹配规则和执行命令，这里的匹配规则可以是正则，也可以是一个逻辑运算，执行的命令仅对匹配到的行生效，执行命令部分需要写在<code>&#123;&#125;</code>内</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;匹配规则&#123;执行命令&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h3><p>awk的命令中打印主要有2个命令，<code>print</code>和<code>printf</code></p><ul><li>print：作用同<code>echo</code>命令，用于向屏幕打印一句话</li><li>printf：作用同<code>printf</code>命令，用指定格式向屏幕打印一句话</li></ul><p>在awk中调用命令时可将参数放到<code>()</code>内，也可将命令名和命令参数用空格隔开</p><p><strong>练习：</strong></p><p>对上述文件有几个以9结尾的行打印几个ok</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;/9$/&#123;print &quot;ok&quot;&#125;&#x27;</span> score.txt</span><br></pre></td></tr></table></figure><h3 id="内建变量"><a href="#内建变量" class="headerlink" title="内建变量"></a>内建变量</h3><p>awk中有很多默认的内建变量我们可以直接使用，下面我列出一些比较常用的</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>$n</td><td>当前记录的第n个字段，字段间由FS分隔</td></tr><tr><td>$0</td><td>完整的输入记录</td></tr><tr><td>NR</td><td>已经读出的记录数，就是行号，从1开始</td></tr></tbody></table><p><strong>练习：</strong></p><ul><li>打印出每行第二列的内容和行号</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print NR, $2&#125;&#x27;</span> score.txt</span><br></pre></td></tr></table></figure><ul><li>打印出<code>大家好，我叫xxx，我的语文成绩为xx</code>，假设第1列的数字是语文成绩</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;printf &quot;大家好,我叫%s,我的语文成绩是%d\n&quot;,$1,$2&#125;&#x27;</span> score.txt</span><br></pre></td></tr></table></figure><ul><li>替换<code>score.txt</code>中的空格为<code>----</code>，然后使用<code>----</code>做分隔符完成上一题</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/ /----/g&#x27;</span> score.txt | awk <span class="operator">-F</span> <span class="string">&#x27;----&#x27;</span> <span class="string">&#x27;&#123;printf &quot;大家好,我叫%s,我的语文成绩是%d\n&quot;,$1,$2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>awk中也有一些运算符，就类似一般编程语言中的运算符，这里就不带大家一个个看了，我们用几个例子感受一下</p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>&#x3D; +&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; %&#x3D; ^&#x3D; **&#x3D;</td><td>赋值</td></tr><tr><td>?:</td><td>C条件表达式</td></tr><tr><td>||</td><td>逻辑或</td></tr><tr><td>&amp;&amp;</td><td>逻辑与</td></tr><tr><td>~ 和 !~</td><td>匹配正则表达式和不匹配正则表达式</td></tr><tr><td>&lt; &lt;&#x3D; &gt; &gt;&#x3D; !&#x3D; &#x3D;&#x3D;</td><td>关系运算符</td></tr><tr><td>空格</td><td>连接</td></tr><tr><td>+ -</td><td>加，减</td></tr><tr><td>* &#x2F; %</td><td>乘，除与求余</td></tr><tr><td>+ - !</td><td>加，减和逻辑非</td></tr><tr><td>^ ***</td><td>求幂</td></tr><tr><td>++ –</td><td>字段引用</td></tr><tr><td>in</td><td>数组成员</td></tr></tbody></table><p><strong>练习：</strong></p><ul><li>过滤第3个成绩为优秀的学生名称</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="literal">-vscore</span>=<span class="number">85</span> <span class="string">&#x27;$4&gt;=score&#123;print $1&#125;&#x27;</span> score.txt</span><br></pre></td></tr></table></figure><h3 id="BEGIN和END关键字"><a href="#BEGIN和END关键字" class="headerlink" title="BEGIN和END关键字"></a>BEGIN和END关键字</h3><p>awk 中还可以指定脚本命令的运行时机。默认情况下，awk 会从输入中读取一行文本，然后针对该行的数据执行程序脚本，但有时可能需要在处理数据前运行一些脚本命令，这就需要使用 BEGIN 关键字</p><p>和 BEGIN 关键字相对应，END 关键字允许我们指定一些脚本命令，awk 会在读完数据后执行它们</p><p><strong>练习：</strong></p><p>这次我们就做一个综合一点的练习，使用<code>begin</code>和<code>end</code>及前面所学知识将<code>score.txt</code>文件按如下格式输出，三列数字从左到右分别是语文数学英语</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">姓名  语文  数学  英语  总分</span><br><span class="line"><span class="literal">--------------------------</span></span><br><span class="line">小红  <span class="number">60</span>    <span class="number">70</span>    <span class="number">75</span>   <span class="number">205</span></span><br><span class="line">小明  <span class="number">80</span>    <span class="number">65</span>    <span class="number">82</span>   <span class="number">227</span></span><br><span class="line">小丽  <span class="number">98</span>    <span class="number">95</span>    <span class="number">97</span>   <span class="number">290</span></span><br><span class="line">小黄  <span class="number">76</span>    <span class="number">84</span>    <span class="number">89</span>   <span class="number">249</span></span><br><span class="line">小文  <span class="number">57</span>    <span class="number">68</span>    <span class="number">59</span>   <span class="number">184</span></span><br><span class="line">小李  <span class="number">77</span>    <span class="number">58</span>    <span class="number">86</span>   <span class="number">221</span></span><br><span class="line"><span class="literal">--------------------------</span></span><br><span class="line">均分  <span class="number">74.7</span>  <span class="number">73.3</span>  <span class="number">81.3</span> <span class="number">229.3</span></span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><ol><li>我们可以看到在输出每行结果之前我们先输出了表头，这里我们可以放到<code>begin</code>中完成</li><li>同理我们可以将最后的均分放到<code>end</code>中完成</li><li>均分怎么求呢？可以先定义变量用于保存各科的部分，然后除上总行数</li></ol><p><strong>实践：</strong></p><p>这次由于我们的执行命令很长，所以我们可以写到文件中然后用<code>-f</code> 参数指定从文件中获取脚本，在桌面创建<code>calc.awk</code>文件，在其内部书写如下内容：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span> &#123;</span><br><span class="line">        chinese=<span class="number">0</span></span><br><span class="line">        math=<span class="number">0</span></span><br><span class="line">        english=<span class="number">0</span></span><br><span class="line">        printf <span class="string">&quot;姓名  语文  数学  英语  总分\n&quot;</span></span><br><span class="line">        printf <span class="string">&quot;----------------------------\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">        chinese+=<span class="variable">$2</span></span><br><span class="line">        math+=<span class="variable">$3</span></span><br><span class="line">        english+=<span class="variable">$4</span></span><br><span class="line">        printf <span class="string">&quot;%s  %4d  %4d  %4d  %4d\n&quot;</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">END</span>&#123;</span><br><span class="line">        printf <span class="string">&quot;----------------------------\n&quot;</span></span><br><span class="line">        printf <span class="string">&quot;均分  %2.1f  %2.1f  %2.1f  %2.1f\n&quot;</span>,chinese/NR,math/NR,english/NR,(chinese+math+english)/NR</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后执行命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="operator">-f</span> calc.awk score.txt</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>今天我们主要学习了<code>linux</code>中的文本处理，可能对比前面学习的简单命令来说这节课的<code>sed</code>及<code>awk</code>较难理解，大家下去可以自己找些文本文件自己用<code>linux</code>的文本三剑客试着处理下</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们上节课学了vim文本编辑器，可以以交互的方式去编辑我们的文本，即在vim是打开文本然后通过键盘对其进行插入、删除、替换等，这节课就会大家</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="文本处理" scheme="https://study.kevinlu98.cn/tags/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
    
    <category term="sed" scheme="https://study.kevinlu98.cn/tags/sed/"/>
    
    <category term="awk" scheme="https://study.kevinlu98.cn/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>(四)vim文本编辑器</title>
    <link href="https://study.kevinlu98.cn/2023/01/16/wen-ben-bian-ji-qi.html"/>
    <id>https://study.kevinlu98.cn/2023/01/16/wen-ben-bian-ji-qi.html</id>
    <published>2023-01-16T03:03:00.000Z</published>
    <updated>2023-02-08T12:29:48.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在上节课讲文件描述符的时候应该是有提到过在Linux中一切皆文件，包括鼠标、键盘、网卡等这些硬件在内，所以我们在使用Linux操作系统中需要频繁的修改文件 ，这节课就带大家学习一下Linux中非常重要的文本编辑器<code>vim</code></p><h2 id="Vim与Vi"><a href="#Vim与Vi" class="headerlink" title="Vim与Vi"></a>Vim与Vi</h2><h3 id="Vi"><a href="#Vi" class="headerlink" title="Vi"></a>Vi</h3><p>vi是所有Linux系统都会内建的文本编辑器，他不像我们在windows的记事本那样打开一个图形窗口来进行编辑，而是在shell窗口中对文本进行编辑，不过现在很少有人会使用vi编辑器了，都是用它的替代器vim</p><h3 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h3><p>vim 是从 vi 发展出来的一个文本编辑器，兼容 vi 的所有指令，不仅能编辑文本，而且还有代码补全、编译及错误跳转等方便编程的功能特别丰富，现在基本一些 主流的Linux操作系统上都内置了vim，我们可以看看<a href="https://www.vim.org/">vim官网</a>对其的描述</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230116/0700f475b36a44cca49c04a712ea32d2.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230116/0700f475b36a44cca49c04a712ea32d2.png"></p><h2 id="Vim的工作模式"><a href="#Vim的工作模式" class="headerlink" title="Vim的工作模式"></a>Vim的工作模式</h2><p>在使用vim编辑器时，共有3种工作模式，分别是底线命令模式、命令模式和编辑模式，这3种工作模式可以随意切换</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230116/af38f52c3f6249a08254987389e2e28f.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230116/af38f52c3f6249a08254987389e2e28f.png"></p><h3 id="Vim的命令模式"><a href="#Vim的命令模式" class="headerlink" title="Vim的命令模式"></a>Vim的命令模式</h3><p>在使用vim编辑文件时，默认所处的模式就是命令模式，可使用方向键(上、下、左、右)移动光标位置，也可以对其进行复制、粘贴、删除、替换、撤销等操作，接下来我们具体看看怎么使用命令模式</p><h4 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h4><p><strong>这个表格中的字母是区分大小写的</strong></p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td><strong>[n] + h 或 向左箭头键(←)</strong></td><td><strong>光标向左移动n个字符，这里n为任意数字，可以省略，省略时默认为1</strong></td></tr><tr><td><strong>[n] + j 或 向下箭头键(↓)</strong></td><td><strong>光标向下移动n个字符，这里n为任意数字，可以省略，省略时默认为1</strong></td></tr><tr><td><strong>[n] + k 或 向上箭头键(↑)</strong></td><td><strong>光标向上移动n个字符，这里n为任意数字，可以省略，省略时默认为1</strong></td></tr><tr><td><strong>[n] + l(小写L) 或 向右箭头键(→)</strong></td><td><strong>光标向右移动n个字符，这里n为任意数字，可以省略，省略时默认为1</strong></td></tr><tr><td>Ctrl+f</td><td>屏幕向下移动一页</td></tr><tr><td>Ctrl+b</td><td>屏幕向上移动一页</td></tr><tr><td>Ctrl+d</td><td>屏幕向下移动半页</td></tr><tr><td>Ctrl+u</td><td>屏幕向上移动半页</td></tr><tr><td>+</td><td>光标移动到下一行的非空格字符</td></tr><tr><td>-</td><td>光标移动到上一行的非空格字符</td></tr><tr><td>[n] + 空格键</td><td>光标会向后移动 n 个字符，这里n为任意数字，可以省略，省略时默认为1，这里与右键是有区别的，当移动到这行最后时会自动换行</td></tr><tr><td>0</td><td>数字0，移动到行首</td></tr><tr><td>$</td><td>移动到行尾</td></tr><tr><td>H</td><td>光标移动到这个屏幕的最上方那一行的第一个字符(非文件第1行)</td></tr><tr><td>M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td>L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td><strong>G</strong></td><td><strong>移动到这个文件的最后一行</strong></td></tr><tr><td><strong>[n] + G</strong></td><td><strong>移动到这个文件的第 n 行，这里n为任意数字</strong></td></tr><tr><td><strong>gg</strong></td><td><strong>移动到这个文件的第一行，相当于 1G</strong></td></tr><tr><td><strong>[n] + 回车键</strong></td><td><strong>光标向下移动 n 行，这里n为任意数字，可以省略，省略时默认为1，这里与下键是有区别的，下键不会回到行首</strong></td></tr><tr><td><strong>[n] + w&#x2F;W</strong></td><td><strong>光标移动至下n个单词的单词首，这里n为任意数字，可以省略，省略时默认为1</strong></td></tr><tr><td>[n] + b&#x2F;B</td><td>光标移动至前n个单词的单词首，这里n为任意数字，可以省略，省略时默认为1</td></tr><tr><td>[n] + e&#x2F;E</td><td>光标移动至后n个单词的单词尾，这里n为任意数字，可以省略，省略时默认为1</td></tr></tbody></table><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td><strong>&#x2F; + [word]</strong></td><td><strong>向光标之下寻找一个为 word 的字符串，这里的word为任意字符串，通常配合n和N使用</strong></td></tr><tr><td>? + [word]</td><td>向光标之下寻找一上为 word 的字符串，这里的word为任意字符串</td></tr><tr><td><strong>n</strong></td><td><strong>重复前一个搜寻的动作</strong></td></tr><tr><td><strong>N</strong></td><td><strong>反向重复前一个搜寻的动作</strong></td></tr></tbody></table><h4 id="复制-x2F-粘贴-x2F-撤销-x2F-删除-x2F-其它"><a href="#复制-x2F-粘贴-x2F-撤销-x2F-删除-x2F-其它" class="headerlink" title="复制&#x2F;粘贴&#x2F;撤销&#x2F;删除&#x2F;其它"></a>复制&#x2F;粘贴&#x2F;撤销&#x2F;删除&#x2F;其它</h4><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td>[n] + x</td><td>在一行字当中向后删除n个字符，包含光标</td></tr><tr><td>[n] + X</td><td>在一行字当中向前删除n个字符</td></tr><tr><td><strong>[n] + dd</strong></td><td><strong>剪切光标所在的向下 n 行，包含光标</strong></td></tr><tr><td>d1G</td><td>剪切光标所在到第一行的所有数据，包含光标</td></tr><tr><td>dG</td><td>剪切光标所在到最后一行的所有数据，包含光标</td></tr><tr><td>d$</td><td>剪切游标所在处到行尾的所有字符，包含光标</td></tr><tr><td>d0</td><td>剪切游标所在处到行首的所有字符</td></tr><tr><td>d + [n] +w</td><td>在一行中向后删除n个单词，包含光标，这里n为任意数字，省略默认为1</td></tr><tr><td><strong>[n] + yy</strong></td><td><strong>向后复制n行，包含光标所在行，这里n为任意数字，省略默认这1</strong></td></tr><tr><td>y1G</td><td>复制光标所在到第一行的所有数据，包含光标</td></tr><tr><td>yG</td><td>复制光标所在到最后一行的所有数据，包含光标</td></tr><tr><td>y$</td><td>复制游标所在处到行尾的所有字符，包含光标</td></tr><tr><td>Y0</td><td>复制游标所在处到行首的所有字符</td></tr><tr><td>Y + [n] +w</td><td>在一行中向后复制n个单词，包含光标，这里n为任意数字，省略默认为1</td></tr><tr><td><strong>p</strong></td><td><strong>将已复制的数据在光标下一行贴上</strong></td></tr><tr><td>P</td><td>将已复制的数据在光标上一行贴上</td></tr><tr><td><strong>J</strong></td><td><strong>将光标所在行与下一行的数据结合成同一行</strong></td></tr><tr><td><strong>u</strong></td><td><strong>复原前一个动作(撤销)</strong></td></tr><tr><td>&gt;&gt;</td><td>选中行向右缩进</td></tr><tr><td>&lt;&lt;</td><td>选中行向左缩进</td></tr></tbody></table><h4 id="可视块"><a href="#可视块" class="headerlink" title="可视块"></a>可视块</h4><p>上面只是在移动光标的位置，当我们想要选择一块内容时可以用可视块功能进行选择，方便我们对选中区域做批量操作</p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td>v(小写)</td><td>字符可视化，以字符为单位进行选择</td></tr><tr><td>V(大写)</td><td>行可视化，以行为单位进行选择</td></tr><tr><td><strong>Ctrl+v</strong></td><td><strong>块可视化，以块为单位进行选择，类似于在vscode中用鼠标中键进行选择</strong></td></tr></tbody></table><p>在使用可视块选中后可以使用如下输入进行批量编辑</p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td>d</td><td>删除选中部分文本</td></tr><tr><td>D</td><td>删除选中行，与d不同的是即使某行没有完全被选中，删除时也会被删除</td></tr><tr><td>y</td><td>将选中部分复制到剪贴板</td></tr><tr><td>p(小写)</td><td>将剪贴板中的内容粘贴到光标之后</td></tr><tr><td>P(大写)</td><td>将剪贴板中的内容粘贴到光标之前。</td></tr><tr><td>u(小写)</td><td>将选中部分中的大写字符全部改为小写字符。</td></tr><tr><td>U(大写)</td><td>将选中部分中的小写字符全部改为大写字符。</td></tr><tr><td>&gt;</td><td>将选中部分右移（缩进）一个 tab 键</td></tr><tr><td>&lt;</td><td>将选中部分左移一个 tab 键</td></tr></tbody></table><h3 id="Vim的编辑模式"><a href="#Vim的编辑模式" class="headerlink" title="Vim的编辑模式"></a>Vim的编辑模式</h3><p>在命令模式下输入如下可以进入编辑模式，进入输入模式后大家正常输入就可以了，大家在输入时可以按<code>Ctrl+n/p</code>  根据历史输入和系统库文件进行输入提示，也可以按<code>ESC</code>退回到命令模式</p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td><strong>i</strong></td><td><strong>从光标处进入输入模式</strong></td></tr><tr><td><strong>I(这是一个大写i)</strong></td><td><strong>目前所在行的第一个非空格符进入输入模式</strong></td></tr><tr><td><strong>a</strong></td><td><strong>从光标下一个字符进入 输入模式</strong></td></tr><tr><td><strong>A</strong></td><td><strong>目前所在行的行尾进入输入模式</strong></td></tr><tr><td><strong>o</strong></td><td><strong>从光标所在行的下一行进入输入模式</strong></td></tr><tr><td><strong>O</strong></td><td><strong>从光标所在行的上一行进入输入模式</strong></td></tr><tr><td><strong>r</strong></td><td><strong>进入替换模式，替换光标所在字符，只会进行一次替换</strong></td></tr><tr><td><strong>R</strong></td><td><strong>进入替换模式，会一直替换光标所在 字符，替换后光标后移，直到按ESC键退出替换模式</strong></td></tr></tbody></table><h3 id="Vim底线命令模式"><a href="#Vim底线命令模式" class="headerlink" title="Vim底线命令模式"></a>Vim底线命令模式</h3><p>一般情况下可以通过命令模式下按<code>:</code>进入 指令行模式，如果我们在编辑模式，可以先</p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td>:w</td><td>将编辑的数据写保存</td></tr><tr><td>:w!</td><td>若文件为只读时强制保存，但能不能执行成功与用户对文件的权限有关</td></tr><tr><td>:q</td><td>退出vim</td></tr><tr><td>:q!</td><td>如果修改过文件又不想保存，可以使用!强制退出</td></tr><tr><td>:wq</td><td>保存并退出</td></tr><tr><td>:wq!</td><td>强制保存并退出</td></tr><tr><td><strong>:x</strong></td><td><strong>保存并退出</strong></td></tr><tr><td>:[n1],[n2] w filename</td><td>保存n1到n2行的内容到filename中，n1，n2为行号范围，如果n1，n2省略则默认到1行到最后一行，类似于另存为</td></tr><tr><td>:! command</td><td>暂时离开vim去执行command命令</td></tr><tr><td><strong>:%s&#x2F;word1&#x2F;word2&#x2F;g[c]</strong></td><td><strong>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2，加上c为在每次替换时需要用户确认</strong></td></tr><tr><td><strong>:n1,n2s&#x2F;word1&#x2F;word2&#x2F;g[c]</strong></td><td><strong>从第n1行到n2行寻找 word1 字符串，并将该字符串取代为 word2，n1，n2为行号，加上c为在每次替换时需要用户确认</strong></td></tr></tbody></table><h3 id="Vim设置"><a href="#Vim设置" class="headerlink" title="Vim设置"></a>Vim设置</h3><p>这里列几个常用的，可以在命令模式下输入进行该次临时生效</p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td>set nu</td><td>显示行号</td></tr><tr><td>set nonu</td><td>取消行号显示</td></tr><tr><td>syntax on&#x2F;off</td><td>开启&#x2F;关闭高亮</td></tr><tr><td>set tabstop&#x3D;4</td><td>设置tab的缩进为4格</td></tr><tr><td>set shiftwidth&#x3D;4</td><td>设置移动命令的缩进为4格</td></tr></tbody></table><p>如果想入设置生效则可以编辑<code>/etc/vimrc</code>文件，该文件对系统所有用户生效，如果只想改变当前用户的vim设置，可以在用户家目录下创建<code>.vimrc</code>文件进行设置</p><h3 id="Vim键盘图"><a href="#Vim键盘图" class="headerlink" title="Vim键盘图"></a>Vim键盘图</h3><p>这张图是网上流传比较广的一张图，出自<a href="http://www.viemu.com/">www.viemu.com</a>，当然另一位大佬<a href="http://cenalulu.github.io/">cenalulu</a>的博客上也有进阶版大家感兴趣可以去看看<a href="http://cenalulu.github.io/linux/all-vim-cheatsheat/">史上最全Vim快捷键键位图 – 入门到进阶</a></p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230118/ec45de7352ad4bd09aae45189a8eca99.gif" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20230118/ec45de7352ad4bd09aae45189a8eca99.gif"></p><h2 id="Vim批量注释"><a href="#Vim批量注释" class="headerlink" title="Vim批量注释"></a>Vim批量注释</h2><p>我们将<code>/etc/profile</code>考到桌面进行练习</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/profile ~/</span><br></pre></td></tr></table></figure><h3 id="指令行模式注释"><a href="#指令行模式注释" class="headerlink" title="指令行模式注释"></a>指令行模式注释</h3><p>我们使用vim打开刚刚考过来的profile文件，使用指令行进行替换</p><ul><li>在每行行首加上<code>#</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/^/<span class="comment">#/g</span></span><br></pre></td></tr></table></figure><ul><li>取消每行行首的<code>#</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/^<span class="comment">#//g</span></span><br></pre></td></tr></table></figure><ul><li>在每行行首加上<code>//</code>进行注释</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/^/\/\//g</span><br></pre></td></tr></table></figure><ul><li>取消每行行首的<code>//</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/^\/\//g</span><br></pre></td></tr></table></figure><ul><li>在1到10行行首加上<code>#</code>注释</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="number">1</span>,<span class="number">10</span>s/^/<span class="comment">#/g</span></span><br></pre></td></tr></table></figure><ul><li>替换文中<code>pathmunge</code>为<code>linux</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/pathmunge/linux/g</span><br></pre></td></tr></table></figure><ul><li>撤销所有操作</li></ul><h3 id="可视块批量注释"><a href="#可视块批量注释" class="headerlink" title="可视块批量注释"></a>可视块批量注释</h3><ul><li>使用可视块以块为区域进行选择<code>Ctrl+v</code>第5到第10行行首</li><li>按<code>I(大写i)</code>进行行首插入</li><li>插入一个<code>#</code>加一个<code>空格</code></li><li>按<code>ESC</code>退出编辑即可生效</li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这节课没有讲什么命令，主要就是<code>vim</code>编辑器的使用，以后我们编辑文件就不用再依赖图形窗口进行编辑了</p><p>但这个vim的指令和快捷键太多了，这个只能大家自己在使用时慢慢用，慢慢的就熟悉了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在上节课讲文件描述符的时候应该是有提到过在Linux中一切皆文件，包括鼠标、键盘、网卡等这些硬件在内，所以我们在使用Linux操作系统中需要</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="vim" scheme="https://study.kevinlu98.cn/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>(三)重定向与管道</title>
    <link href="https://study.kevinlu98.cn/2023/01/15/zhong-ding-xiang-yu-guan-dao.html"/>
    <id>https://study.kevinlu98.cn/2023/01/15/zhong-ding-xiang-yu-guan-dao.html</id>
    <published>2023-01-15T02:39:00.000Z</published>
    <updated>2023-02-08T12:29:48.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不知道大家上节课那些命令掌握的怎么样，这些命令一定要自己亲自去敲一遍才能加深印象，不用死记硬背，用的次数多了自然就记住了</p><h2 id="本节用到的命令"><a href="#本节用到的命令" class="headerlink" title="本节用到的命令"></a>本节用到的命令</h2><h3 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h3><p>wc命令，全称是<code>word count</code>，并不是你们想的那样，主要用于计算文件的字节数、单词数、或是列数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc [<span class="type">options</span>] [<span class="type">name...</span>]</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-c</td><td>字节数</td></tr><tr><td>-l</td><td>行数</td></tr><tr><td>-w</td><td>单词数(这里的单词是英文意义上的，以空白隔开)</td></tr></tbody></table><h3 id="sort命令"><a href="#sort命令" class="headerlink" title="sort命令"></a>sort命令</h3><p>sort命令，顾名思义就是用于排序的命令，主要可针对文本文件的内容，以行为单位来排序</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span> [<span class="type">options</span>] name</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-b</td><td>忽略每行前面开始出的空格字符</td></tr><tr><td>-f</td><td>忽略大小写</td></tr><tr><td>-t split</td><td>指定排序时所用的栏位分隔字符，split为分隔字符</td></tr><tr><td>-n</td><td>依照数值的大小排序</td></tr><tr><td>-r</td><td>以相反的顺序来排序</td></tr><tr><td>-k field1 [fieldN…]</td><td>按指定的列进行排序，field为列</td></tr><tr><td>-o output</td><td>将排序后的结果存入指定的文件，output为文件名</td></tr></tbody></table><p><strong>举例说明：</strong></p><p>创建一个<code>score.txt</code>文件内容如下，假设是学生的成绩</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xiaomi <span class="number">60</span></span><br><span class="line">laowang <span class="number">78</span></span><br><span class="line">zhangsan <span class="number">90</span></span><br><span class="line">Lisi <span class="number">56</span></span><br><span class="line">wangwu <span class="number">89</span></span><br><span class="line">Zhaoliu <span class="number">100</span></span><br><span class="line">tianqi <span class="number">30</span></span><br></pre></td></tr></table></figure><p>按学生名字顺序输出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span> <span class="operator">-f</span> score.txt</span><br></pre></td></tr></table></figure><p>按学生成绩倒序输出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span> <span class="literal">-nrk2</span> score.txt</span><br></pre></td></tr></table></figure><h3 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h3><p>为了方便我们后面的演示，这里学一个比较重要的命令<code>grep</code>，它与<code>sed</code>及<code>awk</code>被称为Linux文本处理三剑客，后面会详细介绍另外两个</p><p>grep命令能够在一个或多个文件中，搜索某一特定的字符模式（也就是正则表达式），此模式可以是单一的字符、字符串、单词或句子</p><p>正则表达式：描述一组字符串的一个模式，正则表达式的构成模仿了数学表达式，通过使用操作符将较小的表达式组合成一个新的表达式，这个学过一些编程语言的朋友们应该或多或少都有了解，这里就只做简单说明，如果感兴趣可以看看菜鸟教程里的相关介绍：<a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式 - 教程</a></p><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>将匹配 0 个（即空白）或多个字符前面出现的字符</td></tr><tr><td>.</td><td>将匹配任何一个字符，且只能是一个字符</td></tr><tr><td>[abc]</td><td>匹配方括号中的任意一个字符，括号内为做任意数量的任意字符</td></tr><tr><td>[^abc]</td><td>匹配除方括号中字符外的所有字符，括号内为做任意数量的任意字符</td></tr><tr><td>^</td><td>以后面的字符开头</td></tr><tr><td>$</td><td>以前面的字符结尾</td></tr></tbody></table><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [<span class="type">options</span>] keyword name... <span class="comment">#keyword为正则表达式，name为文件名</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-c</td><td>仅列出文件中包含keyword的行数</td></tr><tr><td>-i</td><td>忽略模式中的字母大小写</td></tr><tr><td>-l</td><td>列出带有匹配行的文件名</td></tr><tr><td>-n</td><td>在每一行的最前面列出行号</td></tr><tr><td>-v</td><td>列出没有匹配模式的行</td></tr><tr><td>-r</td><td>递归查找</td></tr></tbody></table><p>我们以<code>/etc/passwd</code>文件为例对该命令做一个简单的认识</p><p><strong>例1：查找文件中包含me的行</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;me&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><strong>例2：在上述的的基础上输出行号</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="literal">-n</span> <span class="string">&#x27;me&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><strong>例3：列出共有多少行以s开头n结尾的行数</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="literal">-c</span> <span class="string">&#x27;^s.*n$&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><strong>例4：列出&#x2F;etc目录下以s开头n结尾的文件及行号，并忽略错误输出</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="literal">-nr</span> <span class="string">&#x27;^s.*n$&#x27;</span> /etc/* <span class="number">2</span>&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><h3 id="基本概念介绍"><a href="#基本概念介绍" class="headerlink" title="基本概念介绍"></a>基本概念介绍</h3><p>在<code>Liunx shell</code>中，重定向为意思为改变标准输入输出的方向，重定向分为两种，输入重定向和输出重定向，这么说可能有些抽象，先看一些概念</p><ul><li><p>什么是输入输出方向</p><ul><li><strong>输入方向：</strong>数据从哪里流向程序</li><li><strong>输出方向：</strong>数据从程序流向哪里</li></ul></li><li><p>什么是标准的输入入输出方向</p><ul><li><strong>标准输入方向：</strong>数据默认的输入方向为从键盘流向程序</li><li><strong>标准输出方向：</strong>数据默认的输出方向为从程序流向显示器</li></ul></li><li><p>什么是输入输出重定向</p><ul><li><strong>输入重定向：</strong>改变了数据的标准输入方向，即数据从其它地方流入程序</li><li><strong>输出重定向：</strong>改变了数据的标准输出方向，即数据从程序流入其它地方</li></ul></li></ul><p>看完这些概念大家是不是已经蒙了，这个没关系，后面会有例子帮大家理清这些的</p><h3 id="文件描述符"><a href="#文件描述符" class="headerlink" title="文件描述符"></a>文件描述符</h3><p>在Linux中，一切皆文件，包括标准输入设备（键盘）和标准输出设备（显示器）在内的所有计算机硬件都是文件，为了区分这些打开的文件，Linux会为每个文件有一个整数做标识，这个整数就被称为文件描述符（File Descriptor），相当于一个非负的文件索引，我们可以通过文件描述符操作相应的文件</p><p>在LLinux进程中，会默认打开三个文件描述符</p><table><thead><tr><th>文件描述符</th><th>文件名</th><th>类型</th><th>硬件</th></tr></thead><tbody><tr><td>0</td><td>&#x2F;dev&#x2F;stdin</td><td>标准输入文件</td><td>键盘</td></tr><tr><td>1</td><td>&#x2F;dev&#x2F;stdout</td><td>标准输出文件</td><td>显示器</td></tr><tr><td>2</td><td>&#x2F;dev&#x2F;stderr</td><td>标准错误输出文件</td><td>显示器</td></tr></tbody></table><p>一般来说，我们打开文件后占用一个文件描述符，由于0、1、2已被标准文件描述符占用，他就可以往后找一个没有被占用的文件描述符来占用</p><p>大家知道有这么个东西就行了，这个用的不多，就知道我上面例出的三个的意思就行，如果大家想要深入了解这块内容，大家可以看看CSDN上的这篇帖子<a href="https://blog.csdn.net/luseysd/article/details/123222993">彻底弄懂 Linux 下的文件描述符（fd）</a></p><h3 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h3><p>输出重定向是指命令的结果不再输出到显示器上，而是输出到如文件中。这样做的最大好处就是把程序的输出结果保存起来，当我们需要的时候可以随时查询</p><p>在Linux中有如下的输出重定向符号</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>command &gt;file</td><td>以覆盖的方式，把 command 的正确输出结果输出到 file 文件中</td></tr><tr><td>command &gt;&gt;file</td><td>以追加的方式，把 command 的正确输出结果输出到 file 文件中</td></tr><tr><td>command n&gt;file</td><td>以覆盖的方式，把文件描述符为 n 的文件重定向到 file文件中</td></tr><tr><td>command n&gt;&gt;file</td><td>以追加的方式，把文件描述符为 n 的文件重定向到 file文件中</td></tr><tr><td>command &gt;file n&gt;&amp;m</td><td>以覆盖的方式，把文件描述符为n与文件描述符为m的输出合并到file文件中</td></tr></tbody></table><p>当描述符为1时可以不写，默认就是1</p><h4 id="例1：标准输出"><a href="#例1：标准输出" class="headerlink" title="例1：标准输出"></a>例1：标准输出</h4><p><strong>把&#x2F;etc下的文件详情输出到桌面的demo1.txt中</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> <span class="literal">-l</span> /etc <span class="number">1</span>&gt; ~/Desktop/demo1.txt</span><br><span class="line"><span class="built_in">ls</span> <span class="literal">-l</span> /etc &gt; ~/Desktop/demo1.txt</span><br></pre></td></tr></table></figure><h4 id="例2：错误输出"><a href="#例2：错误输出" class="headerlink" title="例2：错误输出"></a>例2：错误输出</h4><p><strong>把错误输出重定向到桌面的err.txt中</strong></p><p>命令正确执行是没有错误信息的，我们必须刻意地让命令执行出错</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> abcd.aaa <span class="number">2</span>&gt;err.txt</span><br></pre></td></tr></table></figure><h4 id="例3：综合练习"><a href="#例3：综合练习" class="headerlink" title="例3：综合练习"></a>例3：综合练习</h4><p><strong>执行下面的程序完成相关操作</strong></p><p>在桌面创建名为<code>output.sh</code>的文件，内容如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">username=`cat /proc/sys/kernel/random/uuid | md5sum |cut <span class="literal">-c</span> <span class="number">1</span><span class="literal">-9</span>`</span><br><span class="line">path=`cat /proc/sys/kernel/random/uuid | md5sum |cut <span class="literal">-c</span> <span class="number">1</span><span class="literal">-9</span>`</span><br><span class="line"><span class="built_in">echo</span> `date` <span class="string">&quot;user [<span class="variable">$username</span>] view file: <span class="variable">$path</span>&quot;</span></span><br><span class="line"><span class="built_in">ls</span> <span class="variable">$path</span></span><br><span class="line"><span class="built_in">sleep</span> <span class="number">1</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>在桌面执行如下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x output.sh</span><br></pre></td></tr></table></figure><p>运行文件可以查看效果</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/1673760198500.png"></p><p>将正常输出保留在屏幕，错误输出到桌面的<code>err.log</code>的文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./output.sh <span class="number">2</span>&gt;err.log</span><br></pre></td></tr></table></figure><p>将错误输出保留在屏幕，正常输出到<code>out.log</code>的文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./output.sh <span class="number">1</span>&gt;out.log</span><br></pre></td></tr></table></figure><p>将错误输出到<code>err.log</code>文件中，正常输出到<code>out.log</code>的文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./output.sh <span class="number">1</span>&gt;out.log <span class="number">2</span>&gt;err.log</span><br></pre></td></tr></table></figure><p>将错误输出与正常输出合并输出到<code>application.log</code>文件中</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./output.sh &gt;application.log <span class="number">2</span>&gt;&amp;<span class="number">1</span> <span class="comment"># 把标准输出重定向到application.log的文件中，然后把错误输出合并到标准输出中</span></span><br></pre></td></tr></table></figure><h4 id="x2F-dev-x2F-null-文件"><a href="#x2F-dev-x2F-null-文件" class="headerlink" title="&#x2F;dev&#x2F;null 文件"></a>&#x2F;dev&#x2F;null 文件</h4><p>上节课我们讲过，<code>/dev</code>目录是存在设备的特殊目录，这个目录下有个<code>null</code>设备，即为一个空白设备，有时我们不想把信息输出到屏幕，也不想输出到文件，就可以重定向到此，断续以上面的程序举例</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./output.sh &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="输入重定向"><a href="#输入重定向" class="headerlink" title="输入重定向"></a>输入重定向</h3><p>与输出重定向类似，输入重定向是改变输入的方向，不再使用键盘作为命令输入的来源，而是使用文件</p><p>在Linux中有如下的输入重定向符号</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>command &lt;file</td><td>将 file 文件中的内容作为 command 的输入</td></tr><tr><td>command &lt;&lt;END</td><td>从标准输入（键盘）中读取数据，直到遇见分界符 END 才停止（分界符可以是任意的字符串，用户自己定义，常见的有EOF：end of file）</td></tr></tbody></table><h4 id="例1：统计标准输入的信息"><a href="#例1：统计标准输入的信息" class="headerlink" title="例1：统计标准输入的信息"></a>例1：统计标准输入的信息</h4><p>我们可以把标准输入作为wc命令的输入来计统计我们从键盘字符的信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wc &lt;&lt;EOF</span><br><span class="line"><span class="number">123456</span></span><br><span class="line">hello world</span><br><span class="line">i amd lengwen</span><br><span class="line">kevinlu98.cn</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="例2：将用户的输入输出到文件"><a href="#例2：将用户的输入输出到文件" class="headerlink" title="例2：将用户的输入输出到文件"></a>例2：将用户的输入输出到文件</h4><p>我们希望将我们的输入直接输出到文件中，这样可以方便快捷的创建文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;EOF&gt;file.txt</span><br><span class="line">hello</span><br><span class="line">i amd lengwen</span><br><span class="line">my site is kevinlu98.cn</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><p>Linux除了有上面的输入输出重定向，还有一种功能，就是可以将两个或者多个命令（程序或者进程）连接到一起，把一个命令的输出作为下一个命令的输入，以这种方式连接的两个或者多个命令就形成了<strong>管道（pipeline）</strong></p><p>Linux 管道使用竖线<code>|</code>连接多个命令，这被称为<strong>管道符</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">command1 | command2</span><br><span class="line">command1 | command2 [|<span class="type">commandN...</span>]</span><br></pre></td></tr></table></figure><p>当在两个命令之间设置管道时，管道符<code>|</code>左边命令的输出就变成了右边命令的输入。只要第一个命令向标准输出写入，而第二个命令是从标准输入读取，那么这两个命令就可以形成一个管道，这里需要注意，command2 必须可以处理 command1 的输出结果</p><p>管道也是一种文件，管道中的读数据是一次性操作，数据一旦被读，它就从管道中被抛弃</p><h3 id="例1：查找文件是否在目录内"><a href="#例1：查找文件是否在目录内" class="headerlink" title="例1：查找文件是否在目录内"></a>例1：查找文件是否在目录内</h3><p><strong>查找passwd是否在&#x2F;etc目录下</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /etc/ | grep <span class="string">&#x27;passwd&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>列出当前目录下.bashrc的详细信息</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> <span class="literal">-a</span> | grep <span class="string">&#x27;passwd&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="例2：按文件大小顺序输出"><a href="#例2：按文件大小顺序输出" class="headerlink" title="例2：按文件大小顺序输出"></a>例2：按文件大小顺序输出</h3><p>我们先列出文件的详细信息，文件的大小在第5列，然后用数值方式对其逆向输出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> <span class="literal">-l</span> | <span class="built_in">sort</span> <span class="literal">-nrk5</span></span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这节课我们主要讲了重定向及管道，这两个都是改变文件的输出，不同的是重定向是连接命令的输出与文件，而管道是连接命令与命令的，这两个知识点在日常工作中用到的频率还是非常高的，希望大家可以好好理解一下，自己多动手写一写，想一些需求自己做一做</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;不知道大家上节课那些命令掌握的怎么样，这些命令一定要自己亲自去敲一遍才能加深印象，不用死记硬背，用的次数多了自然就记住了&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="centos" scheme="https://study.kevinlu98.cn/tags/centos/"/>
    
    <category term="重定向" scheme="https://study.kevinlu98.cn/tags/%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
    <category term="管道" scheme="https://study.kevinlu98.cn/tags/%E7%AE%A1%E9%81%93/"/>
    
    <category term="grep" scheme="https://study.kevinlu98.cn/tags/grep/"/>
    
  </entry>
  
  <entry>
    <title>(二)认识Linux文件系统及相关命令</title>
    <link href="https://study.kevinlu98.cn/2023/01/15/ren-shi-wen-jian-xi-tong-ji-xiang-guan-ming-ling.html"/>
    <id>https://study.kevinlu98.cn/2023/01/15/ren-shi-wen-jian-xi-tong-ji-xiang-guan-ming-ling.html</id>
    <published>2023-01-14T18:51:00.000Z</published>
    <updated>2023-02-08T12:29:48.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上节课到现在已经过了好久了，因为上个月才入职新单位，转了下技术栈，一直在学golang及k8s那些东西，所以就没有更新视频，所幸到现在基本已经能参与到项目团队的项目开发中了，就继续给大家录教程</p><p>我发现之前录的教程太乱了，第一课的安装倒无所谓，但第二节的命令讲的太乱了，我希望这个文档可以在大家学完之后查看什么资料直接翻文档就能很快的找到，所以第二节就录新录制下</p><h2 id="文档位置"><a href="#文档位置" class="headerlink" title="文档位置"></a>文档位置</h2><p>之前文档一直在我博客放着，本来我的博客只是写写文章，偶尔发一些技术帖，加上这些教程的文档后难免显的有些乱了，我专门用<a href="https://hexo.io/zh-cn/">hexo</a>搭建了一个静态站点用于放课件，大家如果感兴趣了也可以网上搜搜，比较简单，站点地址：<a href="https://study.kevinlu98.cn/">study.kevinlu98.cn</a></p><h2 id="Linux文件结构"><a href="#Linux文件结构" class="headerlink" title="Linux文件结构"></a>Linux文件结构</h2><p>在Linux中，文件系统是一棵树，<code>/</code>为其根结点，形状大致如下：</p><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/b8ipofh4gn1669448309044.png" alt="img"></p><h3 id="常见的二级目录"><a href="#常见的二级目录" class="headerlink" title="常见的二级目录"></a>常见的二级目录</h3><ul><li>&#x2F;bin：存放二进制可执行命令目录</li><li><strong>&#x2F;home：用户主目录的基点目录，默认情况每个用户主目录都设在该目录下，如默认：用户user01的主目录是&#x2F;home&#x2F;user01，可用~&#x2F;user01表示</strong></li><li>&#x2F;lib：存放标准程序设计库目录，又叫动态链接共享库目录，目录中文件类似windows里的后缀名为dll的文件</li><li><strong>&#x2F;etc：存放系统管理和配置文件目录</strong></li><li>&#x2F;dev：存放设备特殊文件目录，如声卡文件，磁盘文件等</li><li><strong>&#x2F;usr：最庞大的目录，存放应用程序和文件目录</strong></li><li>&#x2F;proc：虚拟目录，是系统内存的映射，可直接访问这个目录来获取系统信息</li><li>&#x2F;root：系统管理员的主目录（特权阶级）</li><li>&#x2F;var：存放系统产生的经常变化文件的目录，例如打印机、邮件等假脱机目录、日志文件、格式化后的手册页以及一些应用程序的数据文件等</li><li>&#x2F;tmp：存放公用临时文件目录</li><li>&#x2F;sbin 系统管理命令，这里存放的是系统管理员使用的管理程序</li><li>&#x2F;mnt 系统提供这个目录是让用户临时挂载其他的文件系统</li><li>&#x2F;lost+found 这个目录平时是空的，用于存放系统非正常关机而留下未保存的文件</li></ul><h3 id="Linux文件路径-重要"><a href="#Linux文件路径-重要" class="headerlink" title="Linux文件路径(重要)"></a>Linux文件路径(重要)</h3><ul><li><p>路径相关的概念：</p><ul><li><p><code>.</code>：代表当前目录</p></li><li><p><code>..</code>：代表父级目录</p></li><li><p><code>/</code>：linux中文件分隔或根目录</p></li><li><p><code>~</code>：当前用户的家目录</p></li></ul></li><li><p>绝对路径：从根(&#x2F;)一直到目标文件的路径</p></li><li><p>相对路径：相对于当前文件的父目录的路径</p></li></ul><p>大家可以做个类比，以我们现在生活中的地址为例</p><p>这个大家第一次听可能有些陌生，这点不用担心，根据我的教程来，大家会在使用Linux过程中不知不觉的把这个知识撑握</p><h2 id="Linux行提示符"><a href="#Linux行提示符" class="headerlink" title="Linux行提示符"></a>Linux行提示符</h2><p>我们右键打开终端，可以看到如下的行提示符</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">lengwen</span>@<span class="type">localhost</span> ~]<span class="variable">$</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td>lengwen</td><td>表示当前打开shell的用户</td></tr><tr><td>@</td><td>分隔符</td></tr><tr><td>localhost</td><td>主机名</td></tr><tr><td>~</td><td>当前据目录(<strong>在Linux中<code>~</code>可以快捷的代替当前用户的家目录</strong>)</td></tr><tr><td>$</td><td>身份提示符(<strong># 表示超级用户；$ 表示普通用户</strong>)</td></tr></tbody></table><h2 id="认识命令"><a href="#认识命令" class="headerlink" title="认识命令"></a>认识命令</h2><h3 id="命令的执行"><a href="#命令的执行" class="headerlink" title="命令的执行"></a>命令的执行</h3><ul><li>命令必须在行提示符之后输入</li><li>命令格式：命令 参数名 参数值</li><li>Ctrl + C：撤销命名的执行</li><li>命令参数<ul><li>-参数：单词缩写</li><li>–参数：单词的全拼</li></ul></li></ul><h3 id="命令的帮助"><a href="#命令的帮助" class="headerlink" title="命令的帮助"></a>命令的帮助</h3><h4 id="–help"><a href="#–help" class="headerlink" title="–help"></a>–help</h4><p>通常情况下，我们在linux中可以使用<code>命令名称 --help</code>来查看一个命令的帮助信息，当然也有些开发着没有为命令写对应的帮助信息，但我们用到的系统命令都是有很标准的命令，都是有帮助信息的</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name <span class="literal">--help</span></span><br><span class="line"><span class="comment"># 例</span></span><br><span class="line">vim <span class="literal">--help</span></span><br></pre></td></tr></table></figure><p>帮助文档中的一些符号解释</p><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>[ ]</td><td>选择加入的内容，可加可不加</td></tr><tr><td>…</td><td>加入的内容个数任意</td></tr></tbody></table><h4 id="man命令"><a href="#man命令" class="headerlink" title="man命令"></a>man命令</h4><p>linux下的man命令是一个帮助命令，掌握这个命令可以让我们更好的学习linux，通过man指令可以查看Linux中的指令帮助、配置文件帮助和编程帮助等信息。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">man</span> [<span class="type">name</span>]</span><br><span class="line"><span class="built_in">man</span> vim</span><br></pre></td></tr></table></figure><h2 id="文件目录相关命令"><a href="#文件目录相关命令" class="headerlink" title="文件目录相关命令"></a>文件目录相关命令</h2><p>这节课在给大家讲一些常用的命令，主要是让大家对linux命令有个大概的认识，我整理的这些命令的参数并不是所有的，只是些最常用的参数，但日常使用是绝对够了；大家也可以输出<code>命令名 --help</code>或<code>man 命令</code>可来查看其它参数，但这些大部分情况下都用不到</p><h3 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h3><p>pwd命令：全称Print Working Directory，也就是打印目前所在目录，这里是以全绝对路径打印</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><h3 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h3><p>cd命令：全称是Change Directory，用于改变当前所在目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> [<span class="type">path</span>]</span><br></pre></td></tr></table></figure><h3 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h3><p>ls命令：全称list directory contents，显示文件的文件名与相关属性。（目前工作目录所含之文件及子目录）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> [-<span class="type">options</span>] [<span class="type">name...</span>]</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>all， 显示所有文件及目录 (. 开头的隐藏文件也会列出)</td></tr><tr><td>-A</td><td>同-a ，但不列出 . (目前目录) 及 .. (父目录)</td></tr><tr><td>-l</td><td>以长格式显示目录下的内容列表，包括文件的<strong>权限、链接数、所有者名称和组所有者、文件大小、最后修改日期时间和文件&#x2F;目录名称</strong></td></tr><tr><td>-d</td><td>仅列出目录本身，而不是列出目录内的文件数据</td></tr><tr><td>-R</td><td>若目录下有文件，则以下之文件亦皆依序列出</td></tr></tbody></table><p><strong>有时候我们可以看到别人用ll命令，这个的输出等同于ls -l</strong></p><h3 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h3><p>touch命令用于修改文件或者目录的时间属性，包括访问时间和修改时间，若文件不存在，系统会建立一个新的文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch [<span class="type">options</span>] name...</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>若文件存在时只修改访问时间为当前时间</td></tr><tr><td>-d</td><td>使用指定字符串表示时间而非当前时间</td></tr><tr><td>-m</td><td>若文件存在时只修改更新时间为当前时间</td></tr></tbody></table><p>不过我们用这个命令基本都不会操作文件的这些时间，都是用它创建一个空文件</p><h3 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h3><p>mkdir：全称make directory，用于创建一个新的目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir [<span class="type">options</span>] name...</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-p</td><td>帮助你直接将所需要的目录(包含上一级目录)递归创建起来！</td></tr></tbody></table><h3 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h3><p>cp命令：全称copy，命令主要用于复制文件或目录。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># source 可以使用通配符*，如*.txt，aa*等</span></span><br><span class="line"><span class="built_in">cp</span> [<span class="type">options</span>] source dest <span class="comment">#source与dest要么都文件，要么都目录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> [<span class="type">options</span>] source... directory <span class="comment"># source... 一个或多个文件</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</td></tr><tr><td>-i</td><td>与 <strong>-f</strong> 选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答 <strong>y</strong> 时目标文件将被覆盖</td></tr><tr><td>-r</td><td>若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。</td></tr></tbody></table><h3 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h3><p>rm命令：全称remove，用于移除文件或目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> [<span class="type">options</span>] name... <span class="comment">#这里的name可以是文件，也可以是目录</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>就是 force 的意思，也不会出现警告信息</td></tr><tr><td>-i</td><td>互动模式，在删除前会询问使用者是否动作</td></tr><tr><td>-r</td><td>递归删除，会删除目标目录及目录下的文件及子目录及子目录下的文件…</td></tr></tbody></table><h3 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h3><p>mv命令：全称move，主要用于移动文件与目录，或修改名称，对这里的移动解释一下，如果源文件(目录)与目标(目录)在同一块磁盘，则命令只是做了一个重命名的操作，反之则先复制再删除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> [<span class="type">options</span>] source dest <span class="comment">#source与dest要么都文件，要么都目录</span></span><br><span class="line"><span class="built_in">mv</span> [<span class="type">options</span>] source... directory <span class="comment"># 将所有source移动到directory目录下</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</td></tr><tr><td>-i</td><td>与 <strong>-f</strong> 选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答 <strong>y</strong> 时目标文件将被覆盖</td></tr></tbody></table><h3 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h3><p>cat命令：由第一行开始显示文件内容</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> [<span class="type">options</span>] name...</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-b</td><td>列出行号，仅针对非空白行做行号显示，空白行不标行号</td></tr><tr><td>-E</td><td>将结尾的断行字节 $ 显示出来</td></tr><tr><td>-n</td><td>列印出行号，连同空白行也会有行号，与 -b 的选项不同</td></tr></tbody></table><h3 id="less命令"><a href="#less命令" class="headerlink" title="less命令"></a>less命令</h3><p>less命令：一页一页的查看文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less name</span><br></pre></td></tr></table></figure><p>less这里没有常用参数，但在less运行时有一些按键大家在知道</p><table><thead><tr><th>按键</th><th>作用</th></tr></thead><tbody><tr><td>空格</td><td>向下翻动一页</td></tr><tr><td>b</td><td>向上翻动一页</td></tr><tr><td>pagedown</td><td>向下翻动一页</td></tr><tr><td>pageup</td><td>向上翻动一页</td></tr><tr><td>&#x2F;字串</td><td>向下搜寻『字串』的功能</td></tr><tr><td>?字串</td><td>向上搜寻『字串』的功能</td></tr><tr><td>n</td><td>重复前一个搜寻</td></tr><tr><td>N</td><td>反向的重复前一个搜寻</td></tr><tr><td>q</td><td>关闭 less</td></tr></tbody></table><h3 id="head命令"><a href="#head命令" class="headerlink" title="head命令"></a>head命令</h3><p>head命令：取出文件前面几行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head [<span class="type">options</span>] name...</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>后面接数字，代表显示几行的意思</td></tr></tbody></table><h3 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h3><p>tail命令：取出文件后面几行，该命令有一个重要的功能就是可以观察打到文件中的日志</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail [<span class="type">options</span>] name... </span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>后面接数字，代表显示几行的意思</td></tr><tr><td>-f</td><td>表示持续侦测后面所接的档名，要等到按下[ctrl]-c才会结束tail的侦测</td></tr></tbody></table><h2 id="shell中的一些快捷键"><a href="#shell中的一些快捷键" class="headerlink" title="shell中的一些快捷键"></a>shell中的一些快捷键</h2><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td><strong>Tab</strong></td><td><strong>在系统中table键可以自动补齐存在的命令，文件名称和某些命令的参数</strong></td></tr><tr><td><strong>上下</strong></td><td><strong>历史的上一条命令，下一条命令</strong></td></tr><tr><td>左右</td><td>一个字符一个字符移动</td></tr><tr><td><strong>Ctrl + a</strong></td><td><strong>光标移动到行首</strong></td></tr><tr><td><strong>Ctrl + e</strong></td><td><strong>光标移动到行尾</strong></td></tr><tr><td>Ctrl + u</td><td>光标所在位置删除到行首</td></tr><tr><td>Ctrl + k</td><td>光标所在位置删除到行尾</td></tr><tr><td><strong>Ctrl + c</strong></td><td><strong>撤销以输入的命令</strong></td></tr><tr><td><strong>Ctrl + d</strong></td><td><strong>退出当前用户环境</strong></td></tr><tr><td><strong>Ctrl + L</strong></td><td><strong>清空屏幕</strong></td></tr><tr><td>Ctrl + Shift + c</td><td>复制</td></tr><tr><td>Ctrl + Shift + v</td><td>粘贴</td></tr><tr><td>Ctrl + shift + t</td><td>在现有shell中重新打开一个table</td></tr><tr><td>Ctrl + shift + n</td><td>在shell中打</td></tr><tr><td><strong>Ctrl + r + 关键字</strong></td><td><strong>调出最近一条含有关键字的命令</strong></td></tr></tbody></table><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这节我们学习了一些Linux上常用的文件目录操作的命令，最后又给大家说了些快捷键，这些都是很基础的东西，在后续教程中会频繁的使用，大家学完一定多多练习，自己动手多写几遍感受一下比看我教程好几遍更有用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上节课到现在已经过了好久了，因为上个月才入职新单位，转了下技术栈，一直在学golang及k8s那些东西，所以就没有更新视频，所幸到现在基本已</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="基础命令" scheme="https://study.kevinlu98.cn/tags/%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>(一)Linux 系列教程介绍</title>
    <link href="https://study.kevinlu98.cn/2023/01/13/xi-lie-jiao-cheng-jie-shao.html"/>
    <id>https://study.kevinlu98.cn/2023/01/13/xi-lie-jiao-cheng-jie-shao.html</id>
    <published>2023-01-13T14:23:00.000Z</published>
    <updated>2023-01-17T11:51:09.210Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>录这套教程主要帮助那些对<code>Linux</code>了解很少但又想做一个初步学习的小伙伴，因为我们一般在找开发相关的工作面试时偶尔也会被问到，而且做为一名开发人员如果不会操作<code>Linux</code>操作系统确实也有些说不过去，因为一般我们在企业中用到的中间件、服务的部署等都是在<code>Linux</code>上，本期教程就带着大家来入门下<code>Linux</code>，学习了<code>Linux</code>操作后大家如果以后用Mac系统也会用起来得心应手</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li><p>CentOS下载：</p><ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学镜像站</a></li><li><a href="https://developer.aliyun.com/mirror/">阿里巴巴镜像站</a></li></ul></li><li><p>VMware下载：<a href="https://customerconnect.vmware.com/cn/downloads/#all_products">https://customerconnect.vmware.com/cn/downloads/#all_products</a></p><ul><li>Mac下载<strong>VMware Fusion</strong></li><li>Windows下载 <strong>VMware Workstation Pro</strong></li></ul></li></ul><h2 id="创建一个CentOS虚拟机"><a href="#创建一个CentOS虚拟机" class="headerlink" title="创建一个CentOS虚拟机"></a>创建一个CentOS虚拟机</h2><h3 id="Mac上的操作"><a href="#Mac上的操作" class="headerlink" title="Mac上的操作"></a>Mac上的操作</h3><ul><li>点击新建选择从光盘或映像中安装</li><li>选择我们的<code>iso</code>文件</li><li>一直点击继续直到结束</li><li>根据自己需要选择磁盘大小和内存大小及CPU</li><li>启动虚拟机</li></ul><h3 id="Windows上的操作"><a href="#Windows上的操作" class="headerlink" title="Windows上的操作"></a>Windows上的操作</h3><ul><li><p>创建虚拟机</p><ul><li>点击文件 -&gt; 新建虚拟机</li><li>选择典型，点击下一步</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/f65f58840e434f8fa5bd5a493a8f0329.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/f65f58840e434f8fa5bd5a493a8f0329.png"></p><ul><li>选择镜像文件点击下一步</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/4fe69a3073a74b39bf4ceda34b8b2f30.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/4fe69a3073a74b39bf4ceda34b8b2f30.png"></p><ul><li>选择安装位置点击下一步</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/d1beb68be801425aad01a5c446a8f79e.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/d1beb68be801425aad01a5c446a8f79e.png"></p><ul><li>根据需要调整磁盘大小</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/c497762c1f454c8e8e9cc4d808794633.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/c497762c1f454c8e8e9cc4d808794633.png"></p><ul><li>根据需要调整其它硬件</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/908e7def33ff4e478df0b9ef7898c254.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/908e7def33ff4e478df0b9ef7898c254.png"></p></li></ul><h2 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h2><ul><li>选择安装CentOS</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/a9mltm5ad91669436712809.png"></p><ul><li>选择语言并点击继续</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/tfl37tm9wd1669436832522.png"></p><ul><li>选择安装盘</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/f8qxpnno2n1669436904214.png"></p><ul><li>选择目标磁盘并点击done</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/07sei4si491669436952180.png"></p><ul><li>选择安装项</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/kxbj25huid1669436994485.png"></p><ul><li>由于我们是亲手，所以可以装一个图形桌面来方便我们学习和操作，选择GNOME 桌面，然后点击Done</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/z2eqvcqqwb1669437099534.png"></p><ul><li>设置完成之后就可以点击继续安装了</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/mj1ay3kmul1669437153942.png"></p><ul><li>在安装过程中设置root密码及我们个人的账户，等待安装完成</li></ul><p>  <img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/20221126/ny62q29krh1669437248487.png"></p><h2 id="初次启动"><a href="#初次启动" class="headerlink" title="初次启动"></a>初次启动</h2><ul><li>点击协议</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/08e342efe2ea47c993718be242c837b8.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/08e342efe2ea47c993718be242c837b8.png"></p><ul><li>点击同意然后点击Done</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/877808368be14cc2b165397c3db0bf5f.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/877808368be14cc2b165397c3db0bf5f.png"></p><ul><li>点击完成</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/79953ca3283749489a369b8418ed69ac.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/79953ca3283749489a369b8418ed69ac.png"></p><ul><li>输入密码进入系统后会有弹窗，不用管，一直点击Next</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/d59e29e7cb3a4fa4a4626cd81e85ee34.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/d59e29e7cb3a4fa4a4626cd81e85ee34.png"></p><h2 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h2><ul><li>点击关机按钮-&gt;设置图标</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/71c8db9ac3924167bbb681ef0042e955.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/71c8db9ac3924167bbb681ef0042e955.png"></p><ul><li>点击区域和语言</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/8072dc2ada0b46deba409f283b2b70a0.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/8072dc2ada0b46deba409f283b2b70a0.png"></p><ul><li>全部选择汉语</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/ca94089e65444e5dbdc6620eca7dd303.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/ca94089e65444e5dbdc6620eca7dd303.png"></p><ul><li>点击重启</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/2d70035953eb4d789c254d291f351064.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/2d70035953eb4d789c254d291f351064.png"></p><ul><li>重启后这里非常重要，一定选保留旧名称</li></ul><p><img src="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/4b24ccbd02694993824ec5e2f9207d50.png" alt="https://imagebed-1252410096.cos.ap-nanjing.myqcloud.com/2059/4b24ccbd02694993824ec5e2f9207d50.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;录这套教程主要帮助那些对&lt;code&gt;Linux&lt;/code&gt;了解很少但又想做一个初步学习的小伙伴，因为我们一般在找开发相关的工作面试时偶尔也</summary>
      
    
    
    
    <category term="Linux菜鸟入门" scheme="https://study.kevinlu98.cn/categories/Linux%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="linux" scheme="https://study.kevinlu98.cn/tags/linux/"/>
    
    <category term="vmware" scheme="https://study.kevinlu98.cn/tags/vmware/"/>
    
    <category term="centos" scheme="https://study.kevinlu98.cn/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>(二十三)登录功能及打包</title>
    <link href="https://study.kevinlu98.cn/2022/10/10/deng-lu-gong-neng-ji-da-bao.html"/>
    <id>https://study.kevinlu98.cn/2022/10/10/deng-lu-gong-neng-ji-da-bao.html</id>
    <published>2022-10-09T18:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>上节课原计划是把登录也说了的，由于时间不够了，就把登录拿到这节课说，然后把之前遗留的小问题处理一下，最后再说说打包的功能</p><h2 id="异步修改"><a href="#异步修改" class="headerlink" title="异步修改"></a>异步修改</h2><p>我们之前做的异步实际是没有生效的，因为我们需要<code>spring</code>帮我们把这个类代理出来才行，我们在同一个类中就没有任作用，因为没有经过<code>spring</code>的代理</p><p>我们将两个发邮件的方法复制到<code>MailHelper</code>中或将<code>@Async</code>的注解加到<code>sendMail</code>方法就可以啦</p><p>在<code>Application</code>上加上<code>@EnableAsync</code>注解</p><h2 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h2><p>我们的后台是不希望被除了我们之外的其他人访问到的，所以我们需要对后台所有的请求进行登录拦截，对于在没有登录的前提下所有操作都跳转到登录页</p><ul><li>我们先定义登录页面的路由并修改页面表单</li><li>我们再写登录接口，如果用户名与密码都与我们配置的用户名密码相等我们就认为登录成功将登录成功的状态存在<code>Session</code>中，反之则返回登录页面且给其报<code>用户名或密码错误</code>的信息，密码加密我们可以直接用<code>Spring</code>的<code> DigestUtils.md5DigestAsHex</code>方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(String username, String password, Model model, HttpSession session)</span> &#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">pass</span> <span class="operator">=</span> DigestUtils.md5DigestAsHex(password.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">  <span class="keyword">if</span> (StringUtils.equals(username, webSite.getUsername()) &amp;&amp; StringUtils.equals(pass, webSite.getPassword())) &#123;</span><br><span class="line">    session.setAttribute(WebSite.LOGIN_SIGN, <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/admin/&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;用户名密码错误&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;admin/login&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/logout&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">logout</span><span class="params">(HttpSession session)</span> &#123;</span><br><span class="line">  session.removeAttribute(WebSite.LOGIN_SIGN);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;admin/login&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/login.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;admin/login&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在页面回显错误信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/plugin/font-awesome/css/font-awesome.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义css文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/admin/css/login.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.lw-error-msg</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: coral;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-login-page&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-login-box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-left&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>冷文学习者-管理后台<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-right&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-error-msg&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;errorMsg&#125;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;errorMsg != null&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/admin/login&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-input&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-input&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">readonly</span> <span class="attr">onfocus</span>=<span class="string">&quot;this.removeAttribute(&#x27;readonly&#x27;)&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-input&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>登录后台<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Copyright © www.kevinlu98.cn All Rights Reserved.</span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            冷文学习者版权所有<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义一个拦截器实现<code>HandlerInterceptor</code>接口并覆写<code>preHandle</code>的方法，当<code>Session</code>中没有登录信息时我们直接转发到登录页面并给出<code>请登录后再进行操作的提示</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.intercepto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.kevinlu98.common.WebSite;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/16 11:07</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">sign</span> <span class="operator">=</span> (Boolean) session.getAttribute(WebSite.LOGIN_SIGN);</span><br><span class="line">    <span class="keyword">if</span> (Objects.nonNull(sign) &amp;&amp; sign) &#123;</span><br><span class="line">      <span class="comment">// 已登录</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      request.setAttribute(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;请登录后进行操作&quot;</span>);</span><br><span class="line">      request.getRequestDispatcher(<span class="string">&quot;/admin/login.html&quot;</span>).forward(request, response);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>定义一个退出登录的路由，操作为清空<code>Session</code>中的登录信息</li><li>在<code>WebConfig</code>中的<code>addInterceptors</code>方法中启用拦截器，用<code>addPathPatterns</code>配置拦截的路由，用<code>excludePathPatterns</code>配置排除被拦截路由中的那些路由</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">  registry.addInterceptor(loginInterceptor)</span><br><span class="line">    .addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">    .excludePathPatterns(<span class="string">&quot;/admin/login&quot;</span>)</span><br><span class="line">    .excludePathPatterns(<span class="string">&quot;/admin/login.html&quot;</span>)</span><br><span class="line">    .excludePathPatterns(<span class="string">&quot;/admin/logout&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打包和运行"><a href="#打包和运行" class="headerlink" title="打包和运行"></a>打包和运行</h2><p>因为我们站点很多信息都存在于<code>application.yml</code>的配置文件中，我们打完包之后<code>application.yml</code>都会打进<code>jar</code>包中，如果我们想更改一下站点信息，我们还需要去改<code>application.yml</code>并重新打包，这样的话就难免有些不太友好，我们这里可以在启动时手动指定加载外部的<code>yml</code>文件</p><ul><li>我们可以打完包手动将项目的<code>application.yml</code>复制到外部</li><li>我们可以利用打包插件自动将<code>application.yml</code>文件复制到外部</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-resources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-resources<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span>&gt;</span>*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span>&gt;</span>*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span>&gt;</span>*/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span>&gt;</span>*/*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>启动时使用<code>--spring.config.local=xxx.yml</code>来启动我们的项目</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;上节课原计划是把登录也说了的，由于时间不够了，就把登录拿到这节课说，然后把之前遗留的小问题处理一下，最后再说说打包的功能&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="异常处理" scheme="https://study.kevinlu98.cn/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>(二十二)后台其它功能的实现</title>
    <link href="https://study.kevinlu98.cn/2022/10/09/hou-tai-qi-ta-gong-neng-de-shi-xian.html"/>
    <id>https://study.kevinlu98.cn/2022/10/09/hou-tai-qi-ta-gong-neng-de-shi-xian.html</id>
    <published>2022-10-08T18:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>前台功能我们已经完全完成了，我们现在来看看后台剩下的内容：控制台、评论管理及登录功能，这节课完了的博客项目就完了，下节课给大家说说我们的项目怎么部署到线上服务器</p><h2 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h2><ul><li>我们先来改造下页面，给左边加上一键已读的按钮，给右边加上评论过滤条件：全部、已读、未读的按钮</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-group&quot;</span> <span class="attr">role</span>=<span class="string">&quot;group&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom: 20px;&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lw-add-btn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-plus&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lw-read-all&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-circle-o&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 一键已读<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-group&quot;</span> <span class="attr">role</span>=<span class="string">&quot;group&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom: 20px;float: right&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>已读<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span>未读<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>一键已读功能开发</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Mapper</span></span><br><span class="line"><span class="meta">@Modifying</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Query(&quot;update  Comment  set view = true where view = false &quot;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">readAll</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">//Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readAll</span><span class="params">()</span> &#123;</span><br><span class="line">  mapper.readAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Controller</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/read&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">read</span><span class="params">()</span> &#123;</span><br><span class="line">  service.readAll();</span><br><span class="line">  <span class="keyword">return</span> Result.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#lw-read-all&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>);</span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/admin/comment/read&#x27;</span>,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">        layer.<span class="title function_">msg</span>(<span class="string">&quot;保存成功&quot;</span>, &#123;<span class="attr">icon</span>: <span class="number">1</span>, <span class="attr">time</span>: <span class="number">500</span>&#125;, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          $(<span class="string">&#x27;#data-table&#x27;</span>).<span class="title function_">bootstrapTable</span>(<span class="string">&#x27;refresh&#x27;</span>, &#123;<span class="attr">silent</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        layer.<span class="title function_">msg</span>(res.<span class="property">message</span>, &#123;<span class="attr">icon</span>: <span class="number">2</span>&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>给<code>BSTable</code>表格一个双击事件，参考<a href="https://bootstrap-table.com/docs/api/events/#ondblclickcell">传送门</a>，点击表格时将表格变为一个<code>textarea</code>，内容为评论内容，然后在这个<code>textarea</code>失去焦点时调用更新接口来进行更新操作</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">onDblClickCell</span>: <span class="keyword">function</span> (<span class="params">field, value, row, $element</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> comment = $(<span class="string">`#data-table .lw-comment-content`</span>);</span><br><span class="line">  comment.<span class="title function_">parent</span>().<span class="title function_">html</span>(comment.<span class="title function_">val</span>())</span><br><span class="line">  <span class="keyword">if</span> (field === <span class="string">&#x27;content&#x27;</span>) &#123;</span><br><span class="line">    $element.<span class="title function_">html</span>(<span class="string">`&lt;textarea class=&quot;form-control lw-comment-content&quot;&gt;<span class="subst">$&#123;value&#125;</span>&lt;/textarea&gt;`</span>)</span><br><span class="line">    $(<span class="string">&#x27;.lw-comment-content&#x27;</span>).<span class="title function_">blur</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> data = &#123;<span class="attr">id</span>: row.<span class="property">id</span>, <span class="attr">content</span>: $(<span class="variable language_">this</span>).<span class="title function_">val</span>()&#125;</span><br><span class="line">      $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;/admin/comment/&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: data,</span><br><span class="line">        <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">            layer.<span class="title function_">msg</span>(<span class="string">&quot;保存成功&quot;</span>, &#123;<span class="attr">icon</span>: <span class="number">1</span>, <span class="attr">time</span>: <span class="number">500</span>&#125;, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">              $(<span class="string">&#x27;#data-table&#x27;</span>).<span class="title function_">bootstrapTable</span>(<span class="string">&#x27;refresh&#x27;</span>, &#123;<span class="attr">silent</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            layer.<span class="title function_">msg</span>(res.<span class="property">message</span>, &#123;<span class="attr">icon</span>: <span class="number">2</span>&#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>完成后端更新接口的开发，更新时直接利用非空拷贝</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Comment comment)</span> &#123;</span><br><span class="line">  <span class="comment">//新评论</span></span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(comment.getId())) &#123;</span><br><span class="line">    sendMailToWebsite(comment.getArticle().getId());</span><br><span class="line">    comment.setCreated(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    comment.setView(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (comment.getPid() != <span class="number">0</span>) &#123;</span><br><span class="line">      sendMailToComment(comment.getArticle().getId(), comment.getPid(), comment.getContent());</span><br><span class="line">      <span class="type">Comment</span> <span class="variable">parent</span> <span class="operator">=</span> detail(comment.getPid());</span><br><span class="line">      comment.setContent(<span class="string">&quot;@&quot;</span> + parent.getNickname() + <span class="string">&quot;: &quot;</span> + comment.getContent());</span><br><span class="line">      comment.setPid(findParent(comment.getPid()));</span><br><span class="line">    &#125;</span><br><span class="line">    mapper.save(comment);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="type">Comment</span> <span class="variable">one</span> <span class="operator">=</span> detail(comment.getId());</span><br><span class="line">    UpdateUtil.copyNullProperties(comment, one);</span><br><span class="line">    mapper.save(one);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将表格的修改按钮改为回复按钮，点击后给其一个弹出回复框输入我们的回复内容调用回复接口，这里可以直接用<a href="https://layui.gitee.io/v2/layer/">Layer</a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#data-table&quot;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.lw-update-btn&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//   获取目标资源id</span></span><br><span class="line">  <span class="keyword">let</span> id = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> aid = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;aid&#x27;</span>)</span><br><span class="line">  layer.<span class="title function_">prompt</span>(&#123;<span class="attr">title</span>: <span class="string">&#x27;回复&#x27;</span>, <span class="attr">formType</span>: <span class="number">2</span>&#125;, <span class="keyword">function</span> (<span class="params">text, index</span>) &#123;</span><br><span class="line">    layer.<span class="title function_">close</span>(index);</span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/admin/comment/&#x27;</span> + id,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">aid</span>: aid,</span><br><span class="line">        <span class="attr">message</span>: text</span><br><span class="line">      &#125;, <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">          layer.<span class="title function_">msg</span>(<span class="string">&quot;回复成功&quot;</span>, &#123;<span class="attr">icon</span>: <span class="number">1</span>&#125;)</span><br><span class="line">          $(<span class="string">&#x27;#data-table&#x27;</span>).<span class="title function_">bootstrapTable</span>(<span class="string">&#x27;refresh&#x27;</span>, &#123;<span class="attr">silent</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          layer.<span class="title function_">msg</span>(res.<span class="property">message</span>, &#123;<span class="attr">icon</span>: <span class="number">2</span>&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>完成后端回复接口的开发</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/&#123;pid&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">replay</span><span class="params">(<span class="meta">@PathVariable</span> Integer pid, Integer aid, String message)</span> &#123;</span><br><span class="line">  <span class="type">Comment</span> <span class="variable">comment</span> <span class="operator">=</span> Comment.builder().article(Article.builder().id(aid).build()).email(webSite.getMail()).nickname(webSite.getNickname()).content(message).pid(pid).url(webSite.getUrl()).build();</span><br><span class="line">  service.save(comment);</span><br><span class="line">  <span class="keyword">return</span> Result.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将页面改为分页</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Mapper</span></span><br><span class="line">Page&lt;Comment&gt; <span class="title function_">findAllByView</span><span class="params">(Boolean view, Pageable pageable)</span>;</span><br><span class="line"><span class="comment">//Service</span></span><br><span class="line"><span class="keyword">public</span> PageHelper&lt;Comment&gt; <span class="title function_">list</span><span class="params">(Boolean view, <span class="type">int</span> pn, <span class="type">int</span> ps)</span> &#123;</span><br><span class="line">  <span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> PageRequest.of(pn - <span class="number">1</span>, ps, Sort.by(Sort.Direction.DESC, <span class="string">&quot;created&quot;</span>));</span><br><span class="line">  Page&lt;Comment&gt; page = Objects.isNull(view) ? mapper.findAll(pageable) : mapper.findAllByView(view, pageable);</span><br><span class="line">  <span class="keyword">return</span> PageHelper.&lt;Comment&gt;builder()</span><br><span class="line">    .rows(page.getContent())</span><br><span class="line">    .total(page.getTotalElements())</span><br><span class="line">    .build();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Controller</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;PageHelper&lt;Comment&gt;&gt; <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam(required = false)</span> Boolean view, <span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pn, <span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer ps)</span> &#123;</span><br><span class="line">  pn = Math.max(<span class="number">1</span>, pn);</span><br><span class="line">  ps = Math.max(<span class="number">1</span>, ps);</span><br><span class="line">  <span class="keyword">return</span> Result.success(service.list(view, pn, ps));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#lw-comment-search button&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-search .btn-primary&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;btn-primary&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;btn-default&#x27;</span>)</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;btn-default&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;btn-primary&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;#data-table&#x27;</span>).<span class="title function_">bootstrapTable</span>(<span class="string">&#x27;refresh&#x27;</span>, &#123;<span class="attr">silent</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#data-table&#x27;</span>).<span class="title function_">bootstrapTable</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/admin/comment/&#x27;</span>,</span><br><span class="line">  <span class="attr">pagination</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">pageNumber</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">sidePagination</span>: <span class="string">&#x27;server&#x27;</span>,</span><br><span class="line">  <span class="attr">pageSize</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">pageList</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">40</span>],</span><br><span class="line">  <span class="attr">responseHandler</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">queryParams</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">pn</span>: (params.<span class="property">offset</span> / params.<span class="property">limit</span>) + <span class="number">1</span>,</span><br><span class="line">      <span class="attr">ps</span>: params.<span class="property">limit</span>,</span><br><span class="line">      <span class="attr">view</span>: $(<span class="string">&#x27;#lw-comment-search .btn-primary&#x27;</span>).<span class="title function_">data</span>(<span class="string">&#x27;view&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h2><p>这里没什么好说的，页面上需要什么内容我们查什么内容就可以了，然后在未读评论这里我们给一个参数标识一下我们要查未读评论，然后在评论管理的路由里解析一下这个参数就行了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;category&quot;</span>, categoryService.count());</span><br><span class="line">  model.addAttribute(<span class="string">&quot;comment&quot;</span>, commentService.count(<span class="literal">null</span>));</span><br><span class="line">  model.addAttribute(<span class="string">&quot;commentFalse&quot;</span>, commentService.count(<span class="literal">false</span>));</span><br><span class="line">  model.addAttribute(<span class="string">&quot;article&quot;</span>, articleService.count());</span><br><span class="line">  model.addAttribute(<span class="string">&quot;newArticleList&quot;</span>, articleService.search(ArticleSearch.builder().type(Article.TYPE_ARTICLE).pageNum(<span class="number">1</span>).pageSize(<span class="number">5</span>).build()).getRows());</span><br><span class="line">  model.addAttribute(<span class="string">&quot;newCommentList&quot;</span>, commentService.list(<span class="literal">null</span>, <span class="number">1</span>, <span class="number">5</span>).getRows());</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;admin/index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;jumbotron&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>网站概要<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>目前有 <span class="tag">&lt;<span class="name">i</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 篇文章, 并有 <span class="tag">&lt;<span class="name">i</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comment&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 条关于你的评论在 <span class="tag">&lt;<span class="name">i</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">th:text</span>=<span class="string">&quot;$&#123;category&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 个分类中.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>其中有 <span class="tag">&lt;<span class="name">i</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;commentFalse&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>条 评论未查看:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-lg&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/admin/comment.html(view=false)&#125;&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span>&gt;</span>点此查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item disabled&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">b</span>&gt;</span>最新文章<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;post:$&#123;newArticleList&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(post.created,&#x27;MM-dd&#x27;)&#125;&quot;</span>&gt;</span>09-28<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/&#123;id&#125;.html(id=$&#123;post.id&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;post.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item disabled&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">b</span>&gt;</span>最新评论<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;comm:$&#123;newCommentList&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(comm.created,&#x27;MM-dd&#x27;)&#125;&quot;</span>&gt;</span>09-29<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comm.content&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;前台功能我们已经完全完成了，我们现在来看看后台剩下的内容：控制台、评论管理及登录功能，这节课完了的博客项目就完了，下节课给大家说说我们的项目</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="异常处理" scheme="https://study.kevinlu98.cn/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>(二十一)统一异常拦截及自定义错误跳转</title>
    <link href="https://study.kevinlu98.cn/2022/10/09/tong-yi-yi-chang-lan-jie-ji-zi-ding-yi-cuo-wu-tiao-zhuan.html"/>
    <id>https://study.kevinlu98.cn/2022/10/09/tong-yi-yi-chang-lan-jie-ji-zi-ding-yi-cuo-wu-tiao-zhuan.html</id>
    <published>2022-10-08T17:22:00.000Z</published>
    <updated>2023-01-17T11:51:09.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>我们博客前台的功能现在已经算是做完了，我们这个时候来把异常这里说下，我们之前在写后端时捕获过一次异常，但我们直接返回了一个<code>json</code>，这样明显是不合理的，因我们我们的路由有些是页面，有些是<code>json</code>，我们只需要在接口返回值是<code>json</code>的时候才返回<code>json</code>，其它情况我们希望返回页面</p><h2 id="定义异常页面"><a href="#定义异常页面" class="headerlink" title="定义异常页面"></a>定义异常页面</h2><p>我们在定义异常页面时可以先将<code>error.html</code>重命名为<code>fail.html</code>，因为<code>Thymeleaf</code>在解析模板出错时会自动跳转到<code>error.html</code></p><ul><li>我们定义一个枚举为<code>ErrorCode</code>，来存放我们的<code>HTTP</code>状态码和对应的信息</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/15 19:40</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ErrorCodeEnum</span> &#123;</span><br><span class="line">  ERROR_404(<span class="number">404</span>,<span class="string">&quot;对不起，你请求的页面暂时未找到.&lt;br&gt;它或许已经被迁移至其它页面啦.&quot;</span>),</span><br><span class="line">  ERROR_500(<span class="number">500</span>,<span class="string">&quot;您好，服务器暂时出发问题，请稍候访问.&lt;br&gt;或您也可以尝试联系站长.&quot;</span>),</span><br><span class="line">  ;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> code;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> String msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>然后定义<code>404</code>和<code>500</code>的路由</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/error/404&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">error404</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;error&quot;</span>, ErrorCodeEnum.ERROR_404);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/error/500&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">error500</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;error&quot;</span>, ErrorCodeEnum.ERROR_500);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="错误页面配置"><a href="#错误页面配置" class="headerlink" title="错误页面配置"></a>错误页面配置</h2><p><strong>重要：</strong>大家先要明白一件事件，就是我们的错误页面配置是根据HTTP请求返回的状态码决定的，这个与统一异常处理不一样</p><ul><li>我们在<code>config</code>里面给<code>Spring</code>容器一个类型为<code>WebServerFactoryCustomizer</code>泛型为<code>ConfigurableWebServerFactory</code>的<code>bean</code></li><li>在这个<code>bean</code>里我们去调用<code>addErrorPages</code>的方法指定HTTP状态对应的路由</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> WebServerFactoryCustomizer&lt;ConfigurableWebServerFactory&gt; <span class="title function_">webServerFactoryCustomizer</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> factory -&gt; factory.addErrorPages(<span class="keyword">new</span> <span class="title class_">ErrorPage</span>(HttpStatus.NOT_FOUND, <span class="string">&quot;/error/404&quot;</span>), <span class="keyword">new</span> <span class="title class_">ErrorPage</span>(HttpStatus.INTERNAL_SERVER_ERROR, <span class="string">&quot;/error/500&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="统一异常改造"><a href="#统一异常改造" class="headerlink" title="统一异常改造"></a>统一异常改造</h2><p>我们之前已经做过了统一异常处理，但这个处理是非常不科学的，它不论什么样的情况都会返回一个<code>json</code>，这让用户在访问我们的网站时的交互就显得不是那么友好，因为用户访问的只会是前台页面</p><p>我们可以在发生异常时判断一个请求的后缀，因为当时我们在开发项目定义路由时我们所有页面的返回都是以<code>.html</code>结尾的，那我们就可以认为只要是以<code>.html</code>结尾的请求都是页面，这个时候我们就可以返回到错误页面，反之我们返回一个<code>json</code></p><p>这个时候我们又有问题了，我们返回页面和返回<code>json</code>的返回值不同，我们应该怎么处理呢？那我们可以直接让返回值为<code>void</code>，不让<code>springboot</code>帮我们返回，我们自己利用<code>Servlet</code>的接口进行返回就可以了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">defaultException</span><span class="params">(Exception e, HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">  e.printStackTrace();</span><br><span class="line">  log.error(e.getMessage(), e);</span><br><span class="line">  <span class="keyword">if</span> (request.getRequestURI().endsWith(<span class="string">&quot;.html&quot;</span>)) &#123;</span><br><span class="line">    request.getRequestDispatcher(<span class="string">&quot;/error/500.html&quot;</span>).forward(request, response);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    response.getWriter().print(<span class="keyword">new</span> <span class="title class_">ObjectMapper</span>().writeValueAsString(Result.error()));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><p>我们可以看到当我们访问一个不存在的文章时由于错误码是500，此时会被我们配置的错误页面拦截，但按照逻辑来讲这个时候应该是一个文章不存在，在业务上属于404，我们可以自定义一个异常，然后在统一异常里面捕获这个异常，给其重定向到404页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(LWNotFindException.class)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">notFindException</span><span class="params">(LWNotFindException e)</span> &#123;</span><br><span class="line">  e.printStackTrace();</span><br><span class="line">  log.error(e.getMessage(), e);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;forward:/error/404.html&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;我们博客前台的功能现在已经算是做完了，我们这个时候来把异常这里说下，我们之前在写后端时捕获过一次异常，但我们直接返回了一个&lt;code&gt;jso</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="异常处理" scheme="https://study.kevinlu98.cn/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>(二十)评论回复功能及邮件提醒</title>
    <link href="https://study.kevinlu98.cn/2022/10/09/ping-lun-hui-fu-gong-neng-ji-you-jian-ti-xing.html"/>
    <id>https://study.kevinlu98.cn/2022/10/09/ping-lun-hui-fu-gong-neng-ji-you-jian-ti-xing.html</id>
    <published>2022-10-08T17:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>上节课我们完成了最基本的评论功能及展示，这节课我们来说下评论回复功能、收到评论后的给站长及被评论者的邮件通知功能</p><h2 id="回复功能"><a href="#回复功能" class="headerlink" title="回复功能"></a>回复功能</h2><ul><li>给每个评论加上<code>data-id</code>的属性存储评论的<code>id</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;comment:$&#123;commentPage.rows&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@defaultImage.avatar(comment.email)&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comment.nickname&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(comment.created,&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:data-id</span>=<span class="string">&quot;$&#123;comment.id&#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">class</span>=<span class="string">&quot;lw-comment-replay&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-cancel&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span>取消回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comment.content&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=1518228633&amp;s=100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>VOODOO<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>2022-09-28 19:53<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span>&gt;</span></span><br><span class="line">          @xpboy</span><br><span class="line">          <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">          谢谢<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>当我们点击回复按钮时将评论框移到目标评论的下方，然后清空评论框的内容并将评论框的<code>pid</code>改为目标评论的<code>id</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#lw-comment-list&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.lw-comment-replay&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-list .lw-comment-cancel&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-list .lw-comment-replay&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">  <span class="keyword">let</span> id = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> source = $(<span class="string">&#x27;#lw-comment-box&#x27;</span>)</span><br><span class="line">  <span class="comment">// 复制一个评论框</span></span><br><span class="line">  <span class="keyword">let</span> cloneBox = source.<span class="title function_">clone</span>();</span><br><span class="line">  <span class="comment">//删除源评论框</span></span><br><span class="line">  source.<span class="title function_">remove</span>()</span><br><span class="line">  <span class="comment">//将复制的评论框加到目标评论的下方</span></span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">parent</span>().<span class="title function_">append</span>(source)</span><br><span class="line">  <span class="comment">//更改pid</span></span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-form input[name=pid]&#x27;</span>).<span class="title function_">val</span>(id)</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">hide</span>()</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">find</span>(<span class="string">&#x27;.lw-comment-cancel&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>评论完成后将评论框移加原来的位置并将评论框的<code>pid</code>变为<code>0</code>且评论内容清空</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">commBoxReset</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> source = $(<span class="string">&#x27;#lw-comment-box&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> cloneBox = source.<span class="title function_">clone</span>();</span><br><span class="line">  source.<span class="title function_">remove</span>()</span><br><span class="line">  $(<span class="string">&#x27;#lw-article-box&#x27;</span>).<span class="title function_">after</span>(source)</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-form input[name=pid]&#x27;</span>).<span class="title function_">val</span>(<span class="number">0</span>)</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-form textarea&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-list .lw-comment-cancel&#x27;</span>).<span class="title function_">hide</span>()</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-list .lw-comment-replay&#x27;</span>).<span class="title function_">show</span>()</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">&#x27;#lw-comment-list&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.lw-comment-cancel&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="title function_">commBoxReset</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>后端处理评论层级关系</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Mapper</span></span><br><span class="line">Page&lt;Comment&gt; <span class="title function_">findAllByArticleAndPidOrderByCreatedDesc</span><span class="params">(Article article, Integer pid, Pageable pageable)</span>;</span><br><span class="line"></span><br><span class="line">List&lt;Comment&gt; <span class="title function_">findAllByPidOrderByCreatedDesc</span><span class="params">(Integer pid)</span>;</span><br><span class="line"><span class="comment">//Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Comment comment)</span> &#123;</span><br><span class="line">  <span class="comment">//新评论</span></span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(comment.getId())) &#123;</span><br><span class="line">    comment.setCreated(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    comment.setView(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (comment.getPid() != <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="type">Comment</span> <span class="variable">parent</span> <span class="operator">=</span> detail(comment.getPid());</span><br><span class="line">      comment.setContent(<span class="string">&quot;@&quot;</span>+parent.getNickname()+<span class="string">&quot;: &quot;</span>+comment.getContent());</span><br><span class="line">      comment.setPid(findParent(comment.getPid()));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mapper.save(comment);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> Integer <span class="title function_">findParent</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">  <span class="type">Comment</span> <span class="variable">comment</span> <span class="operator">=</span> detail(id);</span><br><span class="line">  <span class="keyword">if</span> (comment.getPid() == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> comment.getId();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> findParent(comment.getPid());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改分页查询评论<code>Service</code>层的代码为其加上子评论列表</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PageHelper.&lt;Comment&gt;builder()</span><br><span class="line">  .rows(page.getContent().stream().peek(x -&gt; x.setChildren(mapper.findAllByPidOrderByCreatedDesc(x.getId()))).collect(Collectors.toList()))</span><br><span class="line">  .current(pageNum)</span><br><span class="line">  .total(page.getTotalElements())</span><br><span class="line">  .totalPage(page.getTotalPages())</span><br><span class="line">  .build();</span><br></pre></td></tr></table></figure><ul><li>页面子评论处理</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;comment:$&#123;commentPage.rows&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@defaultImage.avatar(comment.email)&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comment.nickname&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(comment.created,&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:data-id</span>=<span class="string">&quot;$&#123;comment.id&#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">class</span>=<span class="string">&quot;lw-comment-replay&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-cancel&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span>取消回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comment.content&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;comment.children.size() &gt; 0&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;child:$&#123;comment.children&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@defaultImage.avatar(child.email)&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;child.nickname&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(child.created,&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:data-id</span>=<span class="string">&quot;$&#123;child.id&#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">class</span>=<span class="string">&quot;lw-comment-replay&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-cancel&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span>取消回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;child.content&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="邮件提醒"><a href="#邮件提醒" class="headerlink" title="邮件提醒"></a>邮件提醒</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>我这里以QQ邮箱为例，其它邮箱同理</p><ul><li>我们先准备一个QQ邮箱且<strong>开通时长大于15天</strong></li><li>开启<code>POP3/IMAP/SMTP/</code>服务并生成授权码</li></ul><p><strong>常见SMTP服务器地址</strong></p><table><thead><tr><th>邮箱类型</th><th>SMTP服务器地址</th><th>端口号</th></tr></thead><tbody><tr><td>QQ邮箱</td><td>smtp.qq.com</td><td>465或587</td></tr><tr><td>sina邮箱</td><td>smtp.sina.cn</td><td>465或587</td></tr><tr><td>126邮箱</td><td>smtp.126.com</td><td>465或994</td></tr><tr><td>aliyun邮箱</td><td>smtp.aliyun.com</td><td>465或994</td></tr><tr><td>163邮箱</td><td>smtp.163.com</td><td>465或994</td></tr><tr><td>yeah邮箱</td><td>smtp.yeah.net</td><td>465或994</td></tr></tbody></table><h3 id="SpringBootMail邮件测试"><a href="#SpringBootMail邮件测试" class="headerlink" title="SpringBootMail邮件测试"></a>SpringBootMail邮件测试</h3><ul><li>导入依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- springboot 邮件mail --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置发件人</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="comment">#  默认的邮件编码为UTF-8</span></span><br><span class="line">    <span class="attr">default-encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="comment"># 邮箱服务器</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">    <span class="comment"># 邮箱</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">xxx@qq.com</span></span><br><span class="line">    <span class="comment"># 密码</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxxxx</span></span><br><span class="line">    <span class="comment"># 端口</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">587</span></span><br><span class="line">    <span class="comment"># 其它属性，这里只开启debug输出错误信息</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">debug:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>创建一个邮件工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/14 19:44</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailHelper</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value(&quot;$&#123;spring.mail.username&#125;&quot;)</span></span><br><span class="line">  <span class="keyword">private</span> String from;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">MailHelper</span><span class="params">(JavaMailSender javaMailSender)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.javaMailSender = javaMailSender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送邮件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> send    收件人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subject 主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text    内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMail</span><span class="params">(String send, String subject, String text)</span> &#123;</span><br><span class="line">    <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> javaMailSender.createMimeMessage();</span><br><span class="line">    <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      helper.setSentDate(<span class="keyword">new</span> <span class="title class_">Date</span>()); <span class="comment">//设置发件时间</span></span><br><span class="line">      helper.setFrom(from); <span class="comment">//发件人</span></span><br><span class="line">      helper.setTo(send); <span class="comment">//设置收件人</span></span><br><span class="line">      helper.setSubject(subject); <span class="comment">//设置标签</span></span><br><span class="line">      helper.setText(text, <span class="literal">true</span>); <span class="comment">//设置内容</span></span><br><span class="line">      javaMailSender.send(message); <span class="comment">//发邮件</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (MessagingException e) &#123;</span><br><span class="line">      log.error(e.getMessage(), e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>测试是否发送成功</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.kevinlu98.Application;</span><br><span class="line"><span class="keyword">import</span> cn.kevinlu98.common.MailHelper;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/14 19:49</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = &#123;Application.class&#125;, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailTest</span> &#123;</span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> MailHelper helper;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSend</span><span class="params">()</span>&#123;</span><br><span class="line">    helper.sendMail(<span class="string">&quot;xxx@qq.com&quot;</span>,<span class="string">&quot;测试邮件&quot;</span>,<span class="string">&quot;&lt;h1&gt;冷文学习者&lt;/h1&gt;&lt;p&gt;我是一个测试邮件&lt;/p&gt;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="评论邮件提醒"><a href="#评论邮件提醒" class="headerlink" title="评论邮件提醒"></a>评论邮件提醒</h3><ul><li>在保存新评论时先给站长收一封邮件通知</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Async</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMailToWebsite</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">  <span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> articleMapper.findById(id).orElse(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(article)) <span class="keyword">return</span>;</span><br><span class="line">  <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&lt;p&gt;\n&quot;</span> + <span class="string">&quot;    你的文章 &lt;a href=\&quot;&quot;</span> + webSite.getUrl() + <span class="string">&quot;/&quot;</span> + id + <span class="string">&quot;.html\&quot;&gt;&quot;</span> + article.getTitle() + <span class="string">&quot;&lt;/a&gt;收到了新评论，点些查看\n&quot;</span> + <span class="string">&quot;&lt;/p&gt;\n&quot;</span> + <span class="string">&quot;&lt;p style=\&quot;text-align:right ;\&quot;&gt;\n&quot;</span> + <span class="string">&quot;时间：\n&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>() + <span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">  helper.sendMail(webSite.getMail(), webSite.getTitle() + <span class="string">&quot;收到新评论&quot;</span>, content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>如果父评论不为空，则给被回复者也发一封邮件</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Async</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMailToComment</span><span class="params">(Integer id, Integer cid, String replay)</span> &#123;</span><br><span class="line">  <span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> articleMapper.findById(id).orElse(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(article)) <span class="keyword">return</span>;</span><br><span class="line">  <span class="type">Comment</span> <span class="variable">comment</span> <span class="operator">=</span> mapper.findById(cid).orElse(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(comment)) <span class="keyword">return</span>;</span><br><span class="line">  <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&lt;p&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;    你在&lt;a href=\&quot;&quot;</span> + webSite.getUrl() + <span class="string">&quot;\&quot;&gt;&quot;</span> + webSite.getTitle() +</span><br><span class="line">    <span class="string">&quot;&lt;/a&gt;对 &lt;a href=\&quot;&quot;</span> + webSite.getUrl() + <span class="string">&quot;/&quot;</span> + article.getId() + <span class="string">&quot;.html\&quot;&gt;&quot;</span> + article.getTitle() +</span><br><span class="line">    <span class="string">&quot;&lt;/a&gt;文章的评论收到了新回复，回复内容如下：\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&lt;/p&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&lt;p&gt;\n&quot;</span> +</span><br><span class="line">    replay +</span><br><span class="line">    <span class="string">&quot;&lt;/p&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&lt;p style=\&quot;text-align:right ;\&quot;&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;   一一发件人：&quot;</span> + webSite.getTitle() +</span><br><span class="line">    <span class="string">&quot;&lt;/p&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&lt;p style=\&quot;text-align:right ;\&quot;&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;时间：&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>() +</span><br><span class="line">    <span class="string">&quot;&lt;/p&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;&lt;p style=\&quot;text-align:right ;\&quot;&gt;\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;    此邮件是由&quot;</span> + webSite.getTitle() + <span class="string">&quot;自动发送，请勿回复 \n&quot;</span> +</span><br><span class="line">    <span class="string">&quot; &lt;/p&gt;&quot;</span>;</span><br><span class="line">  helper.sendMail(comment.getEmail(), webSite.getTitle() + <span class="string">&quot;收到新回复&quot;</span>, content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Service save</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Comment comment)</span> &#123;</span><br><span class="line">  <span class="comment">//新评论</span></span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(comment.getId())) &#123;</span><br><span class="line">    sendMailToWebsite(comment.getArticle().getId());</span><br><span class="line">    comment.setCreated(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    comment.setView(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span> (comment.getPid() != <span class="number">0</span>) &#123;</span><br><span class="line">      sendMailToComment(comment.getArticle().getId(), comment.getPid(), comment.getContent());</span><br><span class="line">      <span class="type">Comment</span> <span class="variable">parent</span> <span class="operator">=</span> detail(comment.getPid());</span><br><span class="line">      comment.setContent(<span class="string">&quot;@&quot;</span> + parent.getNickname() + <span class="string">&quot;: &quot;</span> + comment.getContent());</span><br><span class="line">      comment.setPid(findParent(comment.getPid()));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mapper.save(comment);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;上节课我们完成了最基本的评论功能及展示，这节课我们来说下评论回复功能、收到评论后的给站长及被评论者的邮件通知功能&lt;/p&gt;
&lt;h2 id=&quot;回</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="博客系统" scheme="https://study.kevinlu98.cn/tags/%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>(十九)评论功能及评论局部刷展示</title>
    <link href="https://study.kevinlu98.cn/2022/10/09/ping-lun-gong-neng-ji-ping-lun-ju-bu-shua-zhan-shi.html"/>
    <id>https://study.kevinlu98.cn/2022/10/09/ping-lun-gong-neng-ji-ping-lun-ju-bu-shua-zhan-shi.html</id>
    <published>2022-10-08T16:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.219Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>经过前面的学习，我们博客的功能是越来越完善了，这节课我们来说下评论功能的实现</p><p>我们希望我们的评论完成之后页面不进行刷，只刷新评论部分，然后评论的翻页也是如此</p><h2 id="普通评论实现"><a href="#普通评论实现" class="headerlink" title="普通评论实现"></a>普通评论实现</h2><ul><li>定义评论接口<ul><li>路由：<code>/comment</code></li><li>方式：<code>POST</code></li><li>参数：<code>Comment</code>对象</li><li>返回：公共返回对象</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Service    </span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/comment&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Comment comment)</span> &#123;</span><br><span class="line">  <span class="comment">//新评论</span></span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(comment.getId())) &#123;</span><br><span class="line">    comment.setCreated(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    comment.setView(<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  mapper.save(comment);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Controller</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/comment&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">comment</span><span class="params">(Comment comment)</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (StringUtils.equals(comment.getEmail(), webSite.getMail())) &#123;</span><br><span class="line">    <span class="keyword">return</span> Result.error(ResultEnum.RESULT_MAIL_FAIL);</span><br><span class="line">  &#125;</span><br><span class="line">  commentService.save(comment);</span><br><span class="line">  <span class="keyword">return</span> Result.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>完善评论表单的<code>name</code>属性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;lw-comment-form&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;article.id&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;article.id&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-12 lw-p0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;padding-right: 10px;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">required</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的评论...&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-xs-12 lw-comment-input lw-posr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;nickname&quot;</span> <span class="attr">required</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入昵称...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user  lw-comment-input  lw-posa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-xs-12   lw-comment-input lw-posr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">required</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入电子邮件...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-envelope lw-posa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-xs-12  lw-comment-input  lw-posr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入主页地址...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-link fa-link lw-posa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-12 col-xs-12  lw-comment-input  lw-posr&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-submit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>拦截表单提交改为<code>Ajax</code>提交表单</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#lw-comment-form&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> data = $(<span class="variable language_">this</span>).<span class="title function_">serialize</span>();</span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/comment&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: data,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">        layer.<span class="title function_">msg</span>(<span class="string">&#x27;评论成功&#x27;</span>, &#123;<span class="attr">icon</span>: <span class="number">1</span>&#125;)</span><br><span class="line">        <span class="comment">// todo 局部刷新评论列表</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        layer.<span class="title function_">msg</span>(res.<span class="property">message</span>, &#123;<span class="attr">icon</span>: <span class="number">2</span>&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="局部刷新展示"><a href="#局部刷新展示" class="headerlink" title="局部刷新展示"></a>局部刷新展示</h2><p>我们其实可以写个获取评论列表的接口返回一个<code>JSON</code>数据，然后前端把这个<code>JSON</code>拼接到一段<code>HTML</code>代码再展示出来，这过这样太麻烦了，我们可以直接利用<code>Thymeleaf</code>返回一个<code>fragment</code>，然后得用<code>Jquery</code>的<code>load</code>方法将其加载到对应容器中</p><ul><li>在获取文章详情时也获取文章下的第一页评论</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Mapper</span></span><br><span class="line">Page&lt;Comment&gt; <span class="title function_">findAllByArticleOrderByCreatedDesc</span><span class="params">(Article article, Pageable pageable)</span>;</span><br><span class="line"><span class="comment">//Service</span></span><br><span class="line"><span class="keyword">public</span> PageHelper&lt;Comment&gt; <span class="title function_">list</span><span class="params">(Integer id, <span class="type">int</span> pageNum)</span> &#123;</span><br><span class="line">  Page&lt;Comment&gt; page = mapper.findAllByArticleOrderByCreatedDesc(Article.builder().id(id).build(), PageRequest.of(pageNum - <span class="number">1</span>, <span class="number">5</span>));</span><br><span class="line">  <span class="keyword">return</span> PageHelper.&lt;Comment&gt;builder()</span><br><span class="line">    .rows(page.getContent())</span><br><span class="line">    .current(pageNum)</span><br><span class="line">    .total(page.getTotalElements())</span><br><span class="line">    .totalPage(page.getTotalPages())</span><br><span class="line">    .build();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Controller</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">detail</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, Model model, HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">  <span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> articleService.detail(id);</span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(CookieUtil.getCookie(request, Article.VIEW_PREFIX + id))) &#123;</span><br><span class="line">    articleService.viewArticle(id);</span><br><span class="line">    CookieUtil.setCookie(response, Article.VIEW_PREFIX + id, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//todo 当文章不存在时的处理</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;article&quot;</span>, article);</span><br><span class="line">  PageHelper&lt;Comment&gt; commentPage = commentService.list(id, <span class="number">1</span>);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;commentPage&quot;</span>, commentPage);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;detail&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果评论是QQ邮箱，我们直接取QQ头像(<a href="https://q1.qlogo.cn/g?b=qq&nk=1628048198&s=100">https://q1.qlogo.cn/g?b=qq&nk=1628048198&s=100</a>)做为评论者的头像，反之随机头像</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">avatar</span><span class="params">(String mail)</span> &#123;</span><br><span class="line">  <span class="type">Pattern</span> <span class="variable">pattern</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;(\\d&#123;5,10&#125;)@qq.com&quot;</span>);</span><br><span class="line">  <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> pattern.matcher(mail);</span><br><span class="line">  <span class="keyword">if</span> (matcher.find()) &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">qq</span> <span class="operator">=</span> matcher.group(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> String.format(<span class="string">&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=%s&amp;s=100&quot;</span>, qq);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> avatars.get((<span class="type">int</span>) (Math.random() * avatars.size()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将页面的评论列表改为<code>fragment</code>并做渲染</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;lw-comment-list&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:fragment</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-list&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:each</span>=<span class="string">&quot;comment:$&#123;commentPage.rows&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@defaultImage.avatar(comment.email)&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comment.nickname&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">                                                           <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(comment.created,&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                                                                                                                                     <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;comment.content&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=1518228633&amp;s=100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>VOODOO<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>2022-09-28 19:53<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span>&gt;</span></span><br><span class="line">                  @xpboy</span><br><span class="line">                  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                  谢谢<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;commentPage.totalPage&gt;1&#125;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lw-page-list&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-pagenation&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;commentPage.current != 1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;1&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;num:$&#123;#numbers.sequence((commentPage.current &lt; 3?1: commentPage.current -2) ,(commentPage.current &lt; commentPage.totalPage -2?commentPage.current+2: commentPage.totalPage))&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;commentPage.current eq num&#125;?&#x27;lw-active&#x27;:&#x27;&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:data-page</span>=<span class="string">&quot;$&#123;num&#125;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:text</span>=<span class="string">&quot;$&#123;num&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;commentPage.current != commentPage.totalPage&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">th:data-page</span>=<span class="string">&quot;$&#123;commentPage.totalPage&#125;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;共 &#x27;+ commentPage.totalPage +&#x27; 页&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在分页及评论成功时调用<code>load</code>方法请求评论区域的数据并加载到容器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/comment/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">comments</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, <span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pn, Model model)</span> &#123;</span><br><span class="line">  pn = Math.max(<span class="number">1</span>, pn);</span><br><span class="line">  PageHelper&lt;Comment&gt; commentPage = commentService.list(id, pn);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;commentPage&quot;</span>, commentPage);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;detail::comments&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//评论成功</span></span><br><span class="line">$(<span class="string">&#x27;#lw-comment-list&#x27;</span>).<span class="title function_">load</span>(<span class="string">&#x27;/comment/&#x27;</span> + articleId)</span><br><span class="line"><span class="comment">//分页</span></span><br><span class="line">$(<span class="string">&#x27;#lw-comment-list&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;#lw-page-list a&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> page = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;page&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;#lw-comment-list&#x27;</span>).<span class="title function_">load</span>(<span class="string">`/comment/<span class="subst">$&#123;articleId&#125;</span>?pn=<span class="subst">$&#123;page&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;经过前面的学习，我们博客的功能是越来越完善了，这节课我们来说下评论功能的实现&lt;/p&gt;
&lt;p&gt;我们希望我们的评论完成之后页面不进行刷，只刷新评</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="博客系统" scheme="https://study.kevinlu98.cn/tags/%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>(十八)目录处理与文章浏览量的处理</title>
    <link href="https://study.kevinlu98.cn/2022/10/09/mu-lu-chu-li-yu-wen-zhang-liu-lan-liang-de-chu-li.html"/>
    <id>https://study.kevinlu98.cn/2022/10/09/mu-lu-chu-li-yu-wen-zhang-liu-lan-liang-de-chu-li.html</id>
    <published>2022-10-08T16:00:00.000Z</published>
    <updated>2023-01-17T11:51:09.218Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>上节课我们把文章的详情信息已经渲染出来了，而且还为文章生成了目录，这节课我们将这个目录浮动起来，然后为我们的站点加上返回顶部的按钮，再把文章浏览功能做一下</p><h2 id="返回顶部"><a href="#返回顶部" class="headerlink" title="返回顶部"></a>返回顶部</h2><p>这里可以直接参考我之前写的文章：<a href="https://www.kevinlu98.cn/archives/52.html">jQuery实现一个优雅的返回顶部</a></p><ul><li>用一个<code>div</code>做父容器并让其的<code>position</code>为<code>fixed</code>这样就可以固定位置了</li><li>将返回顶部的按钮及QQ联系的按钮放入容器并将到顶部的按钮隐藏</li><li>判断滚动条高度大于屏幕高度一半时展示到顶部的按钮</li><li>给顶部按钮一个滚动到滚动条到顶部的功能</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--common.html--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#lw-right-bottom-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">bottom</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#lw-right-bottom-bar</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin-top</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#lw-right-bottom-bar</span> <span class="selector-id">#lw-to-top</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;lw-right-bottom-bar&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;lw-to-top&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa  fa-arrow-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;T(java.lang.String).format(&#x27;tencent://message/?uin=%s<span class="symbol">&amp;amp;</span>Site=<span class="symbol">&amp;amp;</span>menu=yes&#x27;,@webSite.qq)&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span></span></span><br><span class="line"><span class="tag">                                                                                                                                <span class="attr">class</span>=<span class="string">&quot;fa  fa-qq&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> toTop = $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>()</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> height = $(<span class="variable language_">window</span>).<span class="title function_">height</span>()</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (toTop &gt; height / <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&#x27;#lw-to-top&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">animate</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">opacity</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,<span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&#x27;#lw-to-top&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">animate</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">opacity</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,<span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;#lw-to-top&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&#x27;body,html&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">animate</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">scrollTop</span>:<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文章目录处理"><a href="#文章目录处理" class="headerlink" title="文章目录处理"></a>文章目录处理</h2><h3 id="目录浮动"><a href="#目录浮动" class="headerlink" title="目录浮动"></a>目录浮动</h3><p>和上面思路差不多，只不过这里就稍微有一点逻辑了，我们此时判断的条件是滚动条滚动的高度大于标签云的底部时进行浮动</p><ul><li>先定义一个浮动的样式确定样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#lw-toc-parent</span><span class="selector-class">.lw-toc-fixed</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>判断滚动条高度是否满足条件，如果满足直接给容器加上我们定义的浮动的样式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> toTop = $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>()</span><br><span class="line">  <span class="keyword">let</span> tagCloud = $(<span class="string">&#x27;.lw-right-item.lw-tag-cloud&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> tagBottom = tagCloud.<span class="title function_">offset</span>().<span class="property">top</span> + tagCloud.<span class="title function_">height</span>()</span><br><span class="line">  <span class="keyword">if</span> (toTop &gt; tagBottom - <span class="number">10</span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#lw-toc-parent&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;lw-toc-fixed&#x27;</span>)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;#lw-toc-parent&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;lw-toc-fixed&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="滚动优化"><a href="#滚动优化" class="headerlink" title="滚动优化"></a>滚动优化</h3><p>我们点一下目录直接跳到对应位置难免有些生硬，所以我们可以为其加上过渡动画</p><ul><li>取消目录<code>a</code>标签的<code>href</code>，将对应目录的<code>id</code>保存到<code>data-id</code>的属性中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#lw-article-toc&#x27;</span>).<span class="title function_">append</span>(<span class="string">`&lt;li&gt;&lt;a style=&quot;padding-left: <span class="subst">$&#123;left&#125;</span>px;&quot; href=&quot;javascript:void(0)&quot; data-id=&quot;<span class="subst">$&#123;$(element).attr(<span class="string">&#x27;id&#x27;</span>)&#125;</span>&quot;&gt;<span class="subst">$&#123;$(element).text()&#125;</span>&lt;/a&gt;&lt;/li&gt;`</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>注册<code>a</code>标签的点击事件，当点击时滚动到目录距顶部的高度</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#lw-article-toc&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;li a&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> id = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">  $(<span class="string">&#x27;body,html&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">animate</span>(&#123;</span><br><span class="line">    <span class="attr">scrollTop</span>:$(<span class="string">`#<span class="subst">$&#123;id&#125;</span>`</span>).<span class="title function_">offset</span>().<span class="property">top</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="基于Cookie的文章浏览量统计"><a href="#基于Cookie的文章浏览量统计" class="headerlink" title="基于Cookie的文章浏览量统计"></a>基于Cookie的文章浏览量统计</h2><p>文章的浏览量无非就是当用户查看文章详情时我们给浏览量加1，但此时我们需要处理一下，即一个用户在一段时间内浏览多次文章我们都应该认为是1次，我们确定一个用户的标准可以是一个浏览器这一个用户，借助浏览器的Cookie来保存浏览记录</p><ul><li>我们先写更新浏览量的<code>Mapper</code>层代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Modifying</span></span><br><span class="line"><span class="meta">@Query(value = &quot;update blog_article set views=views+1 where  id=13&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">viewsArticle</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><ul><li>在<code>Service</code>调用Mapper层代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">viewArticle</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">  mapper.viewsArticle(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在文章详情页去调用一下更新浏览量</li><li>我们先看看效果，发现会有我们上面说的问题，一个用户重复的去访问一篇文章，它会不停的刷新浏览量</li><li>我们这个时候来将文章的浏览记录放到<code>Cookie</code>中，当<code>Cookie</code>中有这篇文章的浏览记录时我们就不更新</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">detail</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, Model model, HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">  <span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> articleService.detail(id);</span><br><span class="line">  <span class="keyword">if</span> (Objects.isNull(CookieUtil.getCookie(request, Article.VIEW_PREFIX + id))) &#123;</span><br><span class="line">    articleService.viewArticle(id);</span><br><span class="line">    CookieUtil.setCookie(response, Article.VIEW_PREFIX + id, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//todo 当文章不存在时的处理</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;article&quot;</span>, article);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;detail&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Cookie工具类"><a href="#Cookie工具类" class="headerlink" title="Cookie工具类"></a>Cookie工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CookieUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getCookie</span><span class="params">(HttpServletRequest request, String cookieName)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="keyword">if</span> (cookie.getName().equals(cookieName)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> cookie.getValue();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCookie</span><span class="params">(HttpServletResponse response, String cookieName, String value, <span class="type">int</span> cookieMaxAge)</span> &#123;</span><br><span class="line">        <span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(cookieName, value);</span><br><span class="line">        cookie.setPath(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        cookie.setMaxAge(cookieMaxAge);</span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCookie</span><span class="params">(HttpServletResponse response, String cookieName, String value)</span> &#123;</span><br><span class="line">        setCookie(response, cookieName, value, <span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deleteCookie</span><span class="params">(HttpServletResponse response, String cookieName)</span> &#123;</span><br><span class="line">        setCookie(response, cookieName, <span class="literal">null</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="独立页面的处理"><a href="#独立页面的处理" class="headerlink" title="独立页面的处理"></a>独立页面的处理</h2><p>独立页面我们就不显示浏览量、分类、标签还有文章目录的信息了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">th:if=&quot;$&#123;article.type eq T(cn.kevinlu98.pojo.Article).TYPE_ARTICLE&#125;&quot; </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;上节课我们把文章的详情信息已经渲染出来了，而且还为文章生成了目录，这节课我们将这个目录浮动起来，然后为我们的站点加上返回顶部的按钮，再把文章</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="博客系统" scheme="https://study.kevinlu98.cn/tags/%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>(十七)文章详情页的展示</title>
    <link href="https://study.kevinlu98.cn/2022/10/08/wen-zhang-xiang-qing-ye-de-zhan-shi.html"/>
    <id>https://study.kevinlu98.cn/2022/10/08/wen-zhang-xiang-qing-ye-de-zhan-shi.html</id>
    <published>2022-10-07T17:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.217Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>我们列表展示区域的内容基本已经做完了，我们的站点前台就只差文章页面的部分功能，我们这节课先把文章的渲染展示做一下 </p><h2 id="第三方"><a href="#第三方" class="headerlink" title="第三方"></a>第三方</h2><ul><li>排版：本来页面的排版是想用<a href="https://typo.sofi.sh/">Typo.css</a>来排版的，后来觉得那个排版与我们博客的主体不搭，就自己写了版的css，文章排版其实就是把那些<code>markdown</code>渲染的<code>html</code>代码出现的标签加个样式就行了</li><li>代码高亮：这里用的是<a href="https://prismjs.com/">prism</a>，其实还有很多，只是这个用起来比较简单，导入一下就行了，不需要手动渲染</li><li>markdown解析：我们用的是<a href="https://github.com/commonmark/commonmark-java">commonmark-java</a>这个包，而其它java的<code>markdown</code>解析也基本都用的是它，但它只能支持一些比较简单的<code>markdown</code>语法，稍微复杂一点就不能支持了，但官我给我们很多扩展选项，对我们来说它的基本功能再加上表格的支持就够了</li></ul><h2 id="详情页的展示"><a href="#详情页的展示" class="headerlink" title="详情页的展示"></a>详情页的展示</h2><ul><li>导入依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-gfm-tables<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark-ext-gfm-tables<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>我们创建一个<code>MarkdownUtil</code>的工具类用于解析<code>markdown</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.commonmark.Extension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.ext.gfm.tables.TablesExtension;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Heading;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Link;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Node;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.parser.Parser;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProvider;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProviderContext;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.AttributeProviderFactory;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.HtmlRenderer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/13 14:08</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MarkdownUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;Extension&gt; EXTENSIONS = Collections.singletonList(TablesExtension.create());</span><br><span class="line">    <span class="type">Parser</span> <span class="variable">parser</span> <span class="operator">=</span> Parser.builder()</span><br><span class="line">            .extensions(EXTENSIONS)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="type">HtmlRenderer</span> <span class="variable">renderer</span> <span class="operator">=</span> HtmlRenderer.builder()</span><br><span class="line">            .extensions(EXTENSIONS)</span><br><span class="line">            .attributeProviderFactory(attributeProviderContext -&gt; (node, tagName, attributes) -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (node <span class="keyword">instanceof</span> Link) &#123;</span><br><span class="line">                    attributes.put(<span class="string">&quot;target&quot;</span>, <span class="string">&quot;_blank&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (node <span class="keyword">instanceof</span> Heading) &#123;</span><br><span class="line">                    attributes.put(<span class="string">&quot;id&quot;</span>, UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                    attributes.put(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;lw-title-toc&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将markdown代码解析成html</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> markdown markdown源码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> html代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> String <span class="title function_">parse</span><span class="params">(String markdown)</span> &#123;</span><br><span class="line">        <span class="type">Node</span> <span class="variable">document</span> <span class="operator">=</span> parser.parse(markdown);</span><br><span class="line">        <span class="keyword">return</span> renderer.render(document);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在<code>Article</code>中定义一个<code>showHtml()</code>的方法用于将<code>content</code>转化为<code>html代码</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">showHtml</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> MarkdownUtil.parse(<span class="built_in">this</span>.content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>定义路由并查询文章详情</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">detail</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, Model model)</span> &#123;</span><br><span class="line">  <span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> articleService.detail(id);</span><br><span class="line">  <span class="comment">//todo 当文章不存在时的处理</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;article&quot;</span>, article);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;detail&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>页面展示并引入<code>prism</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span> <span class="attr">th:replace</span>=<span class="string">&quot;common::header(~&#123;::title&#125;,~&#123;::link&#125;,~&#123;&#125;)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123; article.title +&#x27; - &#x27;+@webSite.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/css/detail.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/plugin/prism/prism.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::nav&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-container lw-main lw-posr&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-left-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-list&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb lw-crumb&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/category/&#123;id&#125;.html(id=$&#123;article.category.id&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.category.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>正文<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-title&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">h1</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-clock-o lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(article.created,&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-eye lw-mr5 lw-ml10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.views&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-comment lw-ml10 lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.commentCount&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-folder  lw-ml10 lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/category/&#123;id&#125;.html(id=$&#123;article.category.id&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.category.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-tags  lw-ml10 lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:each</span>=<span class="string">&quot;tag:$&#123;article.tags&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/tag/&#123;id&#125;.html(id=$&#123;tag.id&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;tag.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-content&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lw-article-content&quot;</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;article.showHtml()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-right&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">&quot;1664366825703&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;919&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M512 512m-448 0a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#FB3A83&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">p-id</span>=<span class="string">&quot;920&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M676.5 701c-9 0-16.6-6.3-18.1-15-1.1-6-2.5-11.6-4.2-16.7l-0.1-0.2-0.1-0.2c-9.1-31.5-29.1-59-56.6-78-26.2 13.2-55.6 20.1-85.3 20.1-29.8 0-59.2-7-85.5-20.2-27.6 19-47.7 46.5-56.8 78.1-0.2 0.7-2.1 7.9-4.8 18.5-2 8.1-9.3 13.7-17.8 13.7h-10.7c-4.8 0-9.4-2-12.5-5.6-3.1-3.5-4.6-8.2-4-12.8 8.1-60.2 46.2-113.1 101.7-141.5l5.4-2.8 5.1 3.4c23.5 15.9 51.1 24.3 79.8 24.3 28.7 0 56.2-8.4 79.7-24.2l5.1-3.4 5.4 2.8c55.4 28.4 93.4 81.3 101.5 141.4 0.6 4.6-0.8 9.3-4 12.8s-7.7 5.6-12.5 5.6h-10.7zM512.2 526.3c-74.5 0-135-60-135-133.6S437.7 259 512.2 259s135 60 135 133.6c0 73.7-60.5 133.7-135 133.7z m0-222.4c-49.6 0-89.9 39.8-89.9 88.8s40.3 88.8 89.9 88.8c49.6 0 89.9-39.8 89.9-88.8s-40.3-88.8-89.9-88.8z&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">fill</span>=<span class="string">&quot;#FFFFFF&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;921&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>版权所属: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://kevinlu98.cn/&quot;</span>&gt;</span>冷文学习者<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">&quot;1664366893739&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;1067&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M512 512m-448 0a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#FA5151&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">p-id</span>=<span class="string">&quot;1068&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M610.2 324c22.6 20.5 33.8 49 33.8 85.2 0 26.6-7.5 50.2-22.4 70.7-5.6 6.9-22.2 22.4-49.6 46.5-12.5 10.5-21.8 21.4-27.8 32.6-7.7 12.9-11.5 27.8-11.5 44.7v13.9h-49v-13.9c0-20.1 3.8-37.7 11.5-52.6 7.3-17.3 27.6-40.7 61-70.1 8.1-8.1 14.9-15.3 20.5-21.8 11.7-15.3 17.5-31.2 17.5-47.7 0-24.2-6.6-42.9-19.9-56.2-14.1-14.1-34.1-21.2-59.8-21.2-29.8 0-52.2 9.9-67.1 29.6-12.9 17.3-19.3 40.5-19.3 69.5h-48.4c0-41.9 11.9-75.7 35.7-101.5 25-26.6 58.8-39.9 101.5-39.9 39.7 0.2 70.7 10.9 93.3 32.2z m-75.5 346.4c6.8 6.9 10.3 15.3 10.3 25.4 0 10.5-3.4 19.1-10.3 26-7.7 6.9-16.3 10.3-26 10.3-10.5 0-19.1-3.4-26-10.3-7.3-7.3-10.9-15.9-10.9-26 0-10.5 3.6-18.9 10.9-25.4 6.4-6.8 15.1-10.3 26-10.3 10.4 0 19.1 3.4 26 10.3z&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">fill</span>=<span class="string">&quot;#FFFFFF&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;1069&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>本文链接: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://kevinlu98.cn/archives/101.html&quot;</span>&gt;</span>https://kevinlu98.cn/archives/101.html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">&quot;1664366925081&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;1215&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M800.3 205.1L534.8 116c-16-5.4-33.3-5.3-49.2 0.2l-264.5 92.3c-29.3 10-49 37.5-49.1 68.4l1.7 265.4c0.7 81 31.1 158.9 85.6 218.9 25 27.7 56.9 51.5 97.8 72.7l144 74.6c9 4.7 19.7 4.6 28.7-0.2L672.5 832c40.4-21.6 72.2-45.7 96.9-73.8 53.6-60.6 83-138.9 82.6-219.8l-1.7-265.6c-0.5-30.9-20.5-58.1-50-67.7z&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">fill</span>=<span class="string">&quot;#FFC300&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;1216&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M512 597c-13.9 0-25.2-11.3-25.2-25.2V345.2c0-13.9 11.3-25.2 25.2-25.2 13.9 0 25.2 11.3 25.2 25.2v226.6c0 13.9-11.3 25.2-25.2 25.2z&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">fill</span>=<span class="string">&quot;#FFFFFF&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;1217&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M512 674.1m-29.9 0a29.9 29.9 0 1 0 59.8 0 29.9 29.9 0 1 0-59.8 0Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#FFFFFF&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">p-id</span>=<span class="string">&quot;1218&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>协议授权: <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&quot;</span>&gt;</span>《署名-非商业性使用-相同方式共享 4.0 国际 (CC BY-NC-SA 4.0)》<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-box row lw-m0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>评论(6)<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-12 lw-p0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;padding-right: 10px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的评论...&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-xs-12 lw-comment-input lw-posr&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入昵称...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user  lw-comment-input  lw-posa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-xs-12   lw-comment-input lw-posr&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入电子邮件...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-envelope lw-posa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-xs-12  lw-comment-input  lw-posr&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入主页地址...&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-link fa-link lw-posa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-list&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://kevinlu98.cn/freecdn-1.4/image/avatar/22.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>xpboy<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>2022-06-03 18:32<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span>&gt;</span></span><br><span class="line">              已经解决，问题是后台的的永久链接--重写功能，一定要开启成功，我是开启没有成功，但是可以使用，部分功能受限，如点赞、登录、注册等。我是windows</span><br><span class="line">              iis，添加web.config放到网站根目录就可以了，希望踩坑的朋友注意了。具体的web.config伪静态规则代码，可以联系我免费提供哦</span><br><span class="line">              qq24985536，希望帮助到大家<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=1518228633&amp;s=100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>VOODOO<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>2022-09-28 19:53<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span>&gt;</span></span><br><span class="line">                  @xpboy</span><br><span class="line">                  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                  谢谢<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=68159424&amp;s=100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>anle<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>2022-06-03 18:32<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span>&gt;</span></span><br><span class="line">              您好～我是俺没偷前端的运营，关注了您在分享的技术文章，觉得您的这套模板很棒，我们诚挚邀请您加入俺没偷前端CP主计划。完整福利和详细介绍请见：https://anlenotes.com/cp</span><br><span class="line">              我们会给作者提供包括流量、创作分成等， 我们诚挚的邀请您并期待您的加入~<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=602314742&amp;s=100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>王伟忘记使自己快乐<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>2022-06-03 18:32<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span>&gt;</span></span><br><span class="line">              你好，请问一下，搭建的网页，在本地访问一点问题都没有，通过互联网域名访问，打开很慢，而且显示不正常，电脑手机都是一样的，是什么问题呢<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lw-posr&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-avatar lw-posa&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://q1.qlogo.cn/g?b=qq&amp;nk=545431&amp;s=100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>小布丁<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>2022-06-03 18:32<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>回复<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-comment-info&quot;</span>&gt;</span></span><br><span class="line">              为什么启用这个主题 后，评论用不了了，报错。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;lw-pagenation&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-right-list lw-md-show lw-posa&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/static/plugin/prism/prism.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>文章目录处理<ul><li>给<code>h</code>标签加上id</li><li>取到所有的<code>h</code>标签</li><li>生成<code>a</code>标签，<code>href</code>是<code>#hid</code></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> offset = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> hTag = $(<span class="string">&#x27;#lw-article-content .lw-title-toc&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> hMax = <span class="number">6</span>;</span><br><span class="line">  hTag.<span class="title function_">each</span>(<span class="function">(<span class="params">i, ele</span>) =&gt;</span> &#123;</span><br><span class="line">    hMax = <span class="title class_">Math</span>.<span class="title function_">min</span>(ele.<span class="property">tagName</span>.<span class="title function_">charAt</span>(<span class="number">1</span>), hMax)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; offset.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    offset[i] -= (hMax - <span class="number">1</span>) * <span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line">  hTag.<span class="title function_">each</span>(<span class="function">(<span class="params">index, element</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> level = element.<span class="property">tagName</span>.<span class="title function_">charAt</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">let</span> left = offset[level - <span class="number">1</span>]</span><br><span class="line">    $(<span class="string">&#x27;#lw-article-toc&#x27;</span>).<span class="title function_">append</span>(<span class="string">`&lt;li&gt;&lt;a style=&quot;padding-left: <span class="subst">$&#123;left&#125;</span>px;&quot; href=&quot;#<span class="subst">$&#123;$(element).attr(<span class="string">&#x27;id&#x27;</span>)&#125;</span>&quot;&gt;<span class="subst">$&#123;$(element).text()&#125;</span>&lt;/a&gt;&lt;/li&gt;`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;我们列表展示区域的内容基本已经做完了，我们的站点前台就只差文章页面的部分功能，我们这节课先把文章的渲染展示做一下 &lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="博客系统" scheme="https://study.kevinlu98.cn/tags/%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>(十六)入口页的展示</title>
    <link href="https://study.kevinlu98.cn/2022/10/07/ru-kou-ye-de-zhan-shi.html"/>
    <id>https://study.kevinlu98.cn/2022/10/07/ru-kou-ye-de-zhan-shi.html</id>
    <published>2022-10-06T21:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.216Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>我们上节课处理了列表页，但我们还没有真正的入口页面到列表页面的跳转，比如分类列表、标签列表及搜索的入口，这节课我们就重点处理一下这里</p><h2 id="处理描述信息中的非中英文字符"><a href="#处理描述信息中的非中英文字符" class="headerlink" title="处理描述信息中的非中英文字符"></a>处理描述信息中的非中英文字符</h2><p>我们可以看到我们的列表页描述信息其实展示我是我们<code>markdown</code>的源代码，里面有大量的符号，而这些符号与我们的主要内容基本无关，所以我们可以把这些符号删除之后再展示摘要部分的内容</p><p>匹配中文的正则：<code>\u4E00-\u9FA5</code></p><p>匹配英文的正则：<code>a-zA-Z</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">summary</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">String</span> <span class="variable">summary</span> <span class="operator">=</span> <span class="built_in">this</span>.content.replaceAll(<span class="string">&quot;[^\\u4E00-\\u9FA5a-zA-Z]&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> summary.substring(<span class="number">0</span>, Math.min(<span class="number">300</span>, summary.length()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分类列表"><a href="#分类列表" class="headerlink" title="分类列表"></a>分类列表</h2><ul><li>模板：<code>categroy.html</code></li><li>路由：<code>/category.html</code></li><li>观察页面可以看到我们的分类列表需要如下信息<ul><li>分类名称（已有）</li><li>分类描述（已有）</li><li>分类下的文章数：可以查下count</li><li>分类下文章的最后一次更新时间：可以查询文章列表后用updated进行排序</li></ul></li><li>代码实现</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//articleMapper</span></span><br><span class="line">Long <span class="title function_">countByCategory</span><span class="params">(Category category)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Query(value = &quot;select updated from blog_article where category_id=?1 order by updated desc limit 1&quot;, nativeQuery = true)</span></span><br><span class="line">Date <span class="title function_">lastUpdated</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// categoryService</span></span><br><span class="line"><span class="meta">@Cacheable</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Category&gt; <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mapper.findAll().stream().peek(category -&gt; &#123;</span><br><span class="line">    category.setArticleCount(articleMapper.countByCategory(category));</span><br><span class="line">    category.setLastUpdated(articleMapper.lastUpdated(category.getId()));</span><br><span class="line">  &#125;).collect(Collectors.toList());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//IndexController</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/category.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">category</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;categories&quot;</span>,categoryService.show());</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;category&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span> <span class="attr">th:replace</span>=<span class="string">&quot;common::header(~&#123;::title&#125;,~&#123;&#125;,~&#123;&#125;)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;分类大全 - &#x27;+@webSite.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::nav&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-container lw-main lw-posr&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-left-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb lw-crumb&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>分类大全<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;lw-category-list&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;category:$&#123;categories&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/category/&#123;id&#125;.html(id=$&#123;category.id&#125;)&#125;&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-folder lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;category.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>(Total <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;category.articleCount&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span> Articles)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;category.summary&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-category-update&quot;</span>&gt;</span>最后更新: <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;category.articleCount eq 0&#125;?&#x27;1970-01-01&#x27;:$&#123;#dates.format(category.lastUpdated,&#x27;yyyy-MM-dd&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-right-list lw-md-show lw-posa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="标签列表"><a href="#标签列表" class="headerlink" title="标签列表"></a>标签列表</h2><ul><li>模板：<code>tags.html</code></li><li>路由：<code>/tag.html</code></li><li>观察页面可以看到我们的分类列表需要如下信息<ul><li>标签名称（已有）</li><li>标签下的文章数：可以查下count</li></ul></li><li>代码实现</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tagMapper</span></span><br><span class="line"><span class="meta">@Query(value = &quot;select count(1) from blog_article_tags where tags_id = ?1&quot;, nativeQuery = true)</span></span><br><span class="line">Long <span class="title function_">articleCountByTid</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//tagService</span></span><br><span class="line"><span class="meta">@Cacheable</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mapper.findAll().stream().peek(tag -&gt; tag.setArticleCount(mapper.articleCountByTid(tag.getId()))).filter(tag -&gt; tag.getArticleCount()&gt;<span class="number">0</span>).collect(Collectors.toList());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//IndexController</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/tag.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">tag</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;tagList&quot;</span>, tagService.show());</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;tags&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span> <span class="attr">th:replace</span>=<span class="string">&quot;common::header(~&#123;::title&#125;,~&#123;&#125;,~&#123;&#125;)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;分类大全 - &#x27;+@webSite.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::nav&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-container lw-main lw-posr&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-left-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb lw-crumb&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>标签云<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-tag-list&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:each</span>=<span class="string">&quot;tag:$&#123;tagList&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/tag/&#123;id&#125;.html(id=$&#123;tag.id&#125;)&#125;&quot;</span> <span class="attr">th:title</span>=<span class="string">&quot;$&#123;tag.name&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;tag.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;tag.articleCount&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-right-list lw-md-show lw-posa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:include</span>=<span class="string">&quot;common::footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="搜索的入口"><a href="#搜索的入口" class="headerlink" title="搜索的入口"></a>搜索的入口</h2><p>我们需要展示推荐关键字，这里我想的是用一个LRU做缓存展示20个最近使用的关键字，如果最近使用的关键字少于20个时我们用标签做补充</p><p>LRU：LRU中<code>Least Recently Used </code>的缩写，这种算法认为最近使用过的数据是一个热门数据，下一次还有很大概率再次被使用，而最近很少被使用的数据，很大概率下次不会再使用了，当容器已经满了的时候把最近很少被使用的数据直接删除，这种算法最初是用于操作系统中的页面置换，现在也大多被使用于缓存过期策略</p><p>我们也认为最近被用户所搜索的关键字就是热门关键字，直接展示为推荐关键字</p><p>我们这里用<code>LinkedHashSet</code>做一个简单的LRU缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.common;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/12 18:06</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LRUCache</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;String&gt; cache = <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> limit;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">LRUCache</span><span class="params">(<span class="type">int</span> limit)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.limit = limit;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> cache.size();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> List&lt;String&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(cache);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String keyword)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (cache.size() &gt;= limit) &#123;</span><br><span class="line">      cache.remove(cache.stream().findFirst().orElse(<span class="literal">null</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    cache.remove(keyword);</span><br><span class="line">    cache.add(keyword);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Controller的变动 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indexModel</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  <span class="comment">// todo 可以在这里定义这个controller公用的model的属性</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;friendlies&quot;</span>, friendlyService.list());</span><br><span class="line">  model.addAttribute(<span class="string">&quot;tags&quot;</span>, tagService.list(<span class="number">30</span>));</span><br><span class="line">  model.addAttribute(<span class="string">&quot;navigations&quot;</span>, navigationService.show());</span><br><span class="line">  model.addAttribute(<span class="string">&quot;hots&quot;</span>, articleService.hotList(<span class="number">5</span>));</span><br><span class="line">  <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> lruCache.size();</span><br><span class="line">  List&lt;String&gt; keywords = lruCache.list();</span><br><span class="line">  Collections.reverse(keywords);</span><br><span class="line">  <span class="keyword">if</span> (size &lt; <span class="number">10</span>) &#123;</span><br><span class="line">    keywords.addAll(tagService.list(<span class="number">10</span> - size).stream().map(Tag::getName).collect(Collectors.toList()));</span><br><span class="line">  &#125;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;keywords&quot;</span>, keywords);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/search.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">search</span><span class="params">(<span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pn, String keyword, Model model)</span> &#123;</span><br><span class="line">  lruCache.add(keyword);</span><br><span class="line">  <span class="comment">//todo 如果这个分类不存在的时候我们要处理一下</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;keyword&quot;</span>, keyword);</span><br><span class="line">  <span class="type">ArticleSearch</span> <span class="variable">articleSearch</span> <span class="operator">=</span> ArticleSearch.indexShow(pn, <span class="number">8</span>);</span><br><span class="line">  articleSearch.setKeyword(keyword);</span><br><span class="line">  PageHelper&lt;Article&gt; articlePage = articleService.search(articleSearch);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;articlePage&quot;</span>, articlePage);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;pageType&quot;</span>, <span class="string">&quot;search&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-search-input lw-posr&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/search.html&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">required</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keyword&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索关键字...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;lw-posa&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-search lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>推荐关键字：</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;lw-mr5&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;keyword:$&#123;keywords&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/search.html(keyword=$&#123;keyword&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;keyword&#125;&quot;</span> <span class="attr">th:title</span>=<span class="string">&quot;$&#123;keyword&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;我们上节课处理了列表页，但我们还没有真正的入口页面到列表页面的跳转，比如分类列表、标签列表及搜索的入口，这节课我们就重点处理一下这里&lt;/p&gt;</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="博客系统" scheme="https://study.kevinlu98.cn/tags/%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>(十五)文章列表页的展示</title>
    <link href="https://study.kevinlu98.cn/2022/10/07/wen-zhang-lie-biao-ye-de-zhan-shi.html"/>
    <id>https://study.kevinlu98.cn/2022/10/07/wen-zhang-lie-biao-ye-de-zhan-shi.html</id>
    <published>2022-10-06T20:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.216Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>首页我们前面几节课已经全部做完成了，而我们某个标签、分类、关键字下的文章我们都是会放到列表页统一展示，这节课我们就把列表页也处理一下，我们列表页的模板用<code>list.html</code>就可以了</p><h2 id="分页展示进阶"><a href="#分页展示进阶" class="headerlink" title="分页展示进阶"></a>分页展示进阶</h2><p>数据量大导致分页太多的情况下我们如何处理分页</p><ul><li>可以只显示当前页最近的几页数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.totalPage&gt;1&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-pagenation&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != 1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;num:$&#123;#numbers.sequence((articlePage.current &lt; 3?1: articlePage.current -2) ,(articlePage.current &lt; articlePage.totalPage -2?articlePage.current+2: articlePage.totalPage))&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;articlePage.current eq num&#125;?&#x27;lw-active&#x27;:&#x27;&#x27;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/(pn=$&#123;num&#125;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">th:text</span>=<span class="string">&quot;$&#123;num&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != articlePage.totalPage&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/(pn=$&#123;articlePage.totalPage&#125;)&#125;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;共 &#x27;+ articlePage.totalPage +&#x27; 页&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>加上页码框</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上一页 1 / 9 下一页 跳转[]</span><br></pre></td></tr></table></figure><h2 id="步骤分析"><a href="#步骤分析" class="headerlink" title="步骤分析"></a>步骤分析</h2><ul><li><p>定义路由，我们希望的路由格式如下</p><ul><li>分类路由：<code>/category/&#123;分类ID&#125;.html</code></li><li>标签路由：<code>/tag/&#123;标签ID&#125;.html</code></li><li>搜索路由：<code>/search.html?keywords=&#123;关键定&#125;</code></li></ul></li><li><p>面包屑的构建</p><ul><li>分类面包屑：首页 &#x2F; 分类大全 &#x2F; 分类名称</li><li>标签面包屑：首页 &#x2F; 标签 &#x2F; 标签名称</li><li>搜索面包屑：首页 &#x2F; 包含关键字 XX 的文章</li></ul></li><li><p>标题的构建：XX - 站点名称</p></li><li><p>调用search接口进行查询</p></li><li><p>分页渲染</p></li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="文章列表的抽取"><a href="#文章列表的抽取" class="headerlink" title="文章列表的抽取"></a>文章列表的抽取</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:fragment</span>=<span class="string">&quot;article(articleList)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">article</span> <span class="attr">th:each</span>=<span class="string">&quot;article:$&#123;articleList&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-item lw-posr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-cover lw-posa lw-xs-hidden&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@defaultImage.cover(article.cover)&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-info&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;lw-xs-hidden&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;lw-category&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.category.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/&#123;id&#125;.html(id=$&#123;article.id&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-desc&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.summary()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-text-hidden lw-article-more&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-clock-o lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(article.created,&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-eye lw-mr5 lw-ml10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.views&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-comment lw-ml10 lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.commentCount&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-tag lw-ml10 lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:each</span>=<span class="string">&quot;tag:$&#123;article.tags&#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-mr5&quot;</span> <span class="attr">th:title</span>=<span class="string">&quot;$&#123;tag.name&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;tag.name +&#x27;,&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分类列表"><a href="#分类列表" class="headerlink" title="分类列表"></a>分类列表</h3><ul><li>定义对应的路由</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/category/&#123;id&#125;.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">categoryList</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, <span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pn, Model model)</span> &#123;</span><br><span class="line">  <span class="type">Category</span> <span class="variable">category</span> <span class="operator">=</span> categoryService.detail(id);</span><br><span class="line">  <span class="comment">//todo 如果这个分类不存在的时候我们要处理一下</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;category&quot;</span>, category);</span><br><span class="line">  <span class="type">ArticleSearch</span> <span class="variable">articleSearch</span> <span class="operator">=</span> ArticleSearch.indexShow(pn, <span class="number">1</span>);</span><br><span class="line">  articleSearch.setCid(id);</span><br><span class="line">  PageHelper&lt;Article&gt; articlePage = articleService.search(articleSearch);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;articlePage&quot;</span>, articlePage);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>分类已经在search接口中支持过了，所以我们直接调用即可</p></li><li><p>分页渲染</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.totalPage&gt;1 and pageType eq &#x27;category&#x27;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-pagenation&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != 1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/category/&#123;id&#125;.html(id=$&#123;category.id&#125;)&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;num:$&#123;#numbers.sequence((articlePage.current &lt; 3?1: articlePage.current -2) ,(articlePage.current &lt; articlePage.totalPage -2?articlePage.current+2: articlePage.totalPage))&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;articlePage.current eq num&#125;?&#x27;lw-active&#x27;:&#x27;&#x27;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/category/&#123;id&#125;.html(id=$&#123;category.id&#125;,pn=$&#123;num&#125;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">th:text</span>=<span class="string">&quot;$&#123;num&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != articlePage.totalPage&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/category/&#123;id&#125;.html(id=$&#123;category.id&#125;,pn=$&#123;articlePage.totalPage&#125;)&#125;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;共 &#x27;+ articlePage.totalPage +&#x27; 页&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标签列表"><a href="#标签列表" class="headerlink" title="标签列表"></a>标签列表</h3><ul><li>定义对应的路由</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/tag/&#123;id&#125;.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">tagList</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, <span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pn, Model model)</span> &#123;</span><br><span class="line">  <span class="type">Tag</span> <span class="variable">tag</span> <span class="operator">=</span> tagService.detail(id);</span><br><span class="line">  <span class="comment">//todo 如果这个分类不存在的时候我们要处理一下</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;tag&quot;</span>, tag);</span><br><span class="line">  <span class="type">ArticleSearch</span> <span class="variable">articleSearch</span> <span class="operator">=</span> ArticleSearch.indexShow(pn, );</span><br><span class="line">  articleSearch.setTid(id);</span><br><span class="line">  PageHelper&lt;Article&gt; articlePage = articleService.search(articleSearch);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;articlePage&quot;</span>, articlePage);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;pageType&quot;</span>, <span class="string">&quot;tag&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>利用JPA的<code>join</code>操作查询标签列表下的所有</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Objects.nonNull(search.getTid())) &#123;</span><br><span class="line">  ListJoin&lt;Article, Tag&gt; join = root.join(root.getModel().getList(<span class="string">&quot;tags&quot;</span>, Tag.class), JoinType.LEFT);</span><br><span class="line">  predicateList.add(builder.equal(join.get(<span class="string">&quot;id&quot;</span>), search.getTid()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>分页渲染</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.totalPage&gt;1 and pageType eq &#x27;tag&#x27;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-pagenation&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != 1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/tag/&#123;id&#125;.html(id=$&#123;tag.id&#125;)&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;num:$&#123;#numbers.sequence((articlePage.current &lt; 3?1: articlePage.current -2) ,(articlePage.current &lt; articlePage.totalPage -2?articlePage.current+2: articlePage.totalPage))&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;articlePage.current eq num&#125;?&#x27;lw-active&#x27;:&#x27;&#x27;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/tag/&#123;id&#125;.html(id=$&#123;tag.id&#125;,pn=$&#123;num&#125;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">th:text</span>=<span class="string">&quot;$&#123;num&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != articlePage.totalPage&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/tag/&#123;id&#125;.html(id=$&#123;tag.id&#125;,pn=$&#123;articlePage.totalPage&#125;)&#125;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;共 &#x27;+ articlePage.totalPage +&#x27; 页&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="搜索列表"><a href="#搜索列表" class="headerlink" title="搜索列表"></a>搜索列表</h3><ul><li>定义对应的路由</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/search.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">tagList</span><span class="params">(<span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pn, String keyword, Model model)</span> &#123;</span><br><span class="line">  <span class="comment">//todo 如果这个分类不存在的时候我们要处理一下</span></span><br><span class="line">  model.addAttribute(<span class="string">&quot;keyword&quot;</span>, keyword);</span><br><span class="line">  <span class="type">ArticleSearch</span> <span class="variable">articleSearch</span> <span class="operator">=</span> ArticleSearch.indexShow(pn, <span class="number">8</span>);</span><br><span class="line">  articleSearch.setKeyword(keyword);</span><br><span class="line">  PageHelper&lt;Article&gt; articlePage = articleService.search(articleSearch);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;articlePage&quot;</span>, articlePage);</span><br><span class="line">  model.addAttribute(<span class="string">&quot;pageType&quot;</span>, <span class="string">&quot;search&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在搜索接口中加入模糊匹配</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Page&lt;Article&gt; articlePage = mapper.findAll((Specification&lt;Article&gt;) (root, query, builder) -&gt; &#123;</span><br><span class="line">  List&lt;Predicate&gt; predicateAnd = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="keyword">if</span> (Objects.nonNull(search.getCid())) &#123;</span><br><span class="line">    predicateAnd.add(builder.equal(root.get(<span class="string">&quot;category&quot;</span>), Category.builder().id(search.getCid()).build()));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (Objects.nonNull(search.getStatus())) &#123;</span><br><span class="line">    predicateAnd.add(builder.equal(root.get(<span class="string">&quot;status&quot;</span>), search.getStatus()));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (Objects.nonNull(search.getType())) &#123;</span><br><span class="line">    predicateAnd.add(builder.equal(root.get(<span class="string">&quot;type&quot;</span>), search.getType()));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!StringUtils.isEmptyOrWhitespace(search.getTitle())) &#123;</span><br><span class="line">    predicateAnd.add(builder.like(root.get(<span class="string">&quot;title&quot;</span>), <span class="string">&quot;%&quot;</span> + search.getTitle() + <span class="string">&quot;%&quot;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (Objects.nonNull(search.getTid())) &#123;</span><br><span class="line">    ListJoin&lt;Article, Tag&gt; join = root.join(root.getModel().getList(<span class="string">&quot;tags&quot;</span>, Tag.class), JoinType.LEFT);</span><br><span class="line">    predicateAnd.add(builder.equal(join.get(<span class="string">&quot;id&quot;</span>), search.getTid()));</span><br><span class="line">  &#125;</span><br><span class="line">  List&lt;Predicate&gt; predicateOr = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="keyword">if</span> (!StringUtils.isEmptyOrWhitespace(search.getKeyword())) &#123;</span><br><span class="line">    <span class="comment">// todo 如果可以话后面给大家 出一期进阶课，把这里的搜索换顾EleasticSearch</span></span><br><span class="line">    predicateOr.add(builder.like(root.get(<span class="string">&quot;title&quot;</span>), <span class="string">&quot;%&quot;</span> + search.getKeyword() + <span class="string">&quot;%&quot;</span>));</span><br><span class="line">    predicateOr.add(builder.like(root.get(<span class="string">&quot;content&quot;</span>), <span class="string">&quot;%&quot;</span> + search.getKeyword() + <span class="string">&quot;%&quot;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (CollectionUtils.isEmpty(predicateOr)) &#123;</span><br><span class="line">    <span class="keyword">return</span> builder.and(predicateAnd.toArray(<span class="keyword">new</span> <span class="title class_">Predicate</span>[predicateAnd.size()]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> query.where(builder.and(predicateAnd.toArray(<span class="keyword">new</span> <span class="title class_">Predicate</span>[predicateAnd.size()])), builder.or(predicateOr.toArray(<span class="keyword">new</span> <span class="title class_">Predicate</span>[predicateOr.size()]))).getRestriction();</span><br><span class="line">&#125;, pageable);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>分页渲染</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.totalPage&gt;1 and pageType eq &#x27;search&#x27;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-pagenation&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != 1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/search.html(keyword=$&#123;keyword&#125;)&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;num:$&#123;#numbers.sequence((articlePage.current &lt; 3?1: articlePage.current -2) ,(articlePage.current &lt; articlePage.totalPage -2?articlePage.current+2: articlePage.totalPage))&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;articlePage.current eq num&#125;?&#x27;lw-active&#x27;:&#x27;&#x27;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;search.html(keyword=$&#123;keyword&#125;,pn=$&#123;num&#125;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">th:text</span>=<span class="string">&quot;$&#123;num&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != articlePage.totalPage&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;search.html(keyword=$&#123;keyword&#125;,pn=$&#123;articlePage.totalPage&#125;)&#125;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;共 &#x27;+ articlePage.totalPage +&#x27; 页&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;首页我们前面几节课已经全部做完成了，而我们某个标签、分类、关键字下的文章我们都是会放到列表页统一展示，这节课我们就把列表页也处理一下，我们列</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="博客系统" scheme="https://study.kevinlu98.cn/tags/%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>(十四)缓存处理及首页文章的列表展示</title>
    <link href="https://study.kevinlu98.cn/2022/10/07/huan-cun-chu-li-ji-shou-ye-wen-zhang-de-lie-biao-zhan-shi.html"/>
    <id>https://study.kevinlu98.cn/2022/10/07/huan-cun-chu-li-ji-shou-ye-wen-zhang-de-lie-biao-zhan-shi.html</id>
    <published>2022-10-06T19:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>上节课我们已经将前台页面公共部分替换成了动态的，但这个时候就有问题了，因为我们每次访问其它页面的时候都会去查多次数据库，这样会加大数据库的压力，也会拖慢我们网站的速度，因为我们知道一个程序的性能瓶颈大部分情况下是由IO性能决定的，而内存的性能比磁盘快了不知多少倍，所以我们这节课会为我们的项目加上一个缓存</p><h2 id="缓存处理"><a href="#缓存处理" class="headerlink" title="缓存处理"></a>缓存处理</h2><p>我们项目使用的缓存是<code>ehcache</code>这个缓存中间件，可以看下百度词条对其的描述<a href="https://baike.baidu.com/item/ehcache/6036099?fr=aladdin">https://baike.baidu.com/item/ehcache/6036099?fr=aladdin</a></p><p>我们可以利用<code>springboot-cache</code>帮我们集成<code>ehcache</code>，这样我们只用简单的做几个配置就可以了</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>引入<code>springboot-cache</code>的依赖及<code>ehcache</code>的依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>application.yml</code>中配置<code>springboot-cache</code>让其使用<code>ehcache</code>，并指定<code>ehcache</code>的配置文件路径</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ehcache</span></span><br><span class="line">  <span class="attr">ehcache:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:/ehcache-spring.xml</span></span><br></pre></td></tr></table></figure><ul><li>创建<code>ehcache</code>的配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;http://ehcache.org/ehcache.xsd&quot;</span> <span class="attr">updateCheck</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 磁盘缓存位置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;./cache&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- maxElementsInMemory： 在内存中缓存的element的最大数目。--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- eternal:elements是否永久有效，如果为true，timeouts将被忽略，element将永不过期 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- timeToIdleSeconds:发呆秒数，发呆期间未访问缓存立即过期，当eternal为false时，这个属性才有效，0为不限制 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- timeToLiveSeconds:总存活秒数，当eternal为false时，这个属性才有效，0为不限制 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- overflowToDisk： 如果内存中数据超过内存限制，是否要缓存到磁盘上 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- statistics：是否收集统计信息。如果需要监控缓存使用情况，应该打开这个选项。默认为关闭（统计会影响性能）。设置statistics=&quot;true&quot;开启统计 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        默认缓存</span></span><br><span class="line"><span class="comment">        无过期时间，但 3600 秒内无人访问缓存立即过期</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">&quot;blog-cache&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;3600&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">overflowToDisk</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义缓存Key的生成策略"><a href="#自定义缓存Key的生成策略" class="headerlink" title="自定义缓存Key的生成策略"></a>自定义缓存Key的生成策略</h3><p><code>spring cache</code>缓存的<code>key</code>默认是通过<code>KeyGenerator</code>生成的，其默认生成策略如下</p><ul><li>如果方法没有参数，则使用0作为<code>key</code></li><li>如果只有一个参数的话则使用该参数作为<code>key</code></li><li>如果参数多于一个的话则使用所有参数的<code>hashCode</code>作为<code>key</code></li></ul><p>可以看出默认的key生成策略中并没有涉及方法名称和类，这就意味着如果我们有两个参数列表相同的方法，我们用相同的参数分别调用两个方法，当调用第二个方法的时候，spring cache将会返回缓存中的第一个方法的缓存值，因为他们的key是一样的</p><ul><li><p>我们可以去自定一个<code>CacheConfig</code>的类用作缓存的配置，继承一下<code>CachingConfigurerSupport</code>类，覆写它的<code>keyGenerator</code>方法</p></li><li><p>然后我们去定义一个<code>BlogCacheKey</code>的内部类，把调用缓存的类名、方法名、参数列表传过来，在这个类里覆写一下它的<code>equals</code>方法，综合考虑上述参数完成key的定义</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CachingConfigurerSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/11 16:37</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheConfig</span> <span class="keyword">extends</span> <span class="title class_">CachingConfigurerSupport</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> KeyGenerator <span class="title function_">keyGenerator</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (target, method, params) -&gt; <span class="keyword">new</span> <span class="title class_">BlogCacheKey</span>(target.getClass().getName(),method.getName(),params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BlogCacheKey</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String className;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String methodName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object[] params;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> hashCode;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">BlogCacheKey</span><span class="params">(String className, String methodName, Object[] params)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.className = className;</span><br><span class="line">            <span class="built_in">this</span>.methodName = methodName;</span><br><span class="line">            <span class="built_in">this</span>.params = params;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sign</span> <span class="operator">=</span> className + <span class="string">&quot;_&quot;</span> + methodName + <span class="string">&quot;_&quot;</span> + Arrays.deepHashCode(params);</span><br><span class="line">            <span class="built_in">this</span>.hashCode = sign.hashCode();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.hashCode;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj == <span class="built_in">this</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (!(obj <span class="keyword">instanceof</span> BlogCacheKey)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">BlogCacheKey</span> <span class="variable">other</span> <span class="operator">=</span> (BlogCacheKey) obj;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.hashCode == other.hashCode) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> StringUtils.equals(<span class="built_in">this</span>.className, other.className)</span><br><span class="line">                    &amp;&amp; StringUtils.equals(<span class="built_in">this</span>.methodName, other.methodName)</span><br><span class="line">                    &amp;&amp; Arrays.deepEquals(<span class="built_in">this</span>.params, other.params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="启用缓存"><a href="#启用缓存" class="headerlink" title="启用缓存"></a>启用缓存</h3><ul><li><p>在启动类上加上<code>EnableCaching</code>的注解开启缓存</p></li><li><p>给我们要缓存的对象对应类实现下<code>Serializable</code>接口</p></li><li><p>我们在查询友情链接及导航栏还有轮播图这里先加上缓存注解<code>CacheConfig</code>，然后在需要加缓存的方法上加上<code>Cacheabel</code></p></li><li><p>在更新及删除操作时清空缓存<code>CacheEvict</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.kevinlu98.mapper.FriendlyMapper;</span><br><span class="line"><span class="keyword">import</span> cn.kevinlu98.pojo.Friendly;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CacheConfig;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CacheEvict;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.Cacheable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/6 22:20</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@CacheConfig(cacheNames = &#123;&quot;blog-cache&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FriendlyService</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> FriendlyMapper mapper;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">FriendlyService</span><span class="params">(FriendlyMapper mapper)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.mapper = mapper;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有的友情链接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 友情链接列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="meta">@Cacheable</span></span><br><span class="line">  <span class="keyword">public</span> List&lt;Friendly&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mapper.findAll();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@CacheEvict(allEntries = true)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Friendly friendly)</span> &#123;</span><br><span class="line">    mapper.save(friendly);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id从数据库表中删除数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 主键</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="meta">@CacheEvict(allEntries = true)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">    mapper.deleteById(id);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="首页文章列表的展示"><a href="#首页文章列表的展示" class="headerlink" title="首页文章列表的展示"></a>首页文章列表的展示</h2><ul><li><p>给<code>index</code>方法加上<code>pn</code>的参数用于标识是分页</p></li><li><p>我们可以直接调用之前我们写的<code>search</code>方法来进行搜索</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(<span class="meta">@RequestParam(required = false, defaultValue = &quot;1&quot;)</span> Integer pn, Model model)</span> &#123;</span><br><span class="line">  pn = pn &lt; <span class="number">1</span> ? <span class="number">1</span> : pn;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;articlePage&quot;</span>, articleService.search(ArticleSearch.builder().pageSize(<span class="number">2</span>).pageNum(pn).status(Article.STATUS_PUBLISH).type(Article.TYPE_ARTICLE).build()));</span><br><span class="line">  model.addAttribute(<span class="string">&quot;banners&quot;</span>, bannerService.list());</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>补充评论数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// commentMapper</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">countByArticle</span><span class="params">(Article article)</span>;</span><br><span class="line"><span class="comment">//search</span></span><br><span class="line"><span class="keyword">return</span> PageHelper.&lt;Article&gt;builder()</span><br><span class="line">  .rows(articlePage.getContent().stream().peek(x -&gt; x.setCommentCount(commentMapper.countByArticle(x))).collect(Collectors.toList()))</span><br><span class="line">  .total(articlePage.getTotalElements())</span><br><span class="line">  .current(search.getPageNum())</span><br><span class="line">  .totalPage(articlePage.getTotalPages())</span><br><span class="line">  .build();</span><br></pre></td></tr></table></figure><ul><li>首页文章列表展示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">th:each</span>=<span class="string">&quot;article:$&#123;articlePage.rows&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-item lw-posr&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-cover lw-posa lw-xs-hidden&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@defaultImage.cover(article.cover)&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-article-info&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;lw-xs-hidden&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;lw-category&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.category.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/&#123;id&#125;.html(id=$&#123;article.id&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-desc&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.summary()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-text-hidden lw-article-more&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-clock-o lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(article.created,&#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-eye lw-mr5 lw-ml10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.views&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-comment lw-ml10 lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.commentCount&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>分页部分处理</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.totalPage&gt;1&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-pagenation&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != 1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;num:$&#123;#numbers.sequence(1,articlePage.totalPage)&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;articlePage.current eq num&#125;?&#x27;lw-active&#x27;:&#x27;&#x27;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/(pn=$&#123;num&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;num&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;articlePage.current != articlePage.totalPage&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/(pn=$&#123;articlePage.totalPage&#125;)&#125;&quot;</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;上节课我们已经将前台页面公共部分替换成了动态的，但这个时候就有问题了，因为我们每次访问其它页面的时候都会去查多次数据库，这样会加大数据库的压</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>(十三)首页展示及公共部分展示</title>
    <link href="https://study.kevinlu98.cn/2022/10/07/shou-ye-zhan-shi-ji-gong-gong-bu-fen-zhan-shi.html"/>
    <id>https://study.kevinlu98.cn/2022/10/07/shou-ye-zhan-shi-ji-gong-gong-bu-fen-zhan-shi.html</id>
    <published>2022-10-06T18:21:00.000Z</published>
    <updated>2023-01-17T11:51:09.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>上节课我们把页面还有公共部分做了抽取，这节课就把首页展示的东西以及公共区域展示的东西处理一下</p><h2 id="公共部分"><a href="#公共部分" class="headerlink" title="公共部分"></a>公共部分</h2><ul><li>定义<code>IndexController</code>公共返回<code>Model</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indexModel</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  <span class="comment">// todo 可以在这里定义这个controller公用的model的属性</span></span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>底部的友情链接</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.addAttribute(<span class="string">&quot;friendlies&quot;</span>, friendlyService.list());</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--/*@thymesVar id=&quot;friendlies&quot; type=&quot;java.util.List&lt;cn.kevinlu98.pojo.Friendly&gt;&quot;*/--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:each</span>=<span class="string">&quot;friendly:$&#123;friendlies&#125;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;friendly.link&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;friendly.title&#125;&quot;</span>&gt;</span>冷文学习者<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>顶部导航条部分</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Mapper层 </span></span><br><span class="line">List&lt;Navigation&gt; <span class="title function_">findAllByEnableOrderByOrderedAsc</span><span class="params">(Boolean enable)</span>;</span><br><span class="line"><span class="comment">//Service层</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Navigation&gt; <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mapper.findAllByEnableOrderByOrderedAsc(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//IndexModel</span></span><br><span class="line">model.addAttribute(<span class="string">&quot;navigations&quot;</span>, navigationService.show());</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-nav lw-posa&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-home&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--/*@thymesVar id=&quot;navigations&quot; type=&quot;java.util.List&lt;cn.kevinlu98.pojo.Navigation&gt;&quot;*/--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:each</span>=<span class="string">&quot;navigation:$&#123;navigations&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;navigation.link&#125;&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">th:target</span>=<span class="string">&quot;$&#123;navigation.linkMode&#125;?&#x27;_blank&#x27;:&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;navigation.icon.length()&gt;0&#125;&quot;</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;&#x27;fa fa-&#x27;+navigation.icon&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;navigation.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;lw-fr lw-search-btn&quot;</span> <span class="attr">style</span>=<span class="string">&quot;padding: 0;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-search&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>右侧标签部分：我们希望这里可以随机展示30个标签，所以这里可以利用数据库的<code>order by rand()</code> 来进行排序</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Mapper</span></span><br><span class="line"><span class="meta">@Query(value = &quot;select * from blog_tag order by rand() limit ?1&quot;, nativeQuery = true)</span></span><br><span class="line">List&lt;Tag&gt; <span class="title function_">findRandom</span><span class="params">(<span class="type">int</span> length)</span>;</span><br><span class="line"><span class="comment">//Service</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Tag&gt; <span class="title function_">list</span><span class="params">(<span class="type">int</span> length)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mapper.findRandom(length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//IndexModel</span></span><br><span class="line">model.addAttribute(<span class="string">&quot;tags&quot;</span>, tagService.list(<span class="number">30</span>));</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-right-item lw-tag-cloud&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-tags lw-mr5&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>标签云<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--/*@thymesVar id=&quot;tags&quot; type=&quot;java.util.List&lt;cn.kevinlu98.pojo.Tag&gt;&quot;*/--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:each</span>=<span class="string">&quot;tag:$&#123;tags&#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:title</span>=<span class="string">&quot;$&#123;tag.name&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;tag.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义默认图片处理类：因为我们的文章有可能是没有封面的，所以我们来定义一个处理类处理一下封面为空的文章封面，给其一个默认图片，当然，默认图片我们也是要做成可配置的，我们可以自定义默认图片列表</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.kevinlu98.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author: Mr丶冷文</span></span><br><span class="line"><span class="comment"> * Date: 2022/10/11 11:54</span></span><br><span class="line"><span class="comment"> * Email: kevinlu98@qq.com</span></span><br><span class="line"><span class="comment"> * Description:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;default-image&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DefaultImage</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; images;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">cover</span><span class="params">(String imgUrl)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmptyOrWhitespace(imgUrl)) &#123;</span><br><span class="line">            <span class="keyword">return</span> images.get((<span class="type">int</span>) (Math.random() * images.size()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> imgUrl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default-image:</span></span><br><span class="line">  <span class="attr">images:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/static/image/1.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/static/image/2.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/static/image/3.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/static/image/4.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/static/image/5.jpg</span></span><br></pre></td></tr></table></figure><ul><li>右侧的热门文章</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Mapper</span></span><br><span class="line"><span class="meta">@Query(value = &quot;select * from blog_article where type = 1 and status = 1 order by views limit ?1&quot;, nativeQuery = true)</span></span><br><span class="line">List&lt;Article&gt; <span class="title function_">hotList</span><span class="params">(<span class="type">int</span> length)</span>;</span><br><span class="line"><span class="comment">//Service</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Article&gt; <span class="title function_">hotList</span><span class="params">(<span class="type">int</span> length)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mapper.hotList(length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//IndexModel</span></span><br><span class="line">model.addAttribute(<span class="string">&quot;hots&quot;</span>, articleService.hotList(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;hot,it:$&#123;hots&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/&#123;id&#125;.html(id=$&#123;hot.id&#125;)&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-hot-img&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label label-danger lw-posa&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;it.index eq 0&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label label-warning lw-posa&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;it.index eq 1&#125;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label label-info lw-posa&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;it.index eq 2&#125;&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label label-default lw-posa&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;it.index &gt; 2&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;it.index+1&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@defaultImage.cover(hot.cover)&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-hot-title&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;hot.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;lw-hot-info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-eye lw-mr5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;hot.views&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>轮播图的展示</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">  model.addAttribute(<span class="string">&quot;banners&quot;</span>,bannerService.list());</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;banner:$&#123;banners&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide lw-posr&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;banner.cover&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;lw-banner-info lw-posa&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;banner.link&#125;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;lw-text-hidden&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label label-danger lw-mr5&quot;</span>&gt;</span>站长推荐<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th:block</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;banner.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th:block</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;banner.summary&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;上节课我们把页面还有公共部分做了抽取，这节课就把首页展示的东西以及公共区域展示的东西处理一下&lt;/p&gt;
&lt;h2 id=&quot;公共部分&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="个人博客项目" scheme="https://study.kevinlu98.cn/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="java" scheme="https://study.kevinlu98.cn/tags/java/"/>
    
    <category term="springboot" scheme="https://study.kevinlu98.cn/tags/springboot/"/>
    
    <category term="个人博客" scheme="https://study.kevinlu98.cn/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
